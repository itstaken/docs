*java.awt.font.NumericShaper.Range* *NumericShaper.Range* ANumericShaper.Rangere

public static enumNumericShaper.Range
  extends    |java.lang.Enum|

|java.awt.font.NumericShaper.Range_Description|
|java.awt.font.NumericShaper.Range_Fields|
|java.awt.font.NumericShaper.Range_Constructors|
|java.awt.font.NumericShaper.Range_Methods|

================================================================================

*java.awt.font.NumericShaper.Range_Methods*
|java.awt.font.NumericShaper.Range.valueOf(String)|
|java.awt.font.NumericShaper.Range.values()|

*java.awt.font.NumericShaper.Range_Description*

ANumericShaper.Rangerepresents a Unicode range of a script having its own 
decimal digits. For example, the (|java.awt.font.NumericShaper.Range|) range 
has the Thai digits, THAI DIGIT ZERO (U+0E50) to THAI DIGIT NINE (U+0E59). 

The Range enum replaces the traditional bit mask-based values (e.g., 
(|java.awt.font.NumericShaper|) ), and supports more Unicode ranges than the 
bit mask-based ones. For example, the following code using the bit mask: 

NumericShaper.getContextualShaper(NumericShaper.ARABIC | NumericShaper.TAMIL, 
NumericShaper.EUROPEAN); 

can be written using this enum as: 

NumericShaper.getContextualShaper(EnumSet.of( NumericShaper.Range.ARABIC, 
NumericShaper.Range.TAMIL), NumericShaper.Range.EUROPEAN); 



*java.awt.font.NumericShaper.Range.valueOf(String)*

public static |java.awt.font.NumericShaper.Range| valueOf(java.lang.String name)





*java.awt.font.NumericShaper.Range.values()*

public static |java.awt.font.NumericShaper.Range|[] values()






