*javax.crypto.spec.DHParameterSpec* *DHParameterSpec* This class specifies the s

public class DHParameterSpec
  extends    |java.lang.Object|
  implements |java.security.spec.AlgorithmParameterSpec|

|javax.crypto.spec.DHParameterSpec_Description|
|javax.crypto.spec.DHParameterSpec_Fields|
|javax.crypto.spec.DHParameterSpec_Constructors|
|javax.crypto.spec.DHParameterSpec_Methods|

================================================================================

*javax.crypto.spec.DHParameterSpec_Constructors*
|javax.crypto.spec.DHParameterSpec(BigInteger,BigInteger)|Constructs a paramete
|javax.crypto.spec.DHParameterSpec(BigInteger,BigInteger,int)|Constructs a para

*javax.crypto.spec.DHParameterSpec_Methods*
|javax.crypto.spec.DHParameterSpec.getG()|Returns the base generator g.
|javax.crypto.spec.DHParameterSpec.getL()|Returns the size in bits, l, of the r
|javax.crypto.spec.DHParameterSpec.getP()|Returns the prime modulus p.

*javax.crypto.spec.DHParameterSpec_Description*

This class specifies the set of parameters used with the Diffie-Hellman 
algorithm, as specified in PKCS #3: Diffie-Hellman Key-Agreement Standard. 

A central authority generates parameters and gives them to the two entities 
seeking to generate a secret key. The parameters are a prime p, a base g, and 
optionally the length in bits of the private value, l. 

It is possible that more than one instance of parameters may be generated by a 
given central authority, and that there may be more than one central authority. 
Indeed, each individual may be its own central authority, with different 
entities having different parameters. 

Note that this class does not perform any validation on specified parameters. 
Thus, the specified values are returned directly even if they are null. 



*javax.crypto.spec.DHParameterSpec(BigInteger,BigInteger)*

public DHParameterSpec(
  java.math.BigInteger p,
  java.math.BigInteger g)

Constructs a parameter set for Diffie-Hellman, using a prime modulus p and a 
base generator g. 

    p - the prime modulus 
    g - the base generator 

*javax.crypto.spec.DHParameterSpec(BigInteger,BigInteger,int)*

public DHParameterSpec(
  java.math.BigInteger p,
  java.math.BigInteger g,
  int l)

Constructs a parameter set for Diffie-Hellman, using a prime modulus p, a base 
generator g, and the size in bits, l, of the random exponent (private value). 

    p - the prime modulus 
    g - the base generator 
    l - the size in bits of the random exponent (private value) 

*javax.crypto.spec.DHParameterSpec.getG()*

public |java.math.BigInteger| getG()

Returns the base generator g. 



    Returns: the base generator g 

*javax.crypto.spec.DHParameterSpec.getL()*

public int getL()

Returns the size in bits, l, of the random exponent (private value). 



    Returns: the size in bits, l, of the random exponent (private value), or 0 if this size 
             has not been set 

*javax.crypto.spec.DHParameterSpec.getP()*

public |java.math.BigInteger| getP()

Returns the prime modulus p. 



    Returns: the prime modulus p 


