*java.awt.peer.TextComponentPeer* *TextComponentPeer* The peer interface forText

public interface interface TextComponentPeer

  implements |java.awt.peer.ComponentPeer|

|java.awt.peer.TextComponentPeer_Description|
|java.awt.peer.TextComponentPeer_Fields|
|java.awt.peer.TextComponentPeer_Constructors|
|java.awt.peer.TextComponentPeer_Methods|

================================================================================

*java.awt.peer.TextComponentPeer_Methods*
|java.awt.peer.TextComponentPeer.getCaretPosition()|Returns the current caret p
|java.awt.peer.TextComponentPeer.getInputMethodRequests()|Returns the input met
|java.awt.peer.TextComponentPeer.getSelectionEnd()|Returns the end index of the
|java.awt.peer.TextComponentPeer.getSelectionStart()|Returns the start index of
|java.awt.peer.TextComponentPeer.getText()|Returns the current content of the t
|java.awt.peer.TextComponentPeer.select(int,int)|Selects an area of the text co
|java.awt.peer.TextComponentPeer.setCaretPosition(int)|Sets the caret position 
|java.awt.peer.TextComponentPeer.setEditable(boolean)|Sets if the text componen
|java.awt.peer.TextComponentPeer.setText(String)|Sets the content for the text 

*java.awt.peer.TextComponentPeer_Description*

The peer interface for (|java.awt.TextComponent|) . 

The peer interfaces are intended only for use in porting the AWT. They are not 
intended for use by application developers, and developers should not implement 
peers nor invoke any of the peer methods directly on the peer instances. 



*java.awt.peer.TextComponentPeer.getCaretPosition()*

public int getCaretPosition()

Returns the current caret position. 



    Returns: the current caret position 

*java.awt.peer.TextComponentPeer.getInputMethodRequests()*

public |java.awt.im.InputMethodRequests| getInputMethodRequests()

Returns the input method requests. 



    Returns: the input method requests 

*java.awt.peer.TextComponentPeer.getSelectionEnd()*

public int getSelectionEnd()

Returns the end index of the current selection. 



    Returns: the end index of the current selection 

*java.awt.peer.TextComponentPeer.getSelectionStart()*

public int getSelectionStart()

Returns the start index of the current selection. 



    Returns: the start index of the current selection 

*java.awt.peer.TextComponentPeer.getText()*

public |java.lang.String| getText()

Returns the current content of the text component. 



    Returns: the current content of the text component 

*java.awt.peer.TextComponentPeer.select(int,int)*

public void select(
  int selStart,
  int selEnd)

Selects an area of the text component. 


    selStart - the start index of the new selection 
    selEnd - the end index of the new selection 

*java.awt.peer.TextComponentPeer.setCaretPosition(int)*

public void setCaretPosition(int pos)

Sets the caret position of the text component. 


    pos - the caret position to set 

*java.awt.peer.TextComponentPeer.setEditable(boolean)*

public void setEditable(boolean editable)

Sets if the text component should be editable or not. 


    editable - {@code true} for editable text components, {@code false} for non-editable text 
       components 

*java.awt.peer.TextComponentPeer.setText(String)*

public void setText(java.lang.String l)

Sets the content for the text component. 


    l - the content to set 


