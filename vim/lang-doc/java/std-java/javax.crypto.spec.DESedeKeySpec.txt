*javax.crypto.spec.DESedeKeySpec* *DESedeKeySpec* This class specifies a DES-EDE

public class DESedeKeySpec
  extends    |java.lang.Object|
  implements |java.security.spec.KeySpec|

|javax.crypto.spec.DESedeKeySpec_Description|
|javax.crypto.spec.DESedeKeySpec_Fields|
|javax.crypto.spec.DESedeKeySpec_Constructors|
|javax.crypto.spec.DESedeKeySpec_Methods|

================================================================================

*javax.crypto.spec.DESedeKeySpec_Fields*
|int_javax.crypto.spec.DESedeKeySpec.DES_EDE_KEY_LEN|

*javax.crypto.spec.DESedeKeySpec_Constructors*
|javax.crypto.spec.DESedeKeySpec(byte[])|Creates a DESedeKeySpec object using t
|javax.crypto.spec.DESedeKeySpec(byte[],int)|Creates a DESedeKeySpec object usi

*javax.crypto.spec.DESedeKeySpec_Methods*
|javax.crypto.spec.DESedeKeySpec.getKey()|Returns the DES-EDE key.
|javax.crypto.spec.DESedeKeySpec.isParityAdjusted(byte[],int)|Checks if the giv

*javax.crypto.spec.DESedeKeySpec_Description*

This class specifies a DES-EDE ("triple-DES") key. 



*int_javax.crypto.spec.DESedeKeySpec.DES_EDE_KEY_LEN*

The constant which defines the length of a DESede key in bytes. 



*javax.crypto.spec.DESedeKeySpec(byte[])*

public DESedeKeySpec(byte[] key)
  throws |java.security.InvalidKeyException|
         
Creates a DESedeKeySpec object using the first 24 bytes in key as the key 
material for the DES-EDE key. 

The bytes that constitute the DES-EDE key are those between key[0] and key[23] 
inclusive 

    key - the buffer with the DES-EDE key material. The first 24 bytes of the buffer are 
       copied to protect against subsequent modification. 

*javax.crypto.spec.DESedeKeySpec(byte[],int)*

public DESedeKeySpec(
  byte[] key,
  int offset)
  throws |java.security.InvalidKeyException|
         
Creates a DESedeKeySpec object using the first 24 bytes in key, beginning at 
offset inclusive, as the key material for the DES-EDE key. 

The bytes that constitute the DES-EDE key are those between key[offset] and 
key[offset+23] inclusive. 

    key - the buffer with the DES-EDE key material. The first 24 bytes of the buffer 
       beginning at offset inclusive are copied to protect against subsequent 
       modification. 
    offset - the offset in key, where the DES-EDE key material starts. 

*javax.crypto.spec.DESedeKeySpec.getKey()*

public byte[] getKey()

Returns the DES-EDE key. 



    Returns: the DES-EDE key. Returns a new array each time this method is called. 

*javax.crypto.spec.DESedeKeySpec.isParityAdjusted(byte[],int)*

public static boolean isParityAdjusted(
  byte[] key,
  int offset)
  throws |java.security.InvalidKeyException|
         
Checks if the given DES-EDE key, starting at offset inclusive, is 
parity-adjusted. 


    key - a byte array which holds the key value 
    offset - the offset into the byte array 

    Returns: true if the given DES-EDE key is parity-adjusted, false otherwise 


