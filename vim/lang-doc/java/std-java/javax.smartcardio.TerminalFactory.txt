*javax.smartcardio.TerminalFactory* *TerminalFactory* A factory for CardTerminal

public final class TerminalFactory
  extends    |java.lang.Object|

|javax.smartcardio.TerminalFactory_Description|
|javax.smartcardio.TerminalFactory_Fields|
|javax.smartcardio.TerminalFactory_Constructors|
|javax.smartcardio.TerminalFactory_Methods|

================================================================================

*javax.smartcardio.TerminalFactory_Methods*
|javax.smartcardio.TerminalFactory.getDefault()|Returns the default TerminalFac
|javax.smartcardio.TerminalFactory.getDefaultType()|Get the default TerminalFac
|javax.smartcardio.TerminalFactory.getInstance(String,Object)|Returns a Termina
|javax.smartcardio.TerminalFactory.getInstance(String,Object,Provider)|Returns 
|javax.smartcardio.TerminalFactory.getInstance(String,Object,String)|Returns a 
|javax.smartcardio.TerminalFactory.getProvider()|Returns the provider of this T
|javax.smartcardio.TerminalFactory.getType()|Returns the type of this TerminalF
|javax.smartcardio.TerminalFactory.terminals()|Returns a new CardTerminals obje
|javax.smartcardio.TerminalFactory.toString()|Returns a string representation o

*javax.smartcardio.TerminalFactory_Description*

A factory for CardTerminal objects. 

It allows an application to 

obtain a TerminalFactory by calling one of the static factory methods in this 
class ( (|javax.smartcardio.TerminalFactory|) or 
getInstance()(|javax.smartcardio.TerminalFactory|) ). use this TerminalFactory 
object to access the CardTerminals by calling the 
(|javax.smartcardio.TerminalFactory|) method. 

Each TerminalFactory has a type indicating how it was implemented. It must be 
specified when the implementation is obtained using a 
getInstance()(|javax.smartcardio.TerminalFactory|) method and can be retrieved 
via the (|javax.smartcardio.TerminalFactory|) method. 

The following standard type names have been defined: 

PC/SC an implementation that calls into the PC/SC Smart Card stack of the host 
platform. Implementations do not require parameters and accept "null" as 
argument in the getInstance() calls. None an implementation that does not 
supply any CardTerminals. On platforms that do not support other 
implementations, (|javax.smartcardio.TerminalFactory|) returns None and 
(|javax.smartcardio.TerminalFactory|) returns an instance of a None 
TerminalFactory. Factories of this type cannot be obtained by calling the 
getInstance() methods. 

Additional standard types may be defined in the future. 

Note: Provider implementations that accept initialization parameters via the 
getInstance() methods are strongly encouraged to use a (|java.util.Properties|) 
object as the representation for String name-value pair based parameters 
whenever possible. This allows applications to more easily interoperate with 
multiple providers than if each provider used different provider specific class 
as parameters. 

TerminalFactory utilizes an extensible service provider framework. Service 
providers that wish to add a new implementation should see the 
(|javax.smartcardio.TerminalFactorySpi|) class for more information. 



*javax.smartcardio.TerminalFactory.getDefault()*

public static |javax.smartcardio.TerminalFactory| getDefault()

Returns the default TerminalFactory instance. See 
(|javax.smartcardio.TerminalFactory|) for more information. 

A default TerminalFactory is always available. However, depending on the 
implementation, it may not offer any terminals. 



    Returns: the default TerminalFactory 

*javax.smartcardio.TerminalFactory.getDefaultType()*

public static |java.lang.String| getDefaultType()

Get the default TerminalFactory type. 

It is determined as follows: 

when this class is initialized, the system property 
javax.smartcardio.TerminalFactory.DefaultType is examined. If it is set, a 
TerminalFactory of this type is instantiated by calling the 
getInstance(String,Object)(|javax.smartcardio.TerminalFactory|) method passing 
null as the value for params. If the call succeeds, the type becomes the 
default type and the factory becomes the 
default(|javax.smartcardio.TerminalFactory|) factory. 

If the system property is not set or the getInstance() call fails for any 
reason, the system defaults to an implementation specific default type and 
TerminalFactory. 



    Returns: the default TerminalFactory type 

*javax.smartcardio.TerminalFactory.getInstance(String,Object)*

public static |javax.smartcardio.TerminalFactory| getInstance(
  java.lang.String type,
  java.lang.Object params)
  throws |java.security.NoSuchAlgorithmException|
         
Returns a TerminalFactory of the specified type that is initialized with the 
specified parameters. 

This method traverses the list of registered security Providers, starting with 
the most preferred Provider. A new TerminalFactory object encapsulating the 
TerminalFactorySpi implementation from the first Provider that supports the 
specified type is returned. 

Note that the list of registered providers may be retrieved via the 
Security.getProviders()(|java.security.Security|) method. 

The TerminalFactory is initialized with the specified parameters Object. The 
type of parameters needed may vary between different types of TerminalFactorys. 


    type - the type of the requested TerminalFactory 
    params - the parameters to pass to the TerminalFactorySpi implementation, or null if no 
       parameters are needed 

    Returns: a TerminalFactory of the specified type 

*javax.smartcardio.TerminalFactory.getInstance(String,Object,Provider)*

public static |javax.smartcardio.TerminalFactory| getInstance(
  java.lang.String type,
  java.lang.Object params,
  java.security.Provider provider)
  throws |java.security.NoSuchAlgorithmException|
         
Returns a TerminalFactory of the specified type that is initialized with the 
specified parameters. 

A new TerminalFactory object encapsulating the TerminalFactorySpi 
implementation from the specified provider object is returned. Note that the 
specified provider object does not have to be registered in the provider list. 

The TerminalFactory is initialized with the specified parameters Object. The 
type of parameters needed may vary between different types of TerminalFactorys. 


    type - the type of the requested TerminalFactory 
    params - the parameters to pass to the TerminalFactorySpi implementation, or null if no 
       parameters are needed 
    provider - the provider 

    Returns: a TerminalFactory of the specified type 

*javax.smartcardio.TerminalFactory.getInstance(String,Object,String)*

public static |javax.smartcardio.TerminalFactory| getInstance(
  java.lang.String type,
  java.lang.Object params,
  java.lang.String provider)
  throws |java.security.NoSuchAlgorithmException|
         |java.security.NoSuchProviderException|
         
Returns a TerminalFactory of the specified type that is initialized with the 
specified parameters. 

A new TerminalFactory object encapsulating the TerminalFactorySpi 
implementation from the specified provider is returned. The specified provider 
must be registered in the security provider list. 

Note that the list of registered providers may be retrieved via the 
Security.getProviders()(|java.security.Security|) method. 

The TerminalFactory is initialized with the specified parameters Object. The 
type of parameters needed may vary between different types of TerminalFactorys. 


    type - the type of the requested TerminalFactory 
    params - the parameters to pass to the TerminalFactorySpi implementation, or null if no 
       parameters are needed 
    provider - the name of the provider 

    Returns: a TerminalFactory of the specified type 

*javax.smartcardio.TerminalFactory.getProvider()*

public |java.security.Provider| getProvider()

Returns the provider of this TerminalFactory. 



    Returns: the provider of this TerminalFactory. 

*javax.smartcardio.TerminalFactory.getType()*

public |java.lang.String| getType()

Returns the type of this TerminalFactory. This is the value that was specified 
in the getInstance() method that returned this object. 



    Returns: the type of this TerminalFactory 

*javax.smartcardio.TerminalFactory.terminals()*

public |javax.smartcardio.CardTerminals| terminals()

Returns a new CardTerminals object encapsulating the terminals supported by 
this factory. See the class comment of the (|javax.smartcardio.CardTerminals|) 
class regarding how the returned objects can be shared and reused. 



    Returns: a new CardTerminals object encapsulating the terminals supported by this 
             factory. 

*javax.smartcardio.TerminalFactory.toString()*

public |java.lang.String| toString()

Returns a string representation of this TerminalFactory. 



    Returns: a string representation of this TerminalFactory. 


