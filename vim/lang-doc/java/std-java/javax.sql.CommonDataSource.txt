*javax.sql.CommonDataSource* *CommonDataSource* Interface that defines the metho

public interface interface CommonDataSource


|javax.sql.CommonDataSource_Description|
|javax.sql.CommonDataSource_Fields|
|javax.sql.CommonDataSource_Constructors|
|javax.sql.CommonDataSource_Methods|

================================================================================

*javax.sql.CommonDataSource_Methods*
|javax.sql.CommonDataSource.getLoginTimeout()|Gets the maximum time in seconds 
|javax.sql.CommonDataSource.getLogWriter()|Retrieves the log writer for this Da
|javax.sql.CommonDataSource.getParentLogger()|Return the parent Logger of all t
|javax.sql.CommonDataSource.setLoginTimeout(int)|Sets the maximum time in secon
|javax.sql.CommonDataSource.setLogWriter(PrintWriter)|Sets the log writer for t

*javax.sql.CommonDataSource_Description*

Interface that defines the methods which are common between DataSource, 
XADataSource and ConnectionPoolDataSource. 



*javax.sql.CommonDataSource.getLoginTimeout()*

public int getLoginTimeout()
  throws |java.sql.SQLException|
         
Gets the maximum time in seconds that this data source can wait while 
attempting to connect to a database. A value of zero means that the timeout is 
the default system timeout if there is one; otherwise, it means that there is 
no timeout. When a DataSource object is created, the login timeout is initially 
zero. 



    Returns: the data source login time limit 

*javax.sql.CommonDataSource.getLogWriter()*

public |java.io.PrintWriter| getLogWriter()
  throws |java.sql.SQLException|
         
Retrieves the log writer for this DataSource object. 

The log writer is a character output stream to which all logging and tracing 
messages for this data source will be printed. This includes messages printed 
by the methods of this object, messages printed by methods of other objects 
manufactured by this object, and so on. Messages printed to a data source 
specific log writer are not printed to the log writer associated with the 
java.sql.DriverManager class. When a DataSource object is created, the log 
writer is initially null; in other words, the default is for logging to be 
disabled. 



    Returns: the log writer for this data source or null if logging is disabled 

*javax.sql.CommonDataSource.getParentLogger()*

public |java.util.logging.Logger| getParentLogger()
  throws |java.sql.SQLFeatureNotSupportedException|
         
Return the parent Logger of all the Loggers used by this data source. This 
should be the Logger farthest from the root Logger that is still an ancestor of 
all of the Loggers used by this data source. Configuring this Logger will 
affect all of the log messages generated by the data source. In the worst case, 
this may be the root Logger. 



    Returns: the parent Logger for this data source 

*javax.sql.CommonDataSource.setLoginTimeout(int)*

public void setLoginTimeout(int seconds)
  throws |java.sql.SQLException|
         
Sets the maximum time in seconds that this data source will wait while 
attempting to connect to a database. A value of zero specifies that the timeout 
is the default system timeout if there is one; otherwise, it specifies that 
there is no timeout. When a DataSource object is created, the login timeout is 
initially zero. 


    seconds - the data source login time limit 

*javax.sql.CommonDataSource.setLogWriter(PrintWriter)*

public void setLogWriter(java.io.PrintWriter out)
  throws |java.sql.SQLException|
         
Sets the log writer for this DataSource object to the given java.io.PrintWriter 
object. 

The log writer is a character output stream to which all logging and tracing 
messages for this data source will be printed. This includes messages printed 
by the methods of this object, messages printed by methods of other objects 
manufactured by this object, and so on. Messages printed to a data source- 
specific log writer are not printed to the log writer associated with the 
java.sql.DriverManager class. When a DataSource object is created the log 
writer is initially null; in other words, the default is for logging to be 
disabled. 


    out - the new log writer; to disable logging, set to null 


