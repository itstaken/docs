*android.security.Credentials* *Credentials* 

public class Credentials
  extends    |java.lang.Object|

|android.security.Credentials_Description|
|android.security.Credentials_Fields|
|android.security.Credentials_Constructors|
|android.security.Credentials_Methods|

================================================================================

*android.security.Credentials_Fields*
|java.lang.String_android.security.Credentials.CA_CERTIFICATE|
|java.lang.String_android.security.Credentials.EXTENSION_CER|
|java.lang.String_android.security.Credentials.EXTENSION_CRT|
|java.lang.String_android.security.Credentials.EXTENSION_P12|
|java.lang.String_android.security.Credentials.EXTENSION_PFX|
|java.lang.String_android.security.Credentials.EXTRA_CA_CERTIFICATES_DATA|
|java.lang.String_android.security.Credentials.EXTRA_CA_CERTIFICATES_NAME|
|java.lang.String_android.security.Credentials.EXTRA_INSTALL_AS_UID|
|java.lang.String_android.security.Credentials.EXTRA_PRIVATE_KEY|
|java.lang.String_android.security.Credentials.EXTRA_PUBLIC_KEY|
|java.lang.String_android.security.Credentials.EXTRA_USER_CERTIFICATE_DATA|
|java.lang.String_android.security.Credentials.EXTRA_USER_CERTIFICATE_NAME|
|java.lang.String_android.security.Credentials.EXTRA_USER_PRIVATE_KEY_DATA|
|java.lang.String_android.security.Credentials.EXTRA_USER_PRIVATE_KEY_NAME|
|java.lang.String_android.security.Credentials.INSTALL_ACTION|
|java.lang.String_android.security.Credentials.INSTALL_AS_USER_ACTION|
|java.lang.String_android.security.Credentials.LOCKDOWN_VPN|
|java.lang.String_android.security.Credentials.UNLOCK_ACTION|
|java.lang.String_android.security.Credentials.USER_CERTIFICATE|
|java.lang.String_android.security.Credentials.USER_PRIVATE_KEY|
|java.lang.String_android.security.Credentials.VPN|
|java.lang.String_android.security.Credentials.WIFI|

*android.security.Credentials_Constructors*
|android.security.Credentials()|

*android.security.Credentials_Methods*
|android.security.Credentials.convertFromPem(byte[])|Convert objects from PEM f
|android.security.Credentials.convertToPem(Certificate...)|Convert objects to a
|android.security.Credentials.getInstance()|
|android.security.Credentials.install(Context)|
|android.security.Credentials.install(Context,KeyPair)|
|android.security.Credentials.install(Context,String,byte[])|
|android.security.Credentials.unlock(Context)|

*android.security.Credentials_Description*





*java.lang.String_android.security.Credentials.CA_CERTIFICATE*

Key prefix for CA certificates. 


*java.lang.String_android.security.Credentials.EXTENSION_CER*




*java.lang.String_android.security.Credentials.EXTENSION_CRT*




*java.lang.String_android.security.Credentials.EXTENSION_P12*




*java.lang.String_android.security.Credentials.EXTENSION_PFX*




*java.lang.String_android.security.Credentials.EXTRA_CA_CERTIFICATES_DATA*

Intent extra: data for CA certificate chain in PEM-encoded X.509. 


*java.lang.String_android.security.Credentials.EXTRA_CA_CERTIFICATES_NAME*

Intent extra: name for CA certificate chain 


*java.lang.String_android.security.Credentials.EXTRA_INSTALL_AS_UID*

Intent extra: install the certificate bundle as this UID instead of system. 


*java.lang.String_android.security.Credentials.EXTRA_PRIVATE_KEY*

Data type for private keys. 


*java.lang.String_android.security.Credentials.EXTRA_PUBLIC_KEY*

Data type for public keys. 


*java.lang.String_android.security.Credentials.EXTRA_USER_CERTIFICATE_DATA*

Intent extra: data for the user's certificate in PEM-encoded X.509. 


*java.lang.String_android.security.Credentials.EXTRA_USER_CERTIFICATE_NAME*

Intent extra: name for the user's certificate. 


*java.lang.String_android.security.Credentials.EXTRA_USER_PRIVATE_KEY_DATA*

Intent extra: data for the user's private key in PEM-encoded PKCS#8. 


*java.lang.String_android.security.Credentials.EXTRA_USER_PRIVATE_KEY_NAME*

Intent extra: name for the user's private key. 


*java.lang.String_android.security.Credentials.INSTALL_ACTION*




*java.lang.String_android.security.Credentials.INSTALL_AS_USER_ACTION*




*java.lang.String_android.security.Credentials.LOCKDOWN_VPN*

Key containing suffix of lockdown VPN profile. 


*java.lang.String_android.security.Credentials.UNLOCK_ACTION*




*java.lang.String_android.security.Credentials.USER_CERTIFICATE*

Key prefix for user certificates. 


*java.lang.String_android.security.Credentials.USER_PRIVATE_KEY*

Key prefix for user private keys. 


*java.lang.String_android.security.Credentials.VPN*

Key prefix for VPN. 


*java.lang.String_android.security.Credentials.WIFI*

Key prefix for WIFI. 



*android.security.Credentials()*

public Credentials()




*android.security.Credentials.convertFromPem(byte[])*

public static |java.util.List|<X509Certificate> convertFromPem(byte[] bytes)
  throws |java.security.cert.CertificateException|
         |java.io.IOException|
         
Convert objects from PEM format, which is used for CA_CERTIFICATE and 
USER_CERTIFICATE entries. 



*android.security.Credentials.convertToPem(Certificate...)*

public static byte[] convertToPem(java.security.cert.Certificate[] objects)
  throws |java.security.cert.CertificateEncodingException|
         |java.io.IOException|
         
Convert objects to a PEM format which is used for CA_CERTIFICATE and 
USER_CERTIFICATE entries. 



*android.security.Credentials.getInstance()*

public static |android.security.Credentials| getInstance()





*android.security.Credentials.install(Context)*

public void install(Context context)





*android.security.Credentials.install(Context,KeyPair)*

public void install(
  Context context,
  java.security.KeyPair pair)





*android.security.Credentials.install(Context,String,byte[])*

public void install(
  Context context,
  java.lang.String type,
  byte[] value)





*android.security.Credentials.unlock(Context)*

public void unlock(Context context)






