*android.security.KeyStoreParameter* *KeyStoreParameter* This provides the optio

public final class KeyStoreParameter
  extends    |java.lang.Object|
  implements |java.security.KeyStore.ProtectionParameter|

|android.security.KeyStoreParameter_Description|
|android.security.KeyStoreParameter_Fields|
|android.security.KeyStoreParameter_Constructors|
|android.security.KeyStoreParameter_Methods|

================================================================================

*android.security.KeyStoreParameter_Methods*
|android.security.KeyStoreParameter.getFlags()|
|android.security.KeyStoreParameter.isEncryptionRequired()|Returnstrueif this p

*android.security.KeyStoreParameter_Description*

This provides the optional parameters that can be specified forKeyStoreentries 
that work with <a href="guide/topics/security/keystore.html">Android KeyStore 
facility. The Android KeyStore facility is accessed through a 
(|java.security.KeyStore|) API using theAndroidKeyStoreprovider. 
Thecontextpassed in may be used to pop up some UI to ask the user to unlock or 
initialize the Android KeyStore facility. 

Any entries placed in theKeyStoremay be retrieved later. Note that there is 
only one logical instance of theKeyStoreper application UID so apps using 
thesharedUidfacility will also share aKeyStore. 

Keys may be generated using the (|java.security.KeyPairGenerator|) facility 
with a (|android.security.KeyPairGeneratorSpec|) to specify the entry'salias. A 
self-signed X.509 certificate will be attached to generated entries, but that 
may be replaced at a later time by a certificate signed by a real Certificate 
Authority. 



*android.security.KeyStoreParameter.getFlags()*

public int getFlags()





*android.security.KeyStoreParameter.isEncryptionRequired()*

public boolean isEncryptionRequired()

Returnstrueif this parameter requires entries to be encrypted on the disk. 




