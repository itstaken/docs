*java.sql.SQLTransientConnectionException* *SQLTransientConnectionException* The

public class SQLTransientConnectionException
  extends    |java.sql.SQLTransientException|

|java.sql.SQLTransientConnectionException_Description|
|java.sql.SQLTransientConnectionException_Fields|
|java.sql.SQLTransientConnectionException_Constructors|
|java.sql.SQLTransientConnectionException_Methods|

================================================================================

*java.sql.SQLTransientConnectionException_Constructors*
|java.sql.SQLTransientConnectionException()|Constructs a SQLTransientConnection
|java.sql.SQLTransientConnectionException(String)|Constructs a SQLTransientConn
|java.sql.SQLTransientConnectionException(String,String)|Constructs a SQLTransi
|java.sql.SQLTransientConnectionException(String,String,int)|Constructs a SQLTr
|java.sql.SQLTransientConnectionException(String,String,int,Throwable)|Construc
|java.sql.SQLTransientConnectionException(String,String,Throwable)|Constructs a
|java.sql.SQLTransientConnectionException(String,Throwable)|Constructs a SQLTra
|java.sql.SQLTransientConnectionException(Throwable)|Constructs a SQLTransientC

*java.sql.SQLTransientConnectionException_Description*

The subclass of (|java.sql.SQLException|) for the SQLState class value '08', or 
under vendor-specified conditions. This indicates that the connection operation 
that failed might be able to succeed if the operation is retried without any 
application-level changes. 

Please consult your driver vendor documentation for the vendor-specified 
conditions for which this Exception may be thrown. 



*java.sql.SQLTransientConnectionException()*

public SQLTransientConnectionException()

Constructs a SQLTransientConnectionException object. The reason, SQLState are 
initialized to null and the vendor code is initialized to 0. 

The cause is not initialized, and may subsequently be initialized by a call to 
the (|java.lang.Throwable|) method. 


*java.sql.SQLTransientConnectionException(String)*

public SQLTransientConnectionException(java.lang.String reason)

Constructs a SQLTransientConnectionException object with a given reason. The 
SQLState is initialized to null and the vender code is initialized to 0. 

The cause is not initialized, and may subsequently be initialized by a call to 
the (|java.lang.Throwable|) method. 

    reason - a description of the exception 

*java.sql.SQLTransientConnectionException(String,String)*

public SQLTransientConnectionException(
  java.lang.String reason,
  java.lang.String SQLState)

Constructs a SQLTransientConnectionException object with a given reason and 
SQLState. 

The cause is not initialized, and may subsequently be initialized by a call to 
the (|java.lang.Throwable|) method. The vendor code is initialized to 0. 

    reason - a description of the exception 
    SQLState - an XOPEN or SQL:2003 code identifying the exception 

*java.sql.SQLTransientConnectionException(String,String,int)*

public SQLTransientConnectionException(
  java.lang.String reason,
  java.lang.String SQLState,
  int vendorCode)

Constructs a SQLTransientConnectionException object with a given reason, 
SQLState and vendorCode. 

The cause is not initialized, and may subsequently be initialized by a call to 
the (|java.lang.Throwable|) method. 

    reason - a description of the exception 
    SQLState - an XOPEN or SQL:2003 code identifying the exception 
    vendorCode - a database vendor specific exception code 

*java.sql.SQLTransientConnectionException(String,String,int,Throwable)*

public SQLTransientConnectionException(
  java.lang.String reason,
  java.lang.String SQLState,
  int vendorCode,
  java.lang.Throwable cause)

Constructs a SQLTransientConnectionException object with a given reason, 
SQLState, vendorCode and cause. 

    reason - a description of the exception 
    SQLState - an XOPEN or SQL:2003 code identifying the exception 
    vendorCode - a database vendor-specific exception code 
    cause - the underlying reason for this SQLException (which is saved for later retrieval 
       by the getCause() method); may be null indicating the cause is 
       non-existent or unknown. 

*java.sql.SQLTransientConnectionException(String,String,Throwable)*

public SQLTransientConnectionException(
  java.lang.String reason,
  java.lang.String SQLState,
  java.lang.Throwable cause)

Constructs a SQLTransientConnectionException object with a given reason, 
SQLState and cause. The vendor code is initialized to 0. 

    reason - a description of the exception. 
    SQLState - an XOPEN or SQL:2003 code identifying the exception 
    cause - the underlying reason for this SQLException (which is saved for later retrieval 
       by the getCause() method); may be null indicating the cause is 
       non-existent or unknown. 

*java.sql.SQLTransientConnectionException(String,Throwable)*

public SQLTransientConnectionException(
  java.lang.String reason,
  java.lang.Throwable cause)

Constructs a SQLTransientConnectionException object with a given reason and 
cause. The SQLState is initialized to null and the vendor code is initialized 
to 0. 

    reason - a description of the exception. 
    cause - the underlying reason for this SQLException(which is saved for later retrieval 
       by the getCause() method); may be null indicating the cause is 
       non-existent or unknown. 

*java.sql.SQLTransientConnectionException(Throwable)*

public SQLTransientConnectionException(java.lang.Throwable cause)

Constructs a SQLTransientConnectionException object with a given cause. The 
SQLState is initialized to null and the vendor code is initialized to 0. The 
reason is initialized to null if cause==null or to cause.toString() if 
cause!=null. 

    cause - the underlying reason for this SQLException (which is saved for later retrieval 
       by the getCause() method); may be null indicating the cause is 
       non-existent or unknown. 

