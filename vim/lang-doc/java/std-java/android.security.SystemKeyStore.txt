*android.security.SystemKeyStore* *SystemKeyStore* 

public class SystemKeyStore
  extends    |java.lang.Object|

|android.security.SystemKeyStore_Description|
|android.security.SystemKeyStore_Fields|
|android.security.SystemKeyStore_Constructors|
|android.security.SystemKeyStore_Methods|

================================================================================

*android.security.SystemKeyStore_Methods*
|android.security.SystemKeyStore.deleteKey(String)|
|android.security.SystemKeyStore.generateNewKey(int,String,String)|
|android.security.SystemKeyStore.generateNewKeyHexString(int,String,String)|
|android.security.SystemKeyStore.getInstance()|
|android.security.SystemKeyStore.retrieveKey(String)|
|android.security.SystemKeyStore.retrieveKeyHexString(String)|
|android.security.SystemKeyStore.toHexString(byte[])|

*android.security.SystemKeyStore_Description*





*android.security.SystemKeyStore.deleteKey(String)*

public void deleteKey(java.lang.String keyName)





*android.security.SystemKeyStore.generateNewKey(int,String,String)*

public byte[] generateNewKey(
  int numBits,
  java.lang.String algName,
  java.lang.String keyName)
  throws |java.security.NoSuchAlgorithmException|
         




*android.security.SystemKeyStore.generateNewKeyHexString(int,String,String)*

public |java.lang.String| generateNewKeyHexString(
  int numBits,
  java.lang.String algName,
  java.lang.String keyName)
  throws |java.security.NoSuchAlgorithmException|
         




*android.security.SystemKeyStore.getInstance()*

public static |android.security.SystemKeyStore| getInstance()





*android.security.SystemKeyStore.retrieveKey(String)*

public byte[] retrieveKey(java.lang.String keyName)
  throws |java.io.IOException|
         




*android.security.SystemKeyStore.retrieveKeyHexString(String)*

public |java.lang.String| retrieveKeyHexString(java.lang.String keyName)
  throws |java.io.IOException|
         




*android.security.SystemKeyStore.toHexString(byte[])*

public static |java.lang.String| toHexString(byte[] keyData)






