*javax.net.ssl.SSLServerSocketFactory* *SSLServerSocketFactory* SSLServerSocketF

public abstract class SSLServerSocketFactory
  extends    |javax.net.ServerSocketFactory|

|javax.net.ssl.SSLServerSocketFactory_Description|
|javax.net.ssl.SSLServerSocketFactory_Fields|
|javax.net.ssl.SSLServerSocketFactory_Constructors|
|javax.net.ssl.SSLServerSocketFactory_Methods|

================================================================================

*javax.net.ssl.SSLServerSocketFactory_Constructors*
|javax.net.ssl.SSLServerSocketFactory()|Constructor is used only by subclasses.

*javax.net.ssl.SSLServerSocketFactory_Methods*
|javax.net.ssl.SSLServerSocketFactory.getDefault()|Returns the default SSL serv
|javax.net.ssl.SSLServerSocketFactory.getDefaultCipherSuites()|Returns the list
|javax.net.ssl.SSLServerSocketFactory.getSupportedCipherSuites()|Returns the na

*javax.net.ssl.SSLServerSocketFactory_Description*

SSLServerSocketFactorys create SSLServerSockets. 



*javax.net.ssl.SSLServerSocketFactory()*

protected SSLServerSocketFactory()

Constructor is used only by subclasses. 


*javax.net.ssl.SSLServerSocketFactory.getDefault()*

public static synchronized |javax.net.ServerSocketFactory| getDefault()

Returns the default SSL server socket factory. 

The first time this method is called, the security property 
"ssl.ServerSocketFactory.provider" is examined. If it is non-null, a class by 
that name is loaded and instantiated. If that is successful and the object is 
an instance of SSLServerSocketFactory, it is made the default SSL server socket 
factory. 

Otherwise, this method returns 
SSLContext.getDefault().getServerSocketFactory(). If that call fails, an 
inoperative factory is returned. 



    Returns: the default ServerSocketFactory 

*javax.net.ssl.SSLServerSocketFactory.getDefaultCipherSuites()*

public abstract |java.lang.String|[] getDefaultCipherSuites()

Returns the list of cipher suites which are enabled by default. Unless a 
different list is enabled, handshaking on an SSL connection will use one of 
these cipher suites. The minimum quality of service for these defaults requires 
confidentiality protection and server authentication (that is, no anonymous 
cipher suites). 



    Returns: array of the cipher suites enabled by default 

*javax.net.ssl.SSLServerSocketFactory.getSupportedCipherSuites()*

public abstract |java.lang.String|[] getSupportedCipherSuites()

Returns the names of the cipher suites which could be enabled for use on an SSL 
connection created by this factory. Normally, only a subset of these will 
actually be enabled by default, since this list may include cipher suites which 
do not meet quality of service requirements for those defaults. Such cipher 
suites are useful in specialized applications. 



    Returns: an array of cipher suite names 


