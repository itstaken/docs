*android.security.AndroidKeyStore* *AndroidKeyStore* A java.security.KeyStore in

public class AndroidKeyStore
  extends    |java.security.KeyStoreSpi|

|android.security.AndroidKeyStore_Description|
|android.security.AndroidKeyStore_Fields|
|android.security.AndroidKeyStore_Constructors|
|android.security.AndroidKeyStore_Methods|

================================================================================

*android.security.AndroidKeyStore_Fields*
|java.lang.String_android.security.AndroidKeyStore.NAME|

*android.security.AndroidKeyStore_Constructors*
|android.security.AndroidKeyStore()|

*android.security.AndroidKeyStore_Methods*
|android.security.AndroidKeyStore.engineAliases()|
|android.security.AndroidKeyStore.engineContainsAlias(String)|
|android.security.AndroidKeyStore.engineDeleteEntry(String)|
|android.security.AndroidKeyStore.engineGetCertificate(String)|
|android.security.AndroidKeyStore.engineGetCertificateAlias(Certificate)|
|android.security.AndroidKeyStore.engineGetCertificateChain(String)|
|android.security.AndroidKeyStore.engineGetCreationDate(String)|
|android.security.AndroidKeyStore.engineGetKey(String,char[])|
|android.security.AndroidKeyStore.engineIsCertificateEntry(String)|
|android.security.AndroidKeyStore.engineIsKeyEntry(String)|
|android.security.AndroidKeyStore.engineLoad(InputStream,char[])|
|android.security.AndroidKeyStore.engineSetCertificateEntry(String,Certificate)|
|android.security.AndroidKeyStore.engineSetEntry(String,KeyStore.Entry,KeyStore.ProtectionParameter)|
|android.security.AndroidKeyStore.engineSetKeyEntry(String,byte[],Certificate[])|
|android.security.AndroidKeyStore.engineSetKeyEntry(String,Key,char[],Certificate[])|
|android.security.AndroidKeyStore.engineSize()|
|android.security.AndroidKeyStore.engineStore(OutputStream,char[])|

*android.security.AndroidKeyStore_Description*

A java.security.KeyStore interface for the Android KeyStore. An instance of it 
can be created via the 
KeyStore.getInstance("AndroidKeyStore")(|java.security.KeyStore|) interface. 
This returns a java.security.KeyStore backed by this "AndroidKeyStore" 
implementation. 

This is built on top of Android's keystore daemon. The convention of alias use 
is: 

PrivateKeyEntry will have a Credentials.USER_PRIVATE_KEY as the private key, 
Credentials.USER_CERTIFICATE as the first certificate in the chain (the one 
that corresponds to the private key), and then a Credentials.CA_CERTIFICATE 
entry which will have the rest of the chain concatenated in BER format. 

TrustedCertificateEntry will just have a Credentials.CA_CERTIFICATE entry with 
a single certificate. 



*java.lang.String_android.security.AndroidKeyStore.NAME*





*android.security.AndroidKeyStore()*

public AndroidKeyStore()




*android.security.AndroidKeyStore.engineAliases()*

public |java.util.Enumeration|<String> engineAliases()





*android.security.AndroidKeyStore.engineContainsAlias(String)*

public boolean engineContainsAlias(java.lang.String alias)





*android.security.AndroidKeyStore.engineDeleteEntry(String)*

public void engineDeleteEntry(java.lang.String alias)
  throws |java.security.KeyStoreException|
         




*android.security.AndroidKeyStore.engineGetCertificate(String)*

public |java.security.cert.Certificate| engineGetCertificate(java.lang.String alias)





*android.security.AndroidKeyStore.engineGetCertificateAlias(Certificate)*

public |java.lang.String| engineGetCertificateAlias(java.security.cert.Certificate cert)





*android.security.AndroidKeyStore.engineGetCertificateChain(String)*

public |java.security.cert.Certificate|[] engineGetCertificateChain(java.lang.String alias)





*android.security.AndroidKeyStore.engineGetCreationDate(String)*

public |java.util.Date| engineGetCreationDate(java.lang.String alias)





*android.security.AndroidKeyStore.engineGetKey(String,char[])*

public |java.security.Key| engineGetKey(
  java.lang.String alias,
  char[] password)
  throws |java.security.NoSuchAlgorithmException|
         |java.security.UnrecoverableKeyException|
         




*android.security.AndroidKeyStore.engineIsCertificateEntry(String)*

public boolean engineIsCertificateEntry(java.lang.String alias)





*android.security.AndroidKeyStore.engineIsKeyEntry(String)*

public boolean engineIsKeyEntry(java.lang.String alias)





*android.security.AndroidKeyStore.engineLoad(InputStream,char[])*

public void engineLoad(
  java.io.InputStream stream,
  char[] password)
  throws |java.security.cert.CertificateException|
         |java.io.IOException|
         |java.security.NoSuchAlgorithmException|
         




*android.security.AndroidKeyStore.engineSetCertificateEntry(String,Certificate)*

public void engineSetCertificateEntry(
  java.lang.String alias,
  java.security.cert.Certificate cert)
  throws |java.security.KeyStoreException|
         




*android.security.AndroidKeyStore.engineSetEntry(String,KeyStore.Entry,KeyStore.ProtectionParameter)*

public void engineSetEntry(
  java.lang.String alias,
  java.security.KeyStore.Entry entry,
  java.security.KeyStore.ProtectionParameter param)
  throws |java.security.KeyStoreException|
         




*android.security.AndroidKeyStore.engineSetKeyEntry(String,byte[],Certificate[])*

public void engineSetKeyEntry(
  java.lang.String alias,
  byte[] userKey,
  java.security.cert.Certificate[] chain)
  throws |java.security.KeyStoreException|
         




*android.security.AndroidKeyStore.engineSetKeyEntry(String,Key,char[],Certificate[])*

public void engineSetKeyEntry(
  java.lang.String alias,
  java.security.Key key,
  char[] password,
  java.security.cert.Certificate[] chain)
  throws |java.security.KeyStoreException|
         




*android.security.AndroidKeyStore.engineSize()*

public int engineSize()





*android.security.AndroidKeyStore.engineStore(OutputStream,char[])*

public void engineStore(
  java.io.OutputStream stream,
  char[] password)
  throws |java.security.cert.CertificateException|
         |java.io.IOException|
         |java.security.NoSuchAlgorithmException|
         





