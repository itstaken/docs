*java.nio.channels.SeekableByteChannel* *SeekableByteChannel* A byte channel tha

public interface interface SeekableByteChannel

  implements |java.nio.channels.ByteChannel|

|java.nio.channels.SeekableByteChannel_Description|
|java.nio.channels.SeekableByteChannel_Fields|
|java.nio.channels.SeekableByteChannel_Constructors|
|java.nio.channels.SeekableByteChannel_Methods|

================================================================================

*java.nio.channels.SeekableByteChannel_Methods*
|java.nio.channels.SeekableByteChannel.position()|Returns this channel's positi
|java.nio.channels.SeekableByteChannel.position(long)|Sets this channel's posit
|java.nio.channels.SeekableByteChannel.read(ByteBuffer)|Reads a sequence of byt
|java.nio.channels.SeekableByteChannel.size()|Returns the current size of entit
|java.nio.channels.SeekableByteChannel.truncate(long)|Truncates the entity, to 
|java.nio.channels.SeekableByteChannel.write(ByteBuffer)|Writes a sequence of b

*java.nio.channels.SeekableByteChannel_Description*

A byte channel that maintains a current position and allows the position to be 
changed. 

A seekable byte channel is connected to an entity, typically a file, that 
contains a variable-length sequence of bytes that can be read and written. The 
current position can be <i>queried</i>(|java.nio.channels.SeekableByteChannel|) 
and <i>modified</i>(|java.nio.channels.SeekableByteChannel|) . The channel also 
provides access to the current size of the entity to which the channel is 
connected. The size increases when bytes are written beyond its current size; 
the size decreases when it is 
<i>truncated</i>(|java.nio.channels.SeekableByteChannel|) . 

The position(|java.nio.channels.SeekableByteChannel|) and 
truncate(|java.nio.channels.SeekableByteChannel|) methods which do not 
otherwise have a value to return are specified to return the channel upon which 
they are invoked. This allows method invocations to be chained. Implementations 
of this interface should specialize the return type so that method invocations 
on the implementation class can be chained. 



*java.nio.channels.SeekableByteChannel.position()*

public long position()
  throws |java.io.IOException|
         
Returns this channel's position. 



    Returns: This channel's position, a non-negative integer counting the number of bytes 
             from the beginning of the entity to the current position 

*java.nio.channels.SeekableByteChannel.position(long)*

public |java.nio.channels.SeekableByteChannel| position(long newPosition)
  throws |java.io.IOException|
         
Sets this channel's position. 

Setting the position to a value that is greater than the current size is legal 
but does not change the size of the entity. A later attempt to read bytes at 
such a position will immediately return an end-of-file indication. A later 
attempt to write bytes at such a position will cause the entity to grow to 
accommodate the new bytes; the values of any bytes between the previous 
end-of-file and the newly-written bytes are unspecified. 

Setting the channel's position is not recommended when connected to an entity, 
typically a file, that is opened with the 
APPEND(|java.nio.file.StandardOpenOption|) option. When opened for append, the 
position is first advanced to the end before writing. 


    newPosition - The new position, a non-negative integer counting the number of bytes from the 
       beginning of the entity 

    Returns: 

*java.nio.channels.SeekableByteChannel.read(ByteBuffer)*

public int read(java.nio.ByteBuffer dst)
  throws |java.io.IOException|
         
Reads a sequence of bytes from this channel into the given buffer. 

Bytes are read starting at this channel's current position, and then the 
position is updated with the number of bytes actually read. Otherwise this 
method behaves exactly as specified in the 
(|java.nio.channels.ReadableByteChannel|) interface. 



*java.nio.channels.SeekableByteChannel.size()*

public long size()
  throws |java.io.IOException|
         
Returns the current size of entity to which this channel is connected. 



    Returns: The current size, measured in bytes 

*java.nio.channels.SeekableByteChannel.truncate(long)*

public |java.nio.channels.SeekableByteChannel| truncate(long size)
  throws |java.io.IOException|
         
Truncates the entity, to which this channel is connected, to the given size. 

If the given size is less than the current size then the entity is truncated, 
discarding any bytes beyond the new end. If the given size is greater than or 
equal to the current size then the entity is not modified. In either case, if 
the current position is greater than the given size then it is set to that 
size. 

An implementation of this interface may prohibit truncation when connected to 
an entity, typically a file, opened with the 
APPEND(|java.nio.file.StandardOpenOption|) option. 


    size - The new size, a non-negative byte count 

    Returns: 

*java.nio.channels.SeekableByteChannel.write(ByteBuffer)*

public int write(java.nio.ByteBuffer src)
  throws |java.io.IOException|
         
Writes a sequence of bytes to this channel from the given buffer. 

Bytes are written starting at this channel's current position, unless the 
channel is connected to an entity such as a file that is opened with the 
APPEND(|java.nio.file.StandardOpenOption|) option, in which case the position 
is first advanced to the end. The entity to which the channel is connected is 
grown, if necessary, to accommodate the written bytes, and then the position is 
updated with the number of bytes actually written. Otherwise this method 
behaves exactly as specified by the (|java.nio.channels.WritableByteChannel|) 
interface. 




