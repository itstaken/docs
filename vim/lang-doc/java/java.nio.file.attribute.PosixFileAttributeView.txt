*java.nio.file.attribute.PosixFileAttributeView* *PosixFileAttributeView* A file

public interface interface PosixFileAttributeView

  implements |java.nio.file.attribute.BasicFileAttributeView|
             |java.nio.file.attribute.FileOwnerAttributeView|

|java.nio.file.attribute.PosixFileAttributeView_Description|
|java.nio.file.attribute.PosixFileAttributeView_Fields|
|java.nio.file.attribute.PosixFileAttributeView_Constructors|
|java.nio.file.attribute.PosixFileAttributeView_Methods|

================================================================================

*java.nio.file.attribute.PosixFileAttributeView_Methods*
|java.nio.file.attribute.PosixFileAttributeView.name()|Returns the name of the 
|java.nio.file.attribute.PosixFileAttributeView.readAttributes()|
|java.nio.file.attribute.PosixFileAttributeView.setGroup(GroupPrincipal)|Update
|java.nio.file.attribute.PosixFileAttributeView.setPermissions(Set<PosixFilePermission>)|

*java.nio.file.attribute.PosixFileAttributeView_Description*

A file attribute view that provides a view of the file attributes commonly 
associated with files on file systems used by operating systems that implement 
the Portable Operating System Interface (POSIX) family of standards. 

Operating systems that implement the POSIX family of standards commonly use 
file systems that have a file owner, group-owner, and related access 
permissions. This file attribute view provides read and write access to these 
attributes. 

The readAttributes(|java.nio.file.attribute.PosixFileAttributeView|) method is 
used to read the file's attributes. The file 
owner(|java.nio.file.attribute.PosixFileAttributes|) is represented by a 
(|java.nio.file.attribute.UserPrincipal|) that is the identity of the file 
owner for the purposes of access control. The 
group-owner(|java.nio.file.attribute.PosixFileAttributes|) , represented by a 
(|java.nio.file.attribute.GroupPrincipal|) , is the identity of the group 
owner, where a group is an identity created for administrative purposes so as 
to determine the access rights for the members of the group. 

The permissions(|java.nio.file.attribute.PosixFileAttributes|) attribute is a 
set of access permissions. This file attribute view provides access to the nine 
permission defined by the (|java.nio.file.attribute.PosixFilePermission|) 
class. These nine permission bits determine the read, write, and execute access 
for the file owner, group, and others (others meaning identities other than the 
owner and members of the group). Some operating systems and file systems may 
provide additional permission bits but access to these other bits is not 
defined by this class in this release. 

Usage Example: Suppose we need to print out the owner and access permissions of 
a file: 

Path file = ... PosixFileAttributes attrs = Files.getFileAttributeView(file, 
PosixFileAttributeView.class) .readAttributes(); System.out.format("%s %s%n", 
attrs.owner().getName(), PosixFilePermissions.toString(attrs.permissions())); 

Dynamic Access Where dynamic access to file attributes is required, the 
attributes supported by this attribute view are as defined by 
(|java.nio.file.attribute.BasicFileAttributeView|) and 
(|java.nio.file.attribute.FileOwnerAttributeView|) , and in addition, the 
following attributes are supported: 



Name Type 

"permissions" (|java.util.Set|) < 
(|java.nio.file.attribute.PosixFilePermission|) > 

"group" (|java.nio.file.attribute.GroupPrincipal|) 



The getAttribute(|java.nio.file.Files|) method may be used to read any of these 
attributes, or any of the attributes defined by 
(|java.nio.file.attribute.BasicFileAttributeView|) as if by invoking the 
readAttributes()(|java.nio.file.attribute.PosixFileAttributeView|) method. 

The setAttribute(|java.nio.file.Files|) method may be used to update the file's 
last modified time, last access time or create time attributes as defined by 
(|java.nio.file.attribute.BasicFileAttributeView|) . It may also be used to 
update the permissions, owner, or group-owner as if by invoking the 
setPermissions(|java.nio.file.attribute.PosixFileAttributeView|) , 
setOwner(|java.nio.file.attribute.PosixFileAttributeView|) , and 
setGroup(|java.nio.file.attribute.PosixFileAttributeView|) methods 
respectively. 

Setting Initial Permissions Implementations supporting this attribute view may 
also support setting the initial permissions when creating a file or directory. 
The initial permissions are provided to the createFile(|java.nio.file.Files|) 
or createDirectory(|java.nio.file.Files|) methods as a 
(|java.nio.file.attribute.FileAttribute|) with 
name(|java.nio.file.attribute.FileAttribute|) "posix:permissions"and a 
value(|java.nio.file.attribute.FileAttribute|) that is the set of permissions. 
The following example uses the 
asFileAttribute(|java.nio.file.attribute.PosixFilePermissions|) method to 
construct aFileAttributewhen creating a file: 



Path path = ... Set<PosixFilePermission> perms = EnumSet.of(OWNER_READ, 
OWNER_WRITE, OWNER_EXECUTE, GROUP_READ); Files.createFile(path, 
PosixFilePermissions.asFileAttribute(perms)); 

When the access permissions are set at file creation time then the actual value 
of the permissions may differ that the value of the attribute object. The 
reasons for this are implementation specific. On UNIX systems, for example, a 
process has a umask that impacts the permission bits of newly created files. 
Where an implementation supports the setting of the access permissions, and the 
underlying file system supports access permissions, then it is required that 
the value of the actual access permissions will be equal or less than the value 
of the attribute provided to the createFile(|java.nio.file.Files|) or 
createDirectory(|java.nio.file.Files|) methods. In other words, the file may be 
more secure than requested. 



*java.nio.file.attribute.PosixFileAttributeView.name()*

public |java.lang.String| name()

Returns the name of the attribute view. Attribute views of this type have the 
name"posix". 



*java.nio.file.attribute.PosixFileAttributeView.readAttributes()*

public |java.nio.file.attribute.PosixFileAttributes| readAttributes()
  throws |java.io.IOException|
         




*java.nio.file.attribute.PosixFileAttributeView.setGroup(GroupPrincipal)*

public void setGroup(java.nio.file.attribute.GroupPrincipal group)
  throws |java.io.IOException|
         
Updates the file group-owner. 


    group - the new file group-owner 

*java.nio.file.attribute.PosixFileAttributeView.setPermissions(Set<PosixFilePermission>)*

public void setPermissions(java.util.Set<java.nio.file.attribute.PosixFilePermission> perms)
  throws |java.io.IOException|
         
Updates the file permissions. 


    perms - the new set of permissions 


