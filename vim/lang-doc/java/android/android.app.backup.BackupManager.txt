*android.app.backup.BackupManager* *BackupManager* The interface through which a

public class BackupManager
  extends    |java.lang.Object|

|android.app.backup.BackupManager_Description|
|android.app.backup.BackupManager_Fields|
|android.app.backup.BackupManager_Constructors|
|android.app.backup.BackupManager_Methods|

================================================================================

*android.app.backup.BackupManager_Constructors*
|android.app.backup.BackupManager(Context)|Constructs a BackupManager object th

*android.app.backup.BackupManager_Methods*
|android.app.backup.BackupManager.beginRestoreSession()|Begin the process of re
|android.app.backup.BackupManager.dataChanged()|Notifies the Android backup sys
|android.app.backup.BackupManager.dataChanged(String)|Convenience method for ca
|android.app.backup.BackupManager.requestRestore(RestoreObserver)|Restore the c

*android.app.backup.BackupManager_Description*

The interface through which an application interacts with the Android backup 
service to request backup and restore operations. Applications instantiate it 
using the constructor and issue calls through that instance. 

When an application has made changes to data which should be backed up, a call 
to (|android.app.backup.BackupManager|) will notify the backup service. The 
system will then schedule a backup operation to occur in the near future. 
Repeated calls to (|android.app.backup.BackupManager|) have no further effect 
until the backup operation actually occurs. 

A backup or restore operation for your application begins when the system 
launches the (|android.app.backup.BackupAgent|) subclass you've declared in 
your manifest. See the documentation for (|android.app.backup.BackupAgent|) for 
a detailed description of how the operation then proceeds. 

Several attributes affecting the operation of the backup and restore mechanism 
can be set on the <a 
href="guide/topics/manifest/application-element.html"><application> tag in your 
application's AndroidManifest.xml file. 

Developer Guides For more information about using BackupManager, read the <a 
href="guide/topics/data/backup.html">Data Backup developer guide. 



*android.app.backup.BackupManager(Context)*

public BackupManager(android.content.Context context)

Constructs a BackupManager object through which the application can communicate 
with the Android backup system. 

    context - The {@link android.content.Context} that was provided when one of your 
       application's {@link android.app.Activity Activities} was created. 

*android.app.backup.BackupManager.beginRestoreSession()*

public |android.app.backup.RestoreSession| beginRestoreSession()

Begin the process of restoring data from backup. See the 
(|android.app.backup.RestoreSession|) class for documentation on that process. 



*android.app.backup.BackupManager.dataChanged()*

public void dataChanged()

Notifies the Android backup system that your application wishes to back up new 
changes to its data. A backup operation using your application's 
(|android.app.backup.BackupAgent|) subclass will be scheduled when you call 
this method. 



*android.app.backup.BackupManager.dataChanged(String)*

public static void dataChanged(java.lang.String packageName)

Convenience method for callers who need to indicate that some other package 
needs a backup pass. This can be useful in the case of groups of packages that 
share a uid. 

This method requires that the application hold the "android.permission.BACKUP" 
permission if the package named in the argument does not run under the same uid 
as the caller. 


    packageName - The package name identifying the application to back up. 

*android.app.backup.BackupManager.requestRestore(RestoreObserver)*

public int requestRestore(android.app.backup.RestoreObserver observer)

Restore the calling application from backup. The data will be restored from the 
current backup dataset if the application has stored data there, or from the 
dataset used during the last full device setup operation if the current backup 
dataset has no matching data. If no backup data exists for this application in 
either source, a nonzero value will be returned. 

If this method returns zero (meaning success), the OS will attempt to retrieve 
a backed-up dataset from the remote transport, instantiate the application's 
backup agent, and pass the dataset to the agent's 
onRestore()(|android.app.backup.BackupAgent|) method. 


    observer - The {@link RestoreObserver} to receive callbacks during the restore operation. 
       This must not be null. 

    Returns: Zero on success; nonzero on error. 


