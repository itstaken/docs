*android.provider.VoicemailContract* *VoicemailContract* The contract between th

public class VoicemailContract
  extends    |java.lang.Object|

|android.provider.VoicemailContract_Description|
|android.provider.VoicemailContract_Fields|
|android.provider.VoicemailContract_Constructors|
|android.provider.VoicemailContract_Methods|

================================================================================

*android.provider.VoicemailContract_Fields*
|java.lang.String_android.provider.VoicemailContract.ACTION_FETCH_VOICEMAIL|
|java.lang.String_android.provider.VoicemailContract.ACTION_NEW_VOICEMAIL|
|java.lang.String_android.provider.VoicemailContract.AUTHORITY|
|java.lang.String_android.provider.VoicemailContract.EXTRA_SELF_CHANGE|
|java.lang.String_android.provider.VoicemailContract.PARAM_KEY_SOURCE_PACKAGE|
|java.lang.String_android.provider.VoicemailContract.SOURCE_PACKAGE_FIELD|

*android.provider.VoicemailContract_Description*

The contract between the voicemail provider and applications. Contains 
definitions for the supported URIs and columns. 

The content providers exposes two tables through this interface: 

Voicemails table: This stores the actual voicemail records. The columns and 
URIs for accessing this table are defined by the 
(|android.provider.VoicemailContract.Voicemails|) class. 

Status table: This provides a way for the voicemail source application to 
convey its current state to the system. The columns and URIS for accessing this 
table are defined by the (|android.provider.VoicemailContract.Status|) class. 



The minimum permission needed to access this content provider is 
(|Manifest.permission|) Voicemails are inserted by what is called as a 
"voicemail source" application, which is responsible for syncing voicemail data 
between a remote server and the local voicemail content provider. "voicemail 
source" application should always set the 
(|android.provider.VoicemailContract|) in the URI to identify its package. 

In addition to the (|android.database.ContentObserver|) notifications the 
voicemail provider also generates broadcast intents to notify change for 
applications that are not active and therefore cannot listen to ContentObserver 
notifications. Broadcast intents with following actions are generated: 

(|android.provider.VoicemailContract|) is generated for each new voicemail 
inserted. 

(|android.content.Intent|) is generated for any change made into the database, 
including new voicemail. 





*java.lang.String_android.provider.VoicemailContract.ACTION_FETCH_VOICEMAIL*

Broadcast intent to request a voicemail source to fetch voicemail content of a 
specific voicemail from the remote server. The voicemail to fetch is specified 
by the data uri of the intent. 

All voicemail sources are expected to handle this event. After storing the 
content the application should also set 
(|android.provider.VoicemailContract.Voicemails|) to 1; 


*java.lang.String_android.provider.VoicemailContract.ACTION_NEW_VOICEMAIL*

Broadcast intent when a new voicemail record is inserted. 


*java.lang.String_android.provider.VoicemailContract.AUTHORITY*

The authority used by the voicemail provider. 


*java.lang.String_android.provider.VoicemailContract.EXTRA_SELF_CHANGE*

Extra included in (|android.content.Intent|) broadcast intents to indicate if 
the receiving package made this change. 


*java.lang.String_android.provider.VoicemailContract.PARAM_KEY_SOURCE_PACKAGE*

Parameter key used in the URI to specify the voicemail source package name. 
This field must be set in all requests that originate from a voicemail source. 


*java.lang.String_android.provider.VoicemailContract.SOURCE_PACKAGE_FIELD*

Name of the source package field, which must be same across all voicemail 
related tables. This is an internal field. 



