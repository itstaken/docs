*android.view.inputmethod.InputConnectionWrapper* *InputConnectionWrapper* Wrapp

public class InputConnectionWrapper
  extends    |java.lang.Object|
  implements |android.view.inputmethod.InputConnection|

|android.view.inputmethod.InputConnectionWrapper_Description|
|android.view.inputmethod.InputConnectionWrapper_Fields|
|android.view.inputmethod.InputConnectionWrapper_Constructors|
|android.view.inputmethod.InputConnectionWrapper_Methods|

================================================================================

*android.view.inputmethod.InputConnectionWrapper_Constructors*
|android.view.inputmethod.InputConnectionWrapper(InputConnection,boolean)|

*android.view.inputmethod.InputConnectionWrapper_Methods*
|android.view.inputmethod.InputConnectionWrapper.beginBatchEdit()|
|android.view.inputmethod.InputConnectionWrapper.clearMetaKeyStates(int)|
|android.view.inputmethod.InputConnectionWrapper.commitCompletion(CompletionInfo)|
|android.view.inputmethod.InputConnectionWrapper.commitCorrection(CorrectionInfo)|
|android.view.inputmethod.InputConnectionWrapper.commitText(CharSequence,int)|
|android.view.inputmethod.InputConnectionWrapper.deleteSurroundingText(int,int)|
|android.view.inputmethod.InputConnectionWrapper.endBatchEdit()|
|android.view.inputmethod.InputConnectionWrapper.finishComposingText()|
|android.view.inputmethod.InputConnectionWrapper.getCursorCapsMode(int)|
|android.view.inputmethod.InputConnectionWrapper.getExtractedText(ExtractedTextRequest,int)|
|android.view.inputmethod.InputConnectionWrapper.getSelectedText(int)|
|android.view.inputmethod.InputConnectionWrapper.getTextAfterCursor(int,int)|
|android.view.inputmethod.InputConnectionWrapper.getTextBeforeCursor(int,int)|
|android.view.inputmethod.InputConnectionWrapper.performContextMenuAction(int)|
|android.view.inputmethod.InputConnectionWrapper.performEditorAction(int)|
|android.view.inputmethod.InputConnectionWrapper.performPrivateCommand(String,Bundle)|
|android.view.inputmethod.InputConnectionWrapper.reportFullscreenMode(boolean)|
|android.view.inputmethod.InputConnectionWrapper.sendKeyEvent(KeyEvent)|
|android.view.inputmethod.InputConnectionWrapper.setComposingRegion(int,int)|
|android.view.inputmethod.InputConnectionWrapper.setComposingText(CharSequence,int)|
|android.view.inputmethod.InputConnectionWrapper.setSelection(int,int)|
|android.view.inputmethod.InputConnectionWrapper.setTarget(InputConnection)|Cha

*android.view.inputmethod.InputConnectionWrapper_Description*

Wrapper class for proxying calls to another InputConnection. Subclass and have 
fun! 



*android.view.inputmethod.InputConnectionWrapper(InputConnection,boolean)*

public InputConnectionWrapper(
  android.view.inputmethod.InputConnection target,
  boolean mutable)




*android.view.inputmethod.InputConnectionWrapper.beginBatchEdit()*

public boolean beginBatchEdit()





*android.view.inputmethod.InputConnectionWrapper.clearMetaKeyStates(int)*

public boolean clearMetaKeyStates(int states)





*android.view.inputmethod.InputConnectionWrapper.commitCompletion(CompletionInfo)*

public boolean commitCompletion(android.view.inputmethod.CompletionInfo text)





*android.view.inputmethod.InputConnectionWrapper.commitCorrection(CorrectionInfo)*

public boolean commitCorrection(android.view.inputmethod.CorrectionInfo correctionInfo)





*android.view.inputmethod.InputConnectionWrapper.commitText(CharSequence,int)*

public boolean commitText(
  java.lang.CharSequence text,
  int newCursorPosition)





*android.view.inputmethod.InputConnectionWrapper.deleteSurroundingText(int,int)*

public boolean deleteSurroundingText(
  int beforeLength,
  int afterLength)





*android.view.inputmethod.InputConnectionWrapper.endBatchEdit()*

public boolean endBatchEdit()





*android.view.inputmethod.InputConnectionWrapper.finishComposingText()*

public boolean finishComposingText()





*android.view.inputmethod.InputConnectionWrapper.getCursorCapsMode(int)*

public int getCursorCapsMode(int reqModes)





*android.view.inputmethod.InputConnectionWrapper.getExtractedText(ExtractedTextRequest,int)*

public |android.view.inputmethod.ExtractedText| getExtractedText(
  android.view.inputmethod.ExtractedTextRequest request,
  int flags)





*android.view.inputmethod.InputConnectionWrapper.getSelectedText(int)*

public |java.lang.CharSequence| getSelectedText(int flags)





*android.view.inputmethod.InputConnectionWrapper.getTextAfterCursor(int,int)*

public |java.lang.CharSequence| getTextAfterCursor(
  int n,
  int flags)





*android.view.inputmethod.InputConnectionWrapper.getTextBeforeCursor(int,int)*

public |java.lang.CharSequence| getTextBeforeCursor(
  int n,
  int flags)





*android.view.inputmethod.InputConnectionWrapper.performContextMenuAction(int)*

public boolean performContextMenuAction(int id)





*android.view.inputmethod.InputConnectionWrapper.performEditorAction(int)*

public boolean performEditorAction(int editorAction)





*android.view.inputmethod.InputConnectionWrapper.performPrivateCommand(String,Bundle)*

public boolean performPrivateCommand(
  java.lang.String action,
  android.os.Bundle data)





*android.view.inputmethod.InputConnectionWrapper.reportFullscreenMode(boolean)*

public boolean reportFullscreenMode(boolean enabled)





*android.view.inputmethod.InputConnectionWrapper.sendKeyEvent(KeyEvent)*

public boolean sendKeyEvent(android.view.KeyEvent event)





*android.view.inputmethod.InputConnectionWrapper.setComposingRegion(int,int)*

public boolean setComposingRegion(
  int start,
  int end)





*android.view.inputmethod.InputConnectionWrapper.setComposingText(CharSequence,int)*

public boolean setComposingText(
  java.lang.CharSequence text,
  int newCursorPosition)





*android.view.inputmethod.InputConnectionWrapper.setSelection(int,int)*

public boolean setSelection(
  int start,
  int end)





*android.view.inputmethod.InputConnectionWrapper.setTarget(InputConnection)*

public void setTarget(android.view.inputmethod.InputConnection target)

Change the target of the input connection. 




