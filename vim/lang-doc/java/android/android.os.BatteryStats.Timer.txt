*android.os.BatteryStats.Timer* *BatteryStats.Timer* State for keeping track of 

public abstract static class BatteryStats.Timer
  extends    |java.lang.Object|

|android.os.BatteryStats.Timer_Description|
|android.os.BatteryStats.Timer_Fields|
|android.os.BatteryStats.Timer_Constructors|
|android.os.BatteryStats.Timer_Methods|

================================================================================

*android.os.BatteryStats.Timer_Constructors*
|android.os.BatteryStats.Timer()|

*android.os.BatteryStats.Timer_Methods*
|android.os.BatteryStats.Timer.getCountLocked(int)|Returns the count associated
|android.os.BatteryStats.Timer.getTotalTimeLocked(long,int)|Returns the total t
|android.os.BatteryStats.Timer.logState(Printer,String)|Temporary for debugging

*android.os.BatteryStats.Timer_Description*

State for keeping track of timing information. 



*android.os.BatteryStats.Timer()*

public BatteryStats.Timer()




*android.os.BatteryStats.Timer.getCountLocked(int)*

public abstract int getCountLocked(int which)

Returns the count associated with this Timer for the selected type of 
statistics. 


    which - one of STATS_TOTAL, STATS_LAST, or STATS_CURRENT 

*android.os.BatteryStats.Timer.getTotalTimeLocked(long,int)*

public abstract long getTotalTimeLocked(
  long batteryRealtime,
  int which)

Returns the total time in microseconds associated with this Timer for the 
selected type of statistics. 


    batteryRealtime - system realtime on battery in microseconds 
    which - one of STATS_TOTAL, STATS_LAST, or STATS_CURRENT 

    Returns: a time in microseconds 

*android.os.BatteryStats.Timer.logState(Printer,String)*

public abstract void logState(
  android.util.Printer pw,
  java.lang.String prefix)

Temporary for debugging. 




