*android.support.v7.internal.widget.LinearLayoutICS* *LinearLayoutICS* 

public class LinearLayoutICS
  extends    |LinearLayout|

|android.support.v7.internal.widget.LinearLayoutICS_Description|
|android.support.v7.internal.widget.LinearLayoutICS_Fields|
|android.support.v7.internal.widget.LinearLayoutICS_Constructors|
|android.support.v7.internal.widget.LinearLayoutICS_Methods|

================================================================================

*android.support.v7.internal.widget.LinearLayoutICS_Constructors*
|android.support.v7.internal.widget.LinearLayoutICS(Context,AttributeSet)|

*android.support.v7.internal.widget.LinearLayoutICS_Methods*
|android.support.v7.internal.widget.LinearLayoutICS.getSupportDividerWidth()|
|android.support.v7.internal.widget.LinearLayoutICS.hasSupportDividerBeforeChildAt(int)|
|android.support.v7.internal.widget.LinearLayoutICS.measureChildWithMargins(View,int,int,int,int)|
|android.support.v7.internal.widget.LinearLayoutICS.onDraw(Canvas)|

*android.support.v7.internal.widget.LinearLayoutICS_Description*





*android.support.v7.internal.widget.LinearLayoutICS(Context,AttributeSet)*

public LinearLayoutICS(
  Context context,
  AttributeSet attrs)




*android.support.v7.internal.widget.LinearLayoutICS.getSupportDividerWidth()*

public int getSupportDividerWidth()





*android.support.v7.internal.widget.LinearLayoutICS.hasSupportDividerBeforeChildAt(int)*

protected boolean hasSupportDividerBeforeChildAt(int childIndex)

Determines where to position dividers between children. 


    childIndex - Index of child to check for preceding divider 

    Returns: true if there should be a divider before the child at childIndex 

*android.support.v7.internal.widget.LinearLayoutICS.measureChildWithMargins(View,int,int,int,int)*

protected void measureChildWithMargins(
  View child,
  int parentWidthMeasureSpec,
  int widthUsed,
  int parentHeightMeasureSpec,
  int heightUsed)





*android.support.v7.internal.widget.LinearLayoutICS.onDraw(Canvas)*

protected void onDraw(Canvas canvas)






