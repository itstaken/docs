*android.support.v7.media.MediaRouteSelector* *MediaRouteSelector* Describes the

public final class MediaRouteSelector
  extends    |java.lang.Object|

|android.support.v7.media.MediaRouteSelector_Description|
|android.support.v7.media.MediaRouteSelector_Fields|
|android.support.v7.media.MediaRouteSelector_Constructors|
|android.support.v7.media.MediaRouteSelector_Methods|

================================================================================

*android.support.v7.media.MediaRouteSelector_Fields*
|android.support.v7.media.MediaRouteSelector_android.support.v7.media.MediaRouteSelector.EMPTY|

*android.support.v7.media.MediaRouteSelector_Methods*
|android.support.v7.media.MediaRouteSelector.asBundle()|Converts this object to
|android.support.v7.media.MediaRouteSelector.contains(MediaRouteSelector)|Retur
|android.support.v7.media.MediaRouteSelector.equals(Object)|
|android.support.v7.media.MediaRouteSelector.fromBundle(Bundle)|Creates an inst
|android.support.v7.media.MediaRouteSelector.getControlCategories()|Gets the li
|android.support.v7.media.MediaRouteSelector.hasControlCategory(String)|Returns
|android.support.v7.media.MediaRouteSelector.hashCode()|
|android.support.v7.media.MediaRouteSelector.isEmpty()|Returns true if the sele
|android.support.v7.media.MediaRouteSelector.isValid()|Returns true if the sele
|android.support.v7.media.MediaRouteSelector.matchesControlFilters(List<IntentFilter>)|
|android.support.v7.media.MediaRouteSelector.toString()|

*android.support.v7.media.MediaRouteSelector_Description*

Describes the capabilities of routes that applications would like to discover 
and use. 

This object is immutable once created using a 
(|android.support.v7.media.MediaRouteSelector.Builder|) instance. 

Example 

MediaRouteSelector selectorBuilder = new MediaRouteSelector.Builder() 
.addControlCategory(MediaControlIntent.CATEGORY_LIVE_VIDEO) 
.addControlCategory(MediaControlIntent.CATEGORY_REMOTE_PLAYBACK) .build(); 

MediaRouter router = MediaRouter.getInstance(context); 
router.addCallback(selector, callback, 
MediaRouter.CALLBACK_FLAG_REQUEST_DISCOVERY); 



*android.support.v7.media.MediaRouteSelector_android.support.v7.media.MediaRouteSelector.EMPTY*

An empty media route selector that will not match any routes. 



*android.support.v7.media.MediaRouteSelector.asBundle()*

public Bundle asBundle()

Converts this object to a bundle for serialization. 



    Returns: The contents of the object represented as a bundle. 

*android.support.v7.media.MediaRouteSelector.contains(MediaRouteSelector)*

public boolean contains(android.support.v7.media.MediaRouteSelector selector)

Returns true if this selector contains all of the capabilities described by the 
specified selector. 


    selector - The selector to be examined. 

    Returns: True if this selector contains all of the capabilities described by the 
             specified selector. 

*android.support.v7.media.MediaRouteSelector.equals(Object)*

public boolean equals(java.lang.Object o)





*android.support.v7.media.MediaRouteSelector.fromBundle(Bundle)*

public static |android.support.v7.media.MediaRouteSelector| fromBundle(Bundle bundle)

Creates an instance from a bundle. 


    bundle - The bundle, or null if none. 

    Returns: The new instance, or null if the bundle was null. 

*android.support.v7.media.MediaRouteSelector.getControlCategories()*

public |java.util.List|<String> getControlCategories()

Gets the list of media control 
categories(|android.support.v7.media.MediaControlIntent|) in the selector. 



    Returns: The list of categories. 

*android.support.v7.media.MediaRouteSelector.hasControlCategory(String)*

public boolean hasControlCategory(java.lang.String category)

Returns true if the selector contains the specified category. 


    category - The category to check. 

    Returns: True if the category is present. 

*android.support.v7.media.MediaRouteSelector.hashCode()*

public int hashCode()





*android.support.v7.media.MediaRouteSelector.isEmpty()*

public boolean isEmpty()

Returns true if the selector does not specify any capabilities. 



*android.support.v7.media.MediaRouteSelector.isValid()*

public boolean isValid()

Returns true if the selector has all of the required fields. 



*android.support.v7.media.MediaRouteSelector.matchesControlFilters(List<IntentFilter>)*

public boolean matchesControlFilters(java.util.List<IntentFilter> filters)

Returns true if the selector matches at least one of the specified control 
filters. 


    filters - The list of control filters to consider. 

    Returns: True if a match is found. 

*android.support.v7.media.MediaRouteSelector.toString()*

public |java.lang.String| toString()






