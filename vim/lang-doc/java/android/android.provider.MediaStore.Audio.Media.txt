*android.provider.MediaStore.Audio.Media* *MediaStore.Audio.Media* 

public static final class MediaStore.Audio.Media
  extends    |java.lang.Object|
  implements |android.provider.MediaStore.Audio.AudioColumns|

|android.provider.MediaStore.Audio.Media_Description|
|android.provider.MediaStore.Audio.Media_Fields|
|android.provider.MediaStore.Audio.Media_Constructors|
|android.provider.MediaStore.Audio.Media_Methods|

================================================================================

*android.provider.MediaStore.Audio.Media_Fields*
|java.lang.String_android.provider.MediaStore.Audio.Media.CONTENT_TYPE|
|java.lang.String_android.provider.MediaStore.Audio.Media.DEFAULT_SORT_ORDER|
|android.net.Uri_android.provider.MediaStore.Audio.Media.EXTERNAL_CONTENT_URI|
|java.lang.String_android.provider.MediaStore.Audio.Media.EXTRA_MAX_BYTES|
|android.net.Uri_android.provider.MediaStore.Audio.Media.INTERNAL_CONTENT_URI|
|java.lang.String_android.provider.MediaStore.Audio.Media.RECORD_SOUND_ACTION|

*android.provider.MediaStore.Audio.Media_Constructors*
|android.provider.MediaStore.Audio.Media()|

*android.provider.MediaStore.Audio.Media_Methods*
|android.provider.MediaStore.Audio.Media.getContentUri(String)|Get the content:
|android.provider.MediaStore.Audio.Media.getContentUriForPath(String)|

*android.provider.MediaStore.Audio.Media_Description*





*java.lang.String_android.provider.MediaStore.Audio.Media.CONTENT_TYPE*

The MIME type for this table. 


*java.lang.String_android.provider.MediaStore.Audio.Media.DEFAULT_SORT_ORDER*

The default sort order for this table 


*android.net.Uri_android.provider.MediaStore.Audio.Media.EXTERNAL_CONTENT_URI*

The content:// style URI for the "primary" external storage volume. 


*java.lang.String_android.provider.MediaStore.Audio.Media.EXTRA_MAX_BYTES*

The name of the Intent-extra used to define a maximum file size for a recording 
made by the SoundRecorder application. 


*android.net.Uri_android.provider.MediaStore.Audio.Media.INTERNAL_CONTENT_URI*

The content:// style URI for the internal storage. 


*java.lang.String_android.provider.MediaStore.Audio.Media.RECORD_SOUND_ACTION*

Activity Action: Start SoundRecorder application. Input: nothing. Output: An 
uri to the recorded sound stored in the Media Library if the recording was 
successful. May also contain the extra EXTRA_MAX_BYTES. 



*android.provider.MediaStore.Audio.Media()*

public MediaStore.Audio.Media()




*android.provider.MediaStore.Audio.Media.getContentUri(String)*

public static |android.net.Uri| getContentUri(java.lang.String volumeName)

Get the content:// style URI for the audio media table on the given volume. 


    volumeName - the name of the volume to get the URI for 

    Returns: the URI to the audio media table on the given volume 

*android.provider.MediaStore.Audio.Media.getContentUriForPath(String)*

public static |android.net.Uri| getContentUriForPath(java.lang.String path)






