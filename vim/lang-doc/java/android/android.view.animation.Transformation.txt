*android.view.animation.Transformation* *Transformation* Defines the transformat

public class Transformation
  extends    |java.lang.Object|

|android.view.animation.Transformation_Description|
|android.view.animation.Transformation_Fields|
|android.view.animation.Transformation_Constructors|
|android.view.animation.Transformation_Methods|

================================================================================

*android.view.animation.Transformation_Fields*
|float_android.view.animation.Transformation.mAlpha|
|Matrix_android.view.animation.Transformation.mMatrix|
|int_android.view.animation.Transformation.mTransformationType|
|int_android.view.animation.Transformation.TYPE_ALPHA|
|int_android.view.animation.Transformation.TYPE_BOTH|
|int_android.view.animation.Transformation.TYPE_IDENTITY|
|int_android.view.animation.Transformation.TYPE_MATRIX|

*android.view.animation.Transformation_Constructors*
|android.view.animation.Transformation()|Creates a new transformation with alph

*android.view.animation.Transformation_Methods*
|android.view.animation.Transformation.clear()|Reset the transformation to a st
|android.view.animation.Transformation.compose(Transformation)|Apply this Trans
|android.view.animation.Transformation.getAlpha()|
|android.view.animation.Transformation.getMatrix()|
|android.view.animation.Transformation.getTransformationType()|Indicates the na
|android.view.animation.Transformation.postCompose(Transformation)|Like#compose
|android.view.animation.Transformation.printShortString(PrintWriter)|Print shor
|android.view.animation.Transformation.set(Transformation)|Clones the specified
|android.view.animation.Transformation.setAlpha(float)|Sets the degree of trans
|android.view.animation.Transformation.setTransformationType(int)|Sets the tran
|android.view.animation.Transformation.toShortString()|Return a string represen
|android.view.animation.Transformation.toShortString(StringBuilder)|
|android.view.animation.Transformation.toString()|

*android.view.animation.Transformation_Description*

Defines the transformation to be applied at one point in time of an Animation. 



*float_android.view.animation.Transformation.mAlpha*




*Matrix_android.view.animation.Transformation.mMatrix*




*int_android.view.animation.Transformation.mTransformationType*




*int_android.view.animation.Transformation.TYPE_ALPHA*

Indicates a transformation that applies an alpha only (uses an identity 
matrix.) 


*int_android.view.animation.Transformation.TYPE_BOTH*

Indicates a transformation that applies an alpha and a matrix. 


*int_android.view.animation.Transformation.TYPE_IDENTITY*

Indicates a transformation that has no effect (alpha = 1 and identity matrix.) 


*int_android.view.animation.Transformation.TYPE_MATRIX*

Indicates a transformation that applies a matrix only (alpha = 1.) 



*android.view.animation.Transformation()*

public Transformation()

Creates a new transformation with alpha = 1 and the identity matrix. 


*android.view.animation.Transformation.clear()*

public void clear()

Reset the transformation to a state that leaves the object being animated in an 
unmodified state. The transformation type is 
(|android.view.animation.Transformation|) by default. 



*android.view.animation.Transformation.compose(Transformation)*

public void compose(android.view.animation.Transformation t)

Apply this Transformation to an existing Transformation, e.g. apply a scale 
effect to something that has already been rotated. 


    t - 

*android.view.animation.Transformation.getAlpha()*

public float getAlpha()





    Returns: The degree of transparency 

*android.view.animation.Transformation.getMatrix()*

public Matrix getMatrix()





    Returns: The 3x3 Matrix representing the trnasformation to apply to the coordinates of 
             the object being animated 

*android.view.animation.Transformation.getTransformationType()*

public int getTransformationType()

Indicates the nature of this transformation. 



    Returns: {@link #TYPE_ALPHA}, {@link #TYPE_MATRIX}, {@link #TYPE_BOTH} or {@link 
             #TYPE_IDENTITY}. 

*android.view.animation.Transformation.postCompose(Transformation)*

public void postCompose(android.view.animation.Transformation t)

Like (|android.view.animation.Transformation|) but does this.postConcat(t) of 
the transformation matrix. 



*android.view.animation.Transformation.printShortString(PrintWriter)*

public void printShortString(java.io.PrintWriter pw)

Print short string, to optimize dumping. 



*android.view.animation.Transformation.set(Transformation)*

public void set(android.view.animation.Transformation t)

Clones the specified transformation. 


    t - The transformation to clone. 

*android.view.animation.Transformation.setAlpha(float)*

public void setAlpha(float alpha)

Sets the degree of transparency 


    alpha - 1.0 means fully opaqe and 0.0 means fully transparent 

*android.view.animation.Transformation.setTransformationType(int)*

public void setTransformationType(int transformationType)

Sets the transformation type. 


    transformationType - One of {@link #TYPE_ALPHA}, {@link #TYPE_MATRIX}, {@link #TYPE_BOTH} or {@link 
       #TYPE_IDENTITY}. 

*android.view.animation.Transformation.toShortString()*

public |java.lang.String| toShortString()

Return a string representation of the transformation in a compact form. 



*android.view.animation.Transformation.toShortString(StringBuilder)*

public void toShortString(java.lang.StringBuilder sb)





*android.view.animation.Transformation.toString()*

public |java.lang.String| toString()






