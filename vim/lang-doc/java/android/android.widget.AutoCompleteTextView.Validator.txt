*android.widget.AutoCompleteTextView.Validator* *AutoCompleteTextView.Validator* 

public static interface interface AutoCompleteTextView.Validator


|android.widget.AutoCompleteTextView.Validator_Description|
|android.widget.AutoCompleteTextView.Validator_Fields|
|android.widget.AutoCompleteTextView.Validator_Constructors|
|android.widget.AutoCompleteTextView.Validator_Methods|

================================================================================

*android.widget.AutoCompleteTextView.Validator_Methods*
|android.widget.AutoCompleteTextView.Validator.fixText(CharSequence)|Corrects t
|android.widget.AutoCompleteTextView.Validator.isValid(CharSequence)|Validates 

*android.widget.AutoCompleteTextView.Validator_Description*

This interface is used to make sure that the text entered in this TextView 
complies to a certain format. Since there is no foolproof way to prevent the 
user from leaving this View with an incorrect value in it, all we can do is try 
to fix it ourselves when this happens. 



*android.widget.AutoCompleteTextView.Validator.fixText(CharSequence)*

public |java.lang.CharSequence| fixText(java.lang.CharSequence invalidText)

Corrects the specified text to make it valid. 


    invalidText - A string that doesn't pass validation: isValid(invalidText) returns false 

    Returns: A string based on invalidText such as invoking isValid() on it returns true. 

*android.widget.AutoCompleteTextView.Validator.isValid(CharSequence)*

public boolean isValid(java.lang.CharSequence text)

Validates the specified text. 



    Returns: true If the text currently in the text editor is valid. 


