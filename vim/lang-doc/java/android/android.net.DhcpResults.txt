*android.net.DhcpResults* *DhcpResults* A simple object for retrieving the resul

public class DhcpResults
  extends    |java.lang.Object|
  implements |android.os.Parcelable|

|android.net.DhcpResults_Description|
|android.net.DhcpResults_Fields|
|android.net.DhcpResults_Constructors|
|android.net.DhcpResults_Methods|

================================================================================

*android.net.DhcpResults_Fields*
|android.os.Parcelable.Creator<android.net.DhcpResults>_android.net.DhcpResults.CREATOR|
|int_android.net.DhcpResults.leaseDuration|
|android.net.LinkProperties_android.net.DhcpResults.linkProperties|
|java.net.InetAddress_android.net.DhcpResults.serverAddress|
|java.lang.String_android.net.DhcpResults.vendorInfo|

*android.net.DhcpResults_Constructors*
|android.net.DhcpResults()|
|android.net.DhcpResults(DhcpResults)|copy constructor
|android.net.DhcpResults(LinkProperties)|

*android.net.DhcpResults_Methods*
|android.net.DhcpResults.addDns(String)|
|android.net.DhcpResults.addGateway(String)|
|android.net.DhcpResults.addLinkAddress(String,int)|
|android.net.DhcpResults.clear()|
|android.net.DhcpResults.describeContents()|Implement the Parcelable interface
|android.net.DhcpResults.equals(Object)|
|android.net.DhcpResults.hasMeteredHint()|Test if this DHCP lease includes vend
|android.net.DhcpResults.setDomains(String)|
|android.net.DhcpResults.setInterfaceName(String)|
|android.net.DhcpResults.setLeaseDuration(int)|
|android.net.DhcpResults.setServerAddress(String)|
|android.net.DhcpResults.setVendorInfo(String)|
|android.net.DhcpResults.toString()|
|android.net.DhcpResults.updateFromDhcpRequest(DhcpResults)|Updates the DHCP fi
|android.net.DhcpResults.writeToParcel(Parcel,int)|Implement the Parcelable int

*android.net.DhcpResults_Description*

A simple object for retrieving the results of a DHCP request. Optimized 
(attempted) for that jni interface TODO - remove when DhcpInfo is deprecated. 
Move the remaining api to LinkProperties. 



*android.os.Parcelable.Creator<android.net.DhcpResults>_android.net.DhcpResults.CREATOR*

Implement the Parcelable interface 


*int_android.net.DhcpResults.leaseDuration*




*android.net.LinkProperties_android.net.DhcpResults.linkProperties*




*java.net.InetAddress_android.net.DhcpResults.serverAddress*




*java.lang.String_android.net.DhcpResults.vendorInfo*

Vendor specific information (from RFC 2132). 



*android.net.DhcpResults()*

public DhcpResults()




*android.net.DhcpResults(DhcpResults)*

public DhcpResults(android.net.DhcpResults source)

copy constructor 


*android.net.DhcpResults(LinkProperties)*

public DhcpResults(android.net.LinkProperties lp)




*android.net.DhcpResults.addDns(String)*

public boolean addDns(java.lang.String addrString)





*android.net.DhcpResults.addGateway(String)*

public boolean addGateway(java.lang.String addrString)





*android.net.DhcpResults.addLinkAddress(String,int)*

public boolean addLinkAddress(
  java.lang.String addrString,
  int prefixLength)





*android.net.DhcpResults.clear()*

public void clear()





*android.net.DhcpResults.describeContents()*

public int describeContents()

Implement the Parcelable interface 



*android.net.DhcpResults.equals(Object)*

public boolean equals(java.lang.Object obj)





*android.net.DhcpResults.hasMeteredHint()*

public boolean hasMeteredHint()

Test if this DHCP lease includes vendor hint that network link is metered, and 
sensitive to heavy data transfers. 



*android.net.DhcpResults.setDomains(String)*

public void setDomains(java.lang.String domains)





*android.net.DhcpResults.setInterfaceName(String)*

public void setInterfaceName(java.lang.String interfaceName)





*android.net.DhcpResults.setLeaseDuration(int)*

public void setLeaseDuration(int duration)





*android.net.DhcpResults.setServerAddress(String)*

public boolean setServerAddress(java.lang.String addrString)





*android.net.DhcpResults.setVendorInfo(String)*

public void setVendorInfo(java.lang.String info)





*android.net.DhcpResults.toString()*

public |java.lang.String| toString()





*android.net.DhcpResults.updateFromDhcpRequest(DhcpResults)*

public void updateFromDhcpRequest(android.net.DhcpResults orig)

Updates the DHCP fields that need to be retained from original DHCP request if 
the current renewal shows them being empty. 



*android.net.DhcpResults.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel dest,
  int flags)

Implement the Parcelable interface 




