*android.util.Pair* *Pair* Container to ease passing around a tuple of two objec

public class Pair<F,S>
  extends    |java.lang.Object|

|android.util.Pair_Description|
|android.util.Pair_Fields|
|android.util.Pair_Constructors|
|android.util.Pair_Methods|

================================================================================

*android.util.Pair_Fields*
|F_android.util.Pair.first|
|S_android.util.Pair.second|

*android.util.Pair_Constructors*
|android.util.Pair(F,S)|Constructor for a Pair.

*android.util.Pair_Methods*
|android.util.Pair.create(A,B)|Convenience method for creating an appropriately
|android.util.Pair.equals(Object)|Checks the two objects for equality by delega
|android.util.Pair.hashCode()|Compute a hash code using the hash codes of the u

*android.util.Pair_Description*

Container to ease passing around a tuple of two objects. This object provides a 
sensible implementation of equals(), returning true if equals() is true on each 
of the contained objects. 



*F_android.util.Pair.first*




*S_android.util.Pair.second*





*android.util.Pair(F,S)*

public Pair(
  F first,
  S second)

Constructor for a Pair. 

    first - the first object in the Pair 
    second - the second object in the pair 

*android.util.Pair.create(A,B)*

public static |android.util.Pair|<A,B> create(
  A a,
  B b)

Convenience method for creating an appropriately typed pair. 


    a - the first object in the Pair 
    b - the second object in the pair 

    Returns: a Pair that is templatized with the types of a and b 

*android.util.Pair.equals(Object)*

public boolean equals(java.lang.Object o)

Checks the two objects for equality by delegating to their respective 
(|java.lang.Object|) methods. 


    o - the {@link Pair} to which this one is to be checked for equality 

    Returns: true if the underlying objects of the Pair are both considered equal 

*android.util.Pair.hashCode()*

public int hashCode()

Compute a hash code using the hash codes of the underlying objects 



    Returns: a hashcode of the Pair 


