*android.provider.MediaStore.Audio.AudioColumns* *MediaStore.Audio.AudioColumns* 

public static interface interface MediaStore.Audio.AudioColumns

  implements |android.provider.MediaStore.MediaColumns|

|android.provider.MediaStore.Audio.AudioColumns_Description|
|android.provider.MediaStore.Audio.AudioColumns_Fields|
|android.provider.MediaStore.Audio.AudioColumns_Constructors|
|android.provider.MediaStore.Audio.AudioColumns_Methods|

================================================================================

*android.provider.MediaStore.Audio.AudioColumns_Fields*
|java.lang.String_android.provider.MediaStore.Audio.AudioColumns.ALBUM|
|java.lang.String_android.provider.MediaStore.Audio.AudioColumns.ALBUM_ARTIST|
|java.lang.String_android.provider.MediaStore.Audio.AudioColumns.ALBUM_ID|
|java.lang.String_android.provider.MediaStore.Audio.AudioColumns.ALBUM_KEY|
|java.lang.String_android.provider.MediaStore.Audio.AudioColumns.ARTIST|
|java.lang.String_android.provider.MediaStore.Audio.AudioColumns.ARTIST_ID|
|java.lang.String_android.provider.MediaStore.Audio.AudioColumns.ARTIST_KEY|
|java.lang.String_android.provider.MediaStore.Audio.AudioColumns.BOOKMARK|
|java.lang.String_android.provider.MediaStore.Audio.AudioColumns.COMPILATION|
|java.lang.String_android.provider.MediaStore.Audio.AudioColumns.COMPOSER|
|java.lang.String_android.provider.MediaStore.Audio.AudioColumns.DURATION|
|java.lang.String_android.provider.MediaStore.Audio.AudioColumns.GENRE|
|java.lang.String_android.provider.MediaStore.Audio.AudioColumns.IS_ALARM|
|java.lang.String_android.provider.MediaStore.Audio.AudioColumns.IS_MUSIC|
|java.lang.String_android.provider.MediaStore.Audio.AudioColumns.IS_NOTIFICATION|
|java.lang.String_android.provider.MediaStore.Audio.AudioColumns.IS_PODCAST|
|java.lang.String_android.provider.MediaStore.Audio.AudioColumns.IS_RINGTONE|
|java.lang.String_android.provider.MediaStore.Audio.AudioColumns.TITLE_KEY|
|java.lang.String_android.provider.MediaStore.Audio.AudioColumns.TRACK|
|java.lang.String_android.provider.MediaStore.Audio.AudioColumns.YEAR|

*android.provider.MediaStore.Audio.AudioColumns_Description*

Columns for audio file that show up in multiple tables. 



*java.lang.String_android.provider.MediaStore.Audio.AudioColumns.ALBUM*

The album the audio file is from, if any Type: TEXT 


*java.lang.String_android.provider.MediaStore.Audio.AudioColumns.ALBUM_ARTIST*

The artist credited for the album that contains the audio file Type: TEXT 


*java.lang.String_android.provider.MediaStore.Audio.AudioColumns.ALBUM_ID*

The id of the album the audio file is from, if any Type: INTEGER (long) 


*java.lang.String_android.provider.MediaStore.Audio.AudioColumns.ALBUM_KEY*

A non human readable key calculated from the ALBUM, used for searching, sorting 
and grouping Type: TEXT 


*java.lang.String_android.provider.MediaStore.Audio.AudioColumns.ARTIST*

The artist who created the audio file, if any Type: TEXT 


*java.lang.String_android.provider.MediaStore.Audio.AudioColumns.ARTIST_ID*

The id of the artist who created the audio file, if any Type: INTEGER (long) 


*java.lang.String_android.provider.MediaStore.Audio.AudioColumns.ARTIST_KEY*

A non human readable key calculated from the ARTIST, used for searching, 
sorting and grouping Type: TEXT 


*java.lang.String_android.provider.MediaStore.Audio.AudioColumns.BOOKMARK*

The position, in ms, playback was at when playback for this file was last 
stopped. Type: INTEGER (long) 


*java.lang.String_android.provider.MediaStore.Audio.AudioColumns.COMPILATION*

Whether the song is part of a compilation Type: TEXT 


*java.lang.String_android.provider.MediaStore.Audio.AudioColumns.COMPOSER*

The composer of the audio file, if any Type: TEXT 


*java.lang.String_android.provider.MediaStore.Audio.AudioColumns.DURATION*

The duration of the audio file, in ms Type: INTEGER (long) 


*java.lang.String_android.provider.MediaStore.Audio.AudioColumns.GENRE*

The genre of the audio file, if any Type: TEXT Does not exist in the database - 
only used by the media scanner for inserts. 


*java.lang.String_android.provider.MediaStore.Audio.AudioColumns.IS_ALARM*

Non-zero if the audio file may be an alarm Type: INTEGER (boolean) 


*java.lang.String_android.provider.MediaStore.Audio.AudioColumns.IS_MUSIC*

Non-zero if the audio file is music Type: INTEGER (boolean) 


*java.lang.String_android.provider.MediaStore.Audio.AudioColumns.IS_NOTIFICATION*

Non-zero if the audio file may be a notification sound Type: INTEGER (boolean) 


*java.lang.String_android.provider.MediaStore.Audio.AudioColumns.IS_PODCAST*

Non-zero if the audio file is a podcast Type: INTEGER (boolean) 


*java.lang.String_android.provider.MediaStore.Audio.AudioColumns.IS_RINGTONE*

Non-zero if the audio file may be a ringtone Type: INTEGER (boolean) 


*java.lang.String_android.provider.MediaStore.Audio.AudioColumns.TITLE_KEY*

A non human readable key calculated from the TITLE, used for searching, sorting 
and grouping Type: TEXT 


*java.lang.String_android.provider.MediaStore.Audio.AudioColumns.TRACK*

The track number of this song on the album, if any. This number encodes both 
the track number and the disc number. For multi-disc sets, this number will be 
1xxx for tracks on the first disc, 2xxx for tracks on the second disc, etc. 
Type: INTEGER 


*java.lang.String_android.provider.MediaStore.Audio.AudioColumns.YEAR*

The year the audio file was recorded, if any Type: INTEGER 



