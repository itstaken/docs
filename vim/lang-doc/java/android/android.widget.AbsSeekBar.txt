*android.widget.AbsSeekBar* *AbsSeekBar* 

public abstract class AbsSeekBar
  extends    |android.widget.ProgressBar|

|android.widget.AbsSeekBar_Description|
|android.widget.AbsSeekBar_Fields|
|android.widget.AbsSeekBar_Constructors|
|android.widget.AbsSeekBar_Methods|

================================================================================

*android.widget.AbsSeekBar_Constructors*
|android.widget.AbsSeekBar(Context)|
|android.widget.AbsSeekBar(Context,AttributeSet)|
|android.widget.AbsSeekBar(Context,AttributeSet,int)|

*android.widget.AbsSeekBar_Methods*
|android.widget.AbsSeekBar.drawableStateChanged()|
|android.widget.AbsSeekBar.getKeyProgressIncrement()|Returns the amount of prog
|android.widget.AbsSeekBar.getThumb()|Return the drawable used to represent the
|android.widget.AbsSeekBar.getThumbOffset()|
|android.widget.AbsSeekBar.jumpDrawablesToCurrentState()|
|android.widget.AbsSeekBar.onDraw(Canvas)|
|android.widget.AbsSeekBar.onInitializeAccessibilityEvent(AccessibilityEvent)|
|android.widget.AbsSeekBar.onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo)|
|android.widget.AbsSeekBar.onKeyDown(int,KeyEvent)|
|android.widget.AbsSeekBar.onMeasure(int,int)|
|android.widget.AbsSeekBar.onResolveDrawables(int)|
|android.widget.AbsSeekBar.onRtlPropertiesChanged(int)|
|android.widget.AbsSeekBar.onSizeChanged(int,int,int,int)|
|android.widget.AbsSeekBar.onTouchEvent(MotionEvent)|
|android.widget.AbsSeekBar.performAccessibilityAction(int,Bundle)|
|android.widget.AbsSeekBar.setKeyProgressIncrement(int)|Sets the amount of prog
|android.widget.AbsSeekBar.setMax(int)|
|android.widget.AbsSeekBar.setThumb(Drawable)|Sets the thumb that will be drawn
|android.widget.AbsSeekBar.setThumbOffset(int)|Sets the thumb offset that allow
|android.widget.AbsSeekBar.verifyDrawable(Drawable)|

*android.widget.AbsSeekBar_Description*





*android.widget.AbsSeekBar(Context)*

public AbsSeekBar(android.content.Context context)




*android.widget.AbsSeekBar(Context,AttributeSet)*

public AbsSeekBar(
  android.content.Context context,
  android.util.AttributeSet attrs)




*android.widget.AbsSeekBar(Context,AttributeSet,int)*

public AbsSeekBar(
  android.content.Context context,
  android.util.AttributeSet attrs,
  int defStyle)




*android.widget.AbsSeekBar.drawableStateChanged()*

protected void drawableStateChanged()





*android.widget.AbsSeekBar.getKeyProgressIncrement()*

public int getKeyProgressIncrement()

Returns the amount of progress changed via the arrow keys. 

By default, this will be a value that is derived from the max progress. 



    Returns: The amount to increment or decrement when the user presses the arrow keys. This 
             will be positive. 

*android.widget.AbsSeekBar.getThumb()*

public Drawable getThumb()

Return the drawable used to represent the scroll thumb - the component that the 
user can drag back and forth indicating the current value by its position. 



    Returns: The current thumb drawable 

*android.widget.AbsSeekBar.getThumbOffset()*

public int getThumbOffset()





*android.widget.AbsSeekBar.jumpDrawablesToCurrentState()*

public void jumpDrawablesToCurrentState()





*android.widget.AbsSeekBar.onDraw(Canvas)*

protected synchronized void onDraw(Canvas canvas)





*android.widget.AbsSeekBar.onInitializeAccessibilityEvent(AccessibilityEvent)*

public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent event)





*android.widget.AbsSeekBar.onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo)*

public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo info)





*android.widget.AbsSeekBar.onKeyDown(int,KeyEvent)*

public boolean onKeyDown(
  int keyCode,
  android.view.KeyEvent event)





*android.widget.AbsSeekBar.onMeasure(int,int)*

protected synchronized void onMeasure(
  int widthMeasureSpec,
  int heightMeasureSpec)





*android.widget.AbsSeekBar.onResolveDrawables(int)*

public void onResolveDrawables(int layoutDirection)





*android.widget.AbsSeekBar.onRtlPropertiesChanged(int)*

public void onRtlPropertiesChanged(int layoutDirection)





*android.widget.AbsSeekBar.onSizeChanged(int,int,int,int)*

protected void onSizeChanged(
  int w,
  int h,
  int oldw,
  int oldh)





*android.widget.AbsSeekBar.onTouchEvent(MotionEvent)*

public boolean onTouchEvent(android.view.MotionEvent event)





*android.widget.AbsSeekBar.performAccessibilityAction(int,Bundle)*

public boolean performAccessibilityAction(
  int action,
  android.os.Bundle arguments)





*android.widget.AbsSeekBar.setKeyProgressIncrement(int)*

public void setKeyProgressIncrement(int increment)

Sets the amount of progress changed via the arrow keys. 


    increment - The amount to increment or decrement when the user presses the arrow keys. 

*android.widget.AbsSeekBar.setMax(int)*

public synchronized void setMax(int max)





*android.widget.AbsSeekBar.setThumb(Drawable)*

public void setThumb(Drawable thumb)

Sets the thumb that will be drawn at the end of the progress meter within the 
SeekBar. 

If the thumb is a valid drawable (i.e. not null), half its width will be used 
as the new thumb offset (@see #setThumbOffset(int)). 


    thumb - Drawable representing the thumb 

*android.widget.AbsSeekBar.setThumbOffset(int)*

public void setThumbOffset(int thumbOffset)

Sets the thumb offset that allows the thumb to extend out of the range of the 
track. 


    thumbOffset - The offset amount in pixels. 

*android.widget.AbsSeekBar.verifyDrawable(Drawable)*

protected boolean verifyDrawable(Drawable who)






