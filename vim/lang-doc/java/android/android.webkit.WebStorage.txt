*android.webkit.WebStorage* *WebStorage* This class is used to manage the JavaSc

public class WebStorage
  extends    |java.lang.Object|

|android.webkit.WebStorage_Description|
|android.webkit.WebStorage_Fields|
|android.webkit.WebStorage_Constructors|
|android.webkit.WebStorage_Methods|

================================================================================

*android.webkit.WebStorage_Constructors*
|android.webkit.WebStorage()|This class should not be instantiated directly, ap

*android.webkit.WebStorage_Methods*
|android.webkit.WebStorage.deleteAllData()|Clears all storage currently being u
|android.webkit.WebStorage.deleteOrigin(String)|Clears the storage currently be
|android.webkit.WebStorage.getInstance()|Gets the singleton instance of this cl
|android.webkit.WebStorage.getOrigins(ValueCallback<Map>)|Gets the origins curr
|android.webkit.WebStorage.getQuotaForOrigin(String,ValueCallback<Long>)|Gets t
|android.webkit.WebStorage.getUsageForOrigin(String,ValueCallback<Long>)|Gets t
|android.webkit.WebStorage.setQuotaForOrigin(String,long)|Sets the storage quot

*android.webkit.WebStorage_Description*

This class is used to manage the JavaScript storage APIs provided by the 
(|android.webkit.WebView|) . It manages the Application Cache API, the Web SQL 
Database API and the HTML5 Web Storage API. 

The Application Cache API provides a mechanism to create and maintain an 
application cache to power offline Web applications. Use of the Application 
Cache API can be attributed to an origin (|android.webkit.WebStorage.Origin|) , 
however it is not possible to set per-origin quotas. Note that there can be 
only one application cache per application. 

The Web SQL Database API provides storage which is private to a given origin. 
Similar to the Application Cache, use of the Web SQL Database can be attributed 
to an origin. It is also possible to set per-origin quotas. 



*android.webkit.WebStorage()*

public WebStorage()

This class should not be instantiated directly, applications must only use 
(|android.webkit.WebStorage|) to obtain the instance. Note this constructor was 
erroneously public and published in SDK levels prior to 16, but applications 
using it would receive a non-functional instance of this class (there was no 
way to call createHandler() and createUIHandler(), so it would not work). 


*android.webkit.WebStorage.deleteAllData()*

public void deleteAllData()

Clears all storage currently being used by the JavaScript storage APIs. This 
includes the Application Cache, Web SQL Database and the HTML5 Web Storage 
APIs. 



*android.webkit.WebStorage.deleteOrigin(String)*

public void deleteOrigin(java.lang.String origin)

Clears the storage currently being used by both the Application Cache and Web 
SQL Database APIs by the given origin. The origin is specified using its string 
representation. 



*android.webkit.WebStorage.getInstance()*

public static |android.webkit.WebStorage| getInstance()

Gets the singleton instance of this class. 



    Returns: the singleton {@link WebStorage} instance 

*android.webkit.WebStorage.getOrigins(ValueCallback<Map>)*

public void getOrigins(android.webkit.ValueCallback<java.util.Map> callback)

Gets the origins currently using either the Application Cache or Web SQL 
Database APIs. This method operates asynchronously, with the result being 
provided via a (|android.webkit.ValueCallback|) . The origins are provided as a 
map, of typeMap, from the string representation of the origin to a 
(|android.webkit.WebStorage.Origin|) object. 



*android.webkit.WebStorage.getQuotaForOrigin(String,ValueCallback<Long>)*

public void getQuotaForOrigin(
  java.lang.String origin,
  android.webkit.ValueCallback<java.lang.Long> callback)

Gets the storage quota for the Web SQL Database API for the given origin. The 
quota is given in bytes and the origin is specified using its string 
representation. This method operates asynchronously, with the result being 
provided via a (|android.webkit.ValueCallback|) . Note that a quota is not 
enforced on a per-origin basis for the Application Cache API. 



*android.webkit.WebStorage.getUsageForOrigin(String,ValueCallback<Long>)*

public void getUsageForOrigin(
  java.lang.String origin,
  android.webkit.ValueCallback<java.lang.Long> callback)

Gets the amount of storage currently being used by both the Application Cache 
and Web SQL Database APIs by the given origin. The amount is given in bytes and 
the origin is specified using its string representation. This method operates 
asynchronously, with the result being provided via a 
(|android.webkit.ValueCallback|) . 



*android.webkit.WebStorage.setQuotaForOrigin(String,long)*

public void setQuotaForOrigin(
  java.lang.String origin,
  long quota)

Sets the storage quota for the Web SQL Database API for the given origin. The 
quota is specified in bytes and the origin is specified using its string 
representation. Note that a quota is not enforced on a per-origin basis for the 
Application Cache API. 

    Deprecated: Controlling quota per-origin will not be supported in future.



