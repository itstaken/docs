*android.net.SamplingDataTracker* *SamplingDataTracker* 

public class SamplingDataTracker
  extends    |java.lang.Object|

|android.net.SamplingDataTracker_Description|
|android.net.SamplingDataTracker_Fields|
|android.net.SamplingDataTracker_Constructors|
|android.net.SamplingDataTracker_Methods|

================================================================================

*android.net.SamplingDataTracker_Fields*
|java.lang.Object_android.net.SamplingDataTracker.mSamplingDataLock|

*android.net.SamplingDataTracker_Constructors*
|android.net.SamplingDataTracker()|

*android.net.SamplingDataTracker_Methods*
|android.net.SamplingDataTracker.getSampledPacketCount()|
|android.net.SamplingDataTracker.getSampledPacketCount(SamplingDataTracker.SamplingSnapshot,SamplingDataTracker.SamplingSnapshot)|
|android.net.SamplingDataTracker.getSampledPacketErrorCount()|
|android.net.SamplingDataTracker.getSampledRxByteCount()|
|android.net.SamplingDataTracker.getSampledRxPacketCount()|
|android.net.SamplingDataTracker.getSampledRxPacketErrorCount()|
|android.net.SamplingDataTracker.getSampledTxByteCount()|
|android.net.SamplingDataTracker.getSampledTxPacketCount()|
|android.net.SamplingDataTracker.getSampledTxPacketErrorCount()|
|android.net.SamplingDataTracker.getSampleDuration()|
|android.net.SamplingDataTracker.getSampleTimestamp()|
|android.net.SamplingDataTracker.getSamplingSnapshots(Map<String,SamplingDataTracker.SamplingSnapshot>)|
|android.net.SamplingDataTracker.resetSamplingData()|
|android.net.SamplingDataTracker.setCommonLinkQualityInfoFields(LinkQualityInfo)|
|android.net.SamplingDataTracker.startSampling(SamplingDataTracker.SamplingSnapshot)|
|android.net.SamplingDataTracker.stopSampling(SamplingDataTracker.SamplingSnapshot)|

*android.net.SamplingDataTracker_Description*





*java.lang.Object_android.net.SamplingDataTracker.mSamplingDataLock*





*android.net.SamplingDataTracker()*

public SamplingDataTracker()




*android.net.SamplingDataTracker.getSampledPacketCount()*

public long getSampledPacketCount()





*android.net.SamplingDataTracker.getSampledPacketCount(SamplingDataTracker.SamplingSnapshot,SamplingDataTracker.SamplingSnapshot)*

public long getSampledPacketCount(
  android.net.SamplingDataTracker.SamplingSnapshot begin,
  android.net.SamplingDataTracker.SamplingSnapshot end)





*android.net.SamplingDataTracker.getSampledPacketErrorCount()*

public long getSampledPacketErrorCount()





*android.net.SamplingDataTracker.getSampledRxByteCount()*

public long getSampledRxByteCount()





*android.net.SamplingDataTracker.getSampledRxPacketCount()*

public long getSampledRxPacketCount()





*android.net.SamplingDataTracker.getSampledRxPacketErrorCount()*

public long getSampledRxPacketErrorCount()





*android.net.SamplingDataTracker.getSampledTxByteCount()*

public long getSampledTxByteCount()





*android.net.SamplingDataTracker.getSampledTxPacketCount()*

public long getSampledTxPacketCount()





*android.net.SamplingDataTracker.getSampledTxPacketErrorCount()*

public long getSampledTxPacketErrorCount()





*android.net.SamplingDataTracker.getSampleDuration()*

public int getSampleDuration()





*android.net.SamplingDataTracker.getSampleTimestamp()*

public long getSampleTimestamp()





*android.net.SamplingDataTracker.getSamplingSnapshots(Map<String,SamplingDataTracker.SamplingSnapshot>)*

public static void getSamplingSnapshots(java.util.Map<java.lang.String, android.net.SamplingDataTracker.SamplingSnapshot> mapIfaceToSample)





*android.net.SamplingDataTracker.resetSamplingData()*

public void resetSamplingData()





*android.net.SamplingDataTracker.setCommonLinkQualityInfoFields(LinkQualityInfo)*

public void setCommonLinkQualityInfoFields(android.net.LinkQualityInfo li)





*android.net.SamplingDataTracker.startSampling(SamplingDataTracker.SamplingSnapshot)*

public void startSampling(android.net.SamplingDataTracker.SamplingSnapshot s)





*android.net.SamplingDataTracker.stopSampling(SamplingDataTracker.SamplingSnapshot)*

public void stopSampling(android.net.SamplingDataTracker.SamplingSnapshot s)






