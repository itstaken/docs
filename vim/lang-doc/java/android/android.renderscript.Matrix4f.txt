*android.renderscript.Matrix4f* *Matrix4f* 

public class Matrix4f
  extends    |java.lang.Object|

|android.renderscript.Matrix4f_Description|
|android.renderscript.Matrix4f_Fields|
|android.renderscript.Matrix4f_Constructors|
|android.renderscript.Matrix4f_Methods|

================================================================================

*android.renderscript.Matrix4f_Constructors*
|android.renderscript.Matrix4f()|
|android.renderscript.Matrix4f(float[])|

*android.renderscript.Matrix4f_Methods*
|android.renderscript.Matrix4f.get(int,int)|
|android.renderscript.Matrix4f.getArray()|
|android.renderscript.Matrix4f.inverse()|
|android.renderscript.Matrix4f.inverseTranspose()|
|android.renderscript.Matrix4f.load(Matrix4f)|
|android.renderscript.Matrix4f.loadFrustum(float,float,float,float,float,float)|
|android.renderscript.Matrix4f.loadIdentity()|
|android.renderscript.Matrix4f.loadMultiply(Matrix4f,Matrix4f)|
|android.renderscript.Matrix4f.loadOrtho(float,float,float,float,float,float)|
|android.renderscript.Matrix4f.loadOrthoWindow(int,int)|
|android.renderscript.Matrix4f.loadPerspective(float,float,float,float)|
|android.renderscript.Matrix4f.loadProjectionNormalized(int,int)|
|android.renderscript.Matrix4f.loadRotate(float,float,float,float)|
|android.renderscript.Matrix4f.loadScale(float,float,float)|
|android.renderscript.Matrix4f.loadTranslate(float,float,float)|
|android.renderscript.Matrix4f.multiply(Matrix4f)|
|android.renderscript.Matrix4f.rotate(float,float,float,float)|
|android.renderscript.Matrix4f.scale(float,float,float)|
|android.renderscript.Matrix4f.set(int,int,float)|
|android.renderscript.Matrix4f.translate(float,float,float)|
|android.renderscript.Matrix4f.transpose()|

*android.renderscript.Matrix4f_Description*





*android.renderscript.Matrix4f()*

public Matrix4f()




*android.renderscript.Matrix4f(float[])*

public Matrix4f(float[] dataArray)




*android.renderscript.Matrix4f.get(int,int)*

public float get(
  int x,
  int y)





*android.renderscript.Matrix4f.getArray()*

public float[] getArray()





*android.renderscript.Matrix4f.inverse()*

public boolean inverse()





*android.renderscript.Matrix4f.inverseTranspose()*

public boolean inverseTranspose()





*android.renderscript.Matrix4f.load(Matrix4f)*

public void load(android.renderscript.Matrix4f src)





*android.renderscript.Matrix4f.loadFrustum(float,float,float,float,float,float)*

public void loadFrustum(
  float l,
  float r,
  float b,
  float t,
  float n,
  float f)





*android.renderscript.Matrix4f.loadIdentity()*

public void loadIdentity()





*android.renderscript.Matrix4f.loadMultiply(Matrix4f,Matrix4f)*

public void loadMultiply(
  android.renderscript.Matrix4f lhs,
  android.renderscript.Matrix4f rhs)





*android.renderscript.Matrix4f.loadOrtho(float,float,float,float,float,float)*

public void loadOrtho(
  float l,
  float r,
  float b,
  float t,
  float n,
  float f)





*android.renderscript.Matrix4f.loadOrthoWindow(int,int)*

public void loadOrthoWindow(
  int w,
  int h)





*android.renderscript.Matrix4f.loadPerspective(float,float,float,float)*

public void loadPerspective(
  float fovy,
  float aspect,
  float near,
  float far)





*android.renderscript.Matrix4f.loadProjectionNormalized(int,int)*

public void loadProjectionNormalized(
  int w,
  int h)





*android.renderscript.Matrix4f.loadRotate(float,float,float,float)*

public void loadRotate(
  float rot,
  float x,
  float y,
  float z)





*android.renderscript.Matrix4f.loadScale(float,float,float)*

public void loadScale(
  float x,
  float y,
  float z)





*android.renderscript.Matrix4f.loadTranslate(float,float,float)*

public void loadTranslate(
  float x,
  float y,
  float z)





*android.renderscript.Matrix4f.multiply(Matrix4f)*

public void multiply(android.renderscript.Matrix4f rhs)





*android.renderscript.Matrix4f.rotate(float,float,float,float)*

public void rotate(
  float rot,
  float x,
  float y,
  float z)





*android.renderscript.Matrix4f.scale(float,float,float)*

public void scale(
  float x,
  float y,
  float z)





*android.renderscript.Matrix4f.set(int,int,float)*

public void set(
  int x,
  int y,
  float v)





*android.renderscript.Matrix4f.translate(float,float,float)*

public void translate(
  float x,
  float y,
  float z)





*android.renderscript.Matrix4f.transpose()*

public void transpose()






