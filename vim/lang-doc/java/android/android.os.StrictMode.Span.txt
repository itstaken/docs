*android.os.StrictMode.Span* *StrictMode.Span* A tracked, critical time span.

public static class StrictMode.Span
  extends    |java.lang.Object|

|android.os.StrictMode.Span_Description|
|android.os.StrictMode.Span_Fields|
|android.os.StrictMode.Span_Constructors|
|android.os.StrictMode.Span_Methods|

================================================================================

*android.os.StrictMode.Span_Constructors*
|android.os.StrictMode.Span()|

*android.os.StrictMode.Span_Methods*
|android.os.StrictMode.Span.finish()|To be called when the critical span is com

*android.os.StrictMode.Span_Description*

A tracked, critical time span. (e.g. during an animation.) 

The object itself is a linked list node, to avoid any allocations during rapid 
span entries and exits. 



*android.os.StrictMode.Span()*

protected StrictMode.Span()




*android.os.StrictMode.Span.finish()*

public void finish()

To be called when the critical span is complete (i.e. the animation is done 
animating). This can be called on any thread (even a different one from where 
the animation was taking place), but that's only a defensive implementation 
measure. It really makes no sense for you to call this on thread other than 
that where you created it. 




