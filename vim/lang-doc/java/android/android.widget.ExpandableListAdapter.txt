*android.widget.ExpandableListAdapter* *ExpandableListAdapter* An adapter that l

public interface interface ExpandableListAdapter


|android.widget.ExpandableListAdapter_Description|
|android.widget.ExpandableListAdapter_Fields|
|android.widget.ExpandableListAdapter_Constructors|
|android.widget.ExpandableListAdapter_Methods|

================================================================================

*android.widget.ExpandableListAdapter_Methods*
|android.widget.ExpandableListAdapter.areAllItemsEnabled()|
|android.widget.ExpandableListAdapter.getChild(int,int)|Gets the data associate
|android.widget.ExpandableListAdapter.getChildId(int,int)|Gets the ID for the g
|android.widget.ExpandableListAdapter.getChildrenCount(int)|Gets the number of 
|android.widget.ExpandableListAdapter.getChildView(int,int,boolean,View,ViewGroup)|
|android.widget.ExpandableListAdapter.getCombinedChildId(long,long)|Gets an ID 
|android.widget.ExpandableListAdapter.getCombinedGroupId(long)|Gets an ID for a
|android.widget.ExpandableListAdapter.getGroup(int)|Gets the data associated wi
|android.widget.ExpandableListAdapter.getGroupCount()|Gets the number of groups
|android.widget.ExpandableListAdapter.getGroupId(int)|Gets the ID for the group
|android.widget.ExpandableListAdapter.getGroupView(int,boolean,View,ViewGroup)|
|android.widget.ExpandableListAdapter.hasStableIds()|Indicates whether the chil
|android.widget.ExpandableListAdapter.isChildSelectable(int,int)|Whether the ch
|android.widget.ExpandableListAdapter.isEmpty()|
|android.widget.ExpandableListAdapter.onGroupCollapsed(int)|Called when a group
|android.widget.ExpandableListAdapter.onGroupExpanded(int)|Called when a group 
|android.widget.ExpandableListAdapter.registerDataSetObserver(DataSetObserver)|
|android.widget.ExpandableListAdapter.unregisterDataSetObserver(DataSetObserver)|

*android.widget.ExpandableListAdapter_Description*

An adapter that links a (|android.widget.ExpandableListView|) with the 
underlying data. The implementation of this interface will provide access to 
the data of the children (categorized by groups), and also instantiate 
(|android.view.View|) s for children and groups. 



*android.widget.ExpandableListAdapter.areAllItemsEnabled()*

public boolean areAllItemsEnabled()





*android.widget.ExpandableListAdapter.getChild(int,int)*

public |java.lang.Object| getChild(
  int groupPosition,
  int childPosition)

Gets the data associated with the given child within the given group. 


    groupPosition - the position of the group that the child resides in 
    childPosition - the position of the child with respect to other children in the group 

    Returns: the data of the child 

*android.widget.ExpandableListAdapter.getChildId(int,int)*

public long getChildId(
  int groupPosition,
  int childPosition)

Gets the ID for the given child within the given group. This ID must be unique 
across all children within the group. The combined ID (see 
(|android.widget.ExpandableListAdapter|) ) must be unique across ALL items 
(groups and all children). 


    groupPosition - the position of the group that contains the child 
    childPosition - the position of the child within the group for which the ID is wanted 

    Returns: the ID associated with the child 

*android.widget.ExpandableListAdapter.getChildrenCount(int)*

public int getChildrenCount(int groupPosition)

Gets the number of children in a specified group. 


    groupPosition - the position of the group for which the children count should be returned 

    Returns: the children count in the specified group 

*android.widget.ExpandableListAdapter.getChildView(int,int,boolean,View,ViewGroup)*

public |android.view.View| getChildView(
  int groupPosition,
  int childPosition,
  boolean isLastChild,
  android.view.View convertView,
  android.view.ViewGroup parent)

Gets a View that displays the data for the given child within the given group. 


    groupPosition - the position of the group that contains the child 
    childPosition - the position of the child (for which the View is returned) within the group 
    isLastChild - Whether the child is the last child within the group 
    convertView - the old view to reuse, if possible. You should check that this view is non-null 
       and of an appropriate type before using. If it is not possible to 
       convert this view to display the correct data, this method can create a 
       new view. It is not guaranteed that the convertView will have been 
       previously created by {@link #getChildView(int, int, boolean, View, 
       ViewGroup)}. 
    parent - the parent that this view will eventually be attached to 

    Returns: the View corresponding to the child at the specified position 

*android.widget.ExpandableListAdapter.getCombinedChildId(long,long)*

public long getCombinedChildId(
  long groupId,
  long childId)

Gets an ID for a child that is unique across any item (either group or child) 
that is in this list. Expandable lists require each item (group or child) to 
have a unique ID among all children and groups in the list. This method is 
responsible for returning that unique ID given a child's ID and its group's ID. 
Furthermore, if (|android.widget.ExpandableListAdapter|) is true, the returned 
ID must be stable as well. 


    groupId - The ID of the group that contains this child. 
    childId - The ID of the child. 

    Returns: The unique (and possibly stable) ID of the child across all groups and children 
             in this list. 

*android.widget.ExpandableListAdapter.getCombinedGroupId(long)*

public long getCombinedGroupId(long groupId)

Gets an ID for a group that is unique across any item (either group or child) 
that is in this list. Expandable lists require each item (group or child) to 
have a unique ID among all children and groups in the list. This method is 
responsible for returning that unique ID given a group's ID. Furthermore, if 
(|android.widget.ExpandableListAdapter|) is true, the returned ID must be 
stable as well. 


    groupId - The ID of the group 

    Returns: The unique (and possibly stable) ID of the group across all groups and children 
             in this list. 

*android.widget.ExpandableListAdapter.getGroup(int)*

public |java.lang.Object| getGroup(int groupPosition)

Gets the data associated with the given group. 


    groupPosition - the position of the group 

    Returns: the data child for the specified group 

*android.widget.ExpandableListAdapter.getGroupCount()*

public int getGroupCount()

Gets the number of groups. 



    Returns: the number of groups 

*android.widget.ExpandableListAdapter.getGroupId(int)*

public long getGroupId(int groupPosition)

Gets the ID for the group at the given position. This group ID must be unique 
across groups. The combined ID (see (|android.widget.ExpandableListAdapter|) ) 
must be unique across ALL items (groups and all children). 


    groupPosition - the position of the group for which the ID is wanted 

    Returns: the ID associated with the group 

*android.widget.ExpandableListAdapter.getGroupView(int,boolean,View,ViewGroup)*

public |android.view.View| getGroupView(
  int groupPosition,
  boolean isExpanded,
  android.view.View convertView,
  android.view.ViewGroup parent)

Gets a View that displays the given group. This View is only for the group--the 
Views for the group's children will be fetched using 
(|android.widget.ExpandableListAdapter|) . 


    groupPosition - the position of the group for which the View is returned 
    isExpanded - whether the group is expanded or collapsed 
    convertView - the old view to reuse, if possible. You should check that this view is non-null 
       and of an appropriate type before using. If it is not possible to 
       convert this view to display the correct data, this method can create a 
       new view. It is not guaranteed that the convertView will have been 
       previously created by {@link #getGroupView(int, boolean, View, 
       ViewGroup)}. 
    parent - the parent that this view will eventually be attached to 

    Returns: the View corresponding to the group at the specified position 

*android.widget.ExpandableListAdapter.hasStableIds()*

public boolean hasStableIds()

Indicates whether the child and group IDs are stable across changes to the 
underlying data. 



    Returns: whether or not the same ID always refers to the same object 

*android.widget.ExpandableListAdapter.isChildSelectable(int,int)*

public boolean isChildSelectable(
  int groupPosition,
  int childPosition)

Whether the child at the specified position is selectable. 


    groupPosition - the position of the group that contains the child 
    childPosition - the position of the child within the group 

    Returns: whether the child is selectable. 

*android.widget.ExpandableListAdapter.isEmpty()*

public boolean isEmpty()





*android.widget.ExpandableListAdapter.onGroupCollapsed(int)*

public void onGroupCollapsed(int groupPosition)

Called when a group is collapsed. 


    groupPosition - The group being collapsed. 

*android.widget.ExpandableListAdapter.onGroupExpanded(int)*

public void onGroupExpanded(int groupPosition)

Called when a group is expanded. 


    groupPosition - The group being expanded. 

*android.widget.ExpandableListAdapter.registerDataSetObserver(DataSetObserver)*

public void registerDataSetObserver(android.database.DataSetObserver observer)





*android.widget.ExpandableListAdapter.unregisterDataSetObserver(DataSetObserver)*

public void unregisterDataSetObserver(android.database.DataSetObserver observer)






