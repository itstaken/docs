*android.media.AudioRecord* *AudioRecord* 

public class AudioRecord
  extends    |java.lang.Object|

|android.media.AudioRecord_Description|
|android.media.AudioRecord_Fields|
|android.media.AudioRecord_Constructors|
|android.media.AudioRecord_Methods|

================================================================================

*android.media.AudioRecord_Fields*
|int_android.media.AudioRecord.ERROR|
|int_android.media.AudioRecord.ERROR_BAD_VALUE|
|int_android.media.AudioRecord.ERROR_INVALID_OPERATION|
|int_android.media.AudioRecord.RECORDSTATE_RECORDING|
|int_android.media.AudioRecord.RECORDSTATE_STOPPED|
|int_android.media.AudioRecord.STATE_INITIALIZED|
|int_android.media.AudioRecord.STATE_UNINITIALIZED|
|int_android.media.AudioRecord.SUCCESS|

*android.media.AudioRecord_Constructors*
|android.media.AudioRecord(int,int,int,int,int)|

*android.media.AudioRecord_Methods*
|android.media.AudioRecord.finalize()|
|android.media.AudioRecord.getAudioFormat()|
|android.media.AudioRecord.getAudioSessionId()|
|android.media.AudioRecord.getAudioSource()|
|android.media.AudioRecord.getChannelConfiguration()|
|android.media.AudioRecord.getChannelCount()|
|android.media.AudioRecord.getMinBufferSize(int,int,int)|
|android.media.AudioRecord.getNotificationMarkerPosition()|
|android.media.AudioRecord.getPositionNotificationPeriod()|
|android.media.AudioRecord.getRecordingState()|
|android.media.AudioRecord.getSampleRate()|
|android.media.AudioRecord.getState()|
|android.media.AudioRecord.read(byte[],int,int)|
|android.media.AudioRecord.read(ByteBuffer,int)|
|android.media.AudioRecord.read(short[],int,int)|
|android.media.AudioRecord.release()|
|android.media.AudioRecord.setNotificationMarkerPosition(int)|
|android.media.AudioRecord.setPositionNotificationPeriod(int)|
|android.media.AudioRecord.setRecordPositionUpdateListener(AudioRecord.OnRecordPositionUpdateListener)|
|android.media.AudioRecord.setRecordPositionUpdateListener(AudioRecord.OnRecordPositionUpdateListener,Handler)|
|android.media.AudioRecord.startRecording()|
|android.media.AudioRecord.startRecording(MediaSyncEvent)|
|android.media.AudioRecord.stop()|

*android.media.AudioRecord_Description*





*int_android.media.AudioRecord.ERROR*




*int_android.media.AudioRecord.ERROR_BAD_VALUE*




*int_android.media.AudioRecord.ERROR_INVALID_OPERATION*




*int_android.media.AudioRecord.RECORDSTATE_RECORDING*




*int_android.media.AudioRecord.RECORDSTATE_STOPPED*




*int_android.media.AudioRecord.STATE_INITIALIZED*




*int_android.media.AudioRecord.STATE_UNINITIALIZED*




*int_android.media.AudioRecord.SUCCESS*





*android.media.AudioRecord(int,int,int,int,int)*

public AudioRecord(
  int audioSource,
  int sampleRateInHz,
  int channelConfig,
  int audioFormat,
  int bufferSizeInBytes)
  throws |java.lang.IllegalArgumentException|
         



*android.media.AudioRecord.finalize()*

protected void finalize()





*android.media.AudioRecord.getAudioFormat()*

public int getAudioFormat()





*android.media.AudioRecord.getAudioSessionId()*

public int getAudioSessionId()





*android.media.AudioRecord.getAudioSource()*

public int getAudioSource()





*android.media.AudioRecord.getChannelConfiguration()*

public int getChannelConfiguration()





*android.media.AudioRecord.getChannelCount()*

public int getChannelCount()





*android.media.AudioRecord.getMinBufferSize(int,int,int)*

public static int getMinBufferSize(
  int sampleRateInHz,
  int channelConfig,
  int audioFormat)





*android.media.AudioRecord.getNotificationMarkerPosition()*

public int getNotificationMarkerPosition()





*android.media.AudioRecord.getPositionNotificationPeriod()*

public int getPositionNotificationPeriod()





*android.media.AudioRecord.getRecordingState()*

public int getRecordingState()





*android.media.AudioRecord.getSampleRate()*

public int getSampleRate()





*android.media.AudioRecord.getState()*

public int getState()





*android.media.AudioRecord.read(byte[],int,int)*

public int read(
  byte[] audioData,
  int offsetInBytes,
  int sizeInBytes)





*android.media.AudioRecord.read(ByteBuffer,int)*

public int read(
  java.nio.ByteBuffer audioBuffer,
  int sizeInBytes)





*android.media.AudioRecord.read(short[],int,int)*

public int read(
  short[] audioData,
  int offsetInShorts,
  int sizeInShorts)





*android.media.AudioRecord.release()*

public void release()





*android.media.AudioRecord.setNotificationMarkerPosition(int)*

public int setNotificationMarkerPosition(int markerInFrames)





*android.media.AudioRecord.setPositionNotificationPeriod(int)*

public int setPositionNotificationPeriod(int periodInFrames)





*android.media.AudioRecord.setRecordPositionUpdateListener(AudioRecord.OnRecordPositionUpdateListener)*

public void setRecordPositionUpdateListener(android.media.AudioRecord.OnRecordPositionUpdateListener listener)





*android.media.AudioRecord.setRecordPositionUpdateListener(AudioRecord.OnRecordPositionUpdateListener,Handler)*

public void setRecordPositionUpdateListener(
  android.media.AudioRecord.OnRecordPositionUpdateListener listener,
  android.os.Handler handler)





*android.media.AudioRecord.startRecording()*

public void startRecording()
  throws |java.lang.IllegalStateException|
         




*android.media.AudioRecord.startRecording(MediaSyncEvent)*

public void startRecording(android.media.MediaSyncEvent syncEvent)
  throws |java.lang.IllegalStateException|
         




*android.media.AudioRecord.stop()*

public void stop()
  throws |java.lang.IllegalStateException|
         





