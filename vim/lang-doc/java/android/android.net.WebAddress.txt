*android.net.WebAddress* *WebAddress* Web Address Parser

 This is called WebAdd

public class WebAddress
  extends    |java.lang.Object|

|android.net.WebAddress_Description|
|android.net.WebAddress_Fields|
|android.net.WebAddress_Constructors|
|android.net.WebAddress_Methods|

================================================================================

*android.net.WebAddress_Constructors*
|android.net.WebAddress(String)|parses given uriString.

*android.net.WebAddress_Methods*
|android.net.WebAddress.getAuthInfo()|
|android.net.WebAddress.getHost()|
|android.net.WebAddress.getPath()|
|android.net.WebAddress.getPort()|
|android.net.WebAddress.getScheme()|
|android.net.WebAddress.setAuthInfo(String)|
|android.net.WebAddress.setHost(String)|
|android.net.WebAddress.setPath(String)|
|android.net.WebAddress.setPort(int)|
|android.net.WebAddress.setScheme(String)|
|android.net.WebAddress.toString()|

*android.net.WebAddress_Description*

Web Address Parser 

This is called WebAddress, rather than URL or URI, because it attempts to parse 
the stuff that a user will actually type into a browser address widget. 

Unlike java.net.uri, this parser will not choke on URIs missing schemes. It 
will only throw a ParseException if the input is really hosed. 

If given an https scheme but no port, fills in port 



*android.net.WebAddress(String)*

public WebAddress(java.lang.String address)
  throws |android.net.ParseException|
         
parses given uriString. 


*android.net.WebAddress.getAuthInfo()*

public |java.lang.String| getAuthInfo()





*android.net.WebAddress.getHost()*

public |java.lang.String| getHost()





*android.net.WebAddress.getPath()*

public |java.lang.String| getPath()





*android.net.WebAddress.getPort()*

public int getPort()





*android.net.WebAddress.getScheme()*

public |java.lang.String| getScheme()





*android.net.WebAddress.setAuthInfo(String)*

public void setAuthInfo(java.lang.String authInfo)





*android.net.WebAddress.setHost(String)*

public void setHost(java.lang.String host)





*android.net.WebAddress.setPath(String)*

public void setPath(java.lang.String path)





*android.net.WebAddress.setPort(int)*

public void setPort(int port)





*android.net.WebAddress.setScheme(String)*

public void setScheme(java.lang.String scheme)





*android.net.WebAddress.toString()*

public |java.lang.String| toString()






