*android.content.SyncRequest* *SyncRequest* 

public class SyncRequest
  extends    |java.lang.Object|
  implements |android.os.Parcelable|

|android.content.SyncRequest_Description|
|android.content.SyncRequest_Fields|
|android.content.SyncRequest_Constructors|
|android.content.SyncRequest_Methods|

================================================================================

*android.content.SyncRequest_Fields*
|android.os.Parcelable.Creator<android.content.SyncRequest>_android.content.SyncRequest.CREATOR|

*android.content.SyncRequest_Constructors*
|android.content.SyncRequest(SyncRequest.Builder)|Protected ctor to instantiate

*android.content.SyncRequest_Methods*
|android.content.SyncRequest.describeContents()|
|android.content.SyncRequest.getAccount()|
|android.content.SyncRequest.getBundle()|Retrieve bundle for this SyncRequest.
|android.content.SyncRequest.getProvider()|
|android.content.SyncRequest.getSyncFlexTime()|
|android.content.SyncRequest.getSyncRunTime()|
|android.content.SyncRequest.hasAuthority()|
|android.content.SyncRequest.isExpedited()|
|android.content.SyncRequest.isPeriodic()|
|android.content.SyncRequest.writeToParcel(Parcel,int)|

*android.content.SyncRequest_Description*





*android.os.Parcelable.Creator<android.content.SyncRequest>_android.content.SyncRequest.CREATOR*





*android.content.SyncRequest(SyncRequest.Builder)*

protected SyncRequest(android.content.SyncRequest.Builder b)

Protected ctor to instantiate anonymous SyncRequest. 


*android.content.SyncRequest.describeContents()*

public int describeContents()





*android.content.SyncRequest.getAccount()*

public |android.accounts.Account| getAccount()





    Returns: account object for this sync. 

*android.content.SyncRequest.getBundle()*

public |android.os.Bundle| getBundle()

Retrieve bundle for this SyncRequest. Will not be null. 



*android.content.SyncRequest.getProvider()*

public |java.lang.String| getProvider()





    Returns: provider for this sync. 

*android.content.SyncRequest.getSyncFlexTime()*

public long getSyncFlexTime()





    Returns: the earliest point in time that this sync can be scheduled. 

*android.content.SyncRequest.getSyncRunTime()*

public long getSyncRunTime()





    Returns: the last point in time at which this sync must scheduled. 

*android.content.SyncRequest.hasAuthority()*

public boolean hasAuthority()





    Returns: true if this sync uses an account/authority pair, or false if this sync is 
             bound to a Sync Service. 

*android.content.SyncRequest.isExpedited()*

public boolean isExpedited()





    Returns: whether this is an expedited sync. 

*android.content.SyncRequest.isPeriodic()*

public boolean isPeriodic()





    Returns: whether this sync is periodic or one-time. A Sync Request must be either one of 
             these or an InvalidStateException will be thrown in 
             Builder.build(). 

*android.content.SyncRequest.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel parcel,
  int flags)






