*android.hardware.location.GeofenceHardwareRequest* *GeofenceHardwareRequest* Th

public final class GeofenceHardwareRequest
  extends    |java.lang.Object|

|android.hardware.location.GeofenceHardwareRequest_Description|
|android.hardware.location.GeofenceHardwareRequest_Fields|
|android.hardware.location.GeofenceHardwareRequest_Constructors|
|android.hardware.location.GeofenceHardwareRequest_Methods|

================================================================================

*android.hardware.location.GeofenceHardwareRequest_Constructors*
|android.hardware.location.GeofenceHardwareRequest()|

*android.hardware.location.GeofenceHardwareRequest_Methods*
|android.hardware.location.GeofenceHardwareRequest.createCircularGeofence(double,double,double)|
|android.hardware.location.GeofenceHardwareRequest.getLastTransition()|Returns 
|android.hardware.location.GeofenceHardwareRequest.getLatitude()|Returns the la
|android.hardware.location.GeofenceHardwareRequest.getLongitude()|Returns the l
|android.hardware.location.GeofenceHardwareRequest.getMonitorTransitions()|Retu
|android.hardware.location.GeofenceHardwareRequest.getNotificationResponsiveness()|
|android.hardware.location.GeofenceHardwareRequest.getRadius()|Returns the radi
|android.hardware.location.GeofenceHardwareRequest.getUnknownTimer()|Returns th
|android.hardware.location.GeofenceHardwareRequest.setLastTransition(int)|Set t
|android.hardware.location.GeofenceHardwareRequest.setMonitorTransitions(int)|S
|android.hardware.location.GeofenceHardwareRequest.setNotificationResponsiveness(int)|
|android.hardware.location.GeofenceHardwareRequest.setUnknownTimer(int)|Set the

*android.hardware.location.GeofenceHardwareRequest_Description*

This class represents the characteristics of the geofence. 

Use this in conjunction with (|android.hardware.location.GeofenceHardware|) 
APIs. 



*android.hardware.location.GeofenceHardwareRequest()*

public GeofenceHardwareRequest()




*android.hardware.location.GeofenceHardwareRequest.createCircularGeofence(double,double,double)*

public static |android.hardware.location.GeofenceHardwareRequest| createCircularGeofence(
  double latitude,
  double longitude,
  double radius)

Create a circular geofence. 


    latitude - Latitude of the geofence 
    longitude - Longitude of the geofence 
    radius - Radius of the geofence (in meters) 

*android.hardware.location.GeofenceHardwareRequest.getLastTransition()*

public int getLastTransition()

Returns the last transition of this geofence. 



*android.hardware.location.GeofenceHardwareRequest.getLatitude()*

public double getLatitude()

Returns the latitude of this geofence. 



*android.hardware.location.GeofenceHardwareRequest.getLongitude()*

public double getLongitude()

Returns the longitude of this geofence. 



*android.hardware.location.GeofenceHardwareRequest.getMonitorTransitions()*

public int getMonitorTransitions()

Returns transitions monitored for this geofence. 



*android.hardware.location.GeofenceHardwareRequest.getNotificationResponsiveness()*

public int getNotificationResponsiveness()

Returns the notification responsiveness of this geofence. 



*android.hardware.location.GeofenceHardwareRequest.getRadius()*

public double getRadius()

Returns the radius of this geofence. 



*android.hardware.location.GeofenceHardwareRequest.getUnknownTimer()*

public int getUnknownTimer()

Returns the unknownTimer of this geofence. 



*android.hardware.location.GeofenceHardwareRequest.setLastTransition(int)*

public void setLastTransition(int lastTransition)

Set the last known transition of the geofence. 


    lastTransition - The current state of the geofence. Can be one of {@link 
       GeofenceHardware#GEOFENCE_ENTERED}, {@link 
       GeofenceHardware#GEOFENCE_EXITED}, {@link 
       GeofenceHardware#GEOFENCE_UNCERTAIN}. 

*android.hardware.location.GeofenceHardwareRequest.setMonitorTransitions(int)*

public void setMonitorTransitions(int monitorTransitions)

Set the transitions to be monitored. 


    monitorTransitions - Bitwise OR of {@link GeofenceHardware#GEOFENCE_ENTERED}, {@link 
       GeofenceHardware#GEOFENCE_EXITED}, {@link 
       GeofenceHardware#GEOFENCE_UNCERTAIN} 

*android.hardware.location.GeofenceHardwareRequest.setNotificationResponsiveness(int)*

public void setNotificationResponsiveness(int notificationResponsiveness)

Set the notification responsiveness of the geofence. 


    notificationResponsiveness - (milliseconds) Defines the best-effort description of how soon should the 
       callback be called when the transition associated with the Geofence is 
       triggered. For instance, if set to 1000 millseconds with {@link 
       GeofenceHardware#GEOFENCE_ENTERED}, the callback will be called 1000 
       milliseconds within entering the geofence. 

*android.hardware.location.GeofenceHardwareRequest.setUnknownTimer(int)*

public void setUnknownTimer(int unknownTimer)

Set the unknown timer for this geofence. 


    unknownTimer - The time limit after which the {@link GeofenceHardware#GEOFENCE_UNCERTAIN} 
       transition should be triggered. This paramter is defined in 
       milliseconds. 


