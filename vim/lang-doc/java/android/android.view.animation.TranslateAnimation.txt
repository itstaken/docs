*android.view.animation.TranslateAnimation* *TranslateAnimation* An animation th

public class TranslateAnimation
  extends    |android.view.animation.Animation|

|android.view.animation.TranslateAnimation_Description|
|android.view.animation.TranslateAnimation_Fields|
|android.view.animation.TranslateAnimation_Constructors|
|android.view.animation.TranslateAnimation_Methods|

================================================================================

*android.view.animation.TranslateAnimation_Constructors*
|android.view.animation.TranslateAnimation(Context,AttributeSet)|Constructor us
|android.view.animation.TranslateAnimation(float,float,float,float)|Constructor
|android.view.animation.TranslateAnimation(int,float,int,float,int,float,int,float)|

*android.view.animation.TranslateAnimation_Methods*
|android.view.animation.TranslateAnimation.applyTransformation(float,Transformation)|
|android.view.animation.TranslateAnimation.initialize(int,int,int,int)|

*android.view.animation.TranslateAnimation_Description*

An animation that controls the position of an object. See the full 
package(|android.view.animation|) description for details and sample code. 



*android.view.animation.TranslateAnimation(Context,AttributeSet)*

public TranslateAnimation(
  android.content.Context context,
  android.util.AttributeSet attrs)

Constructor used when a TranslateAnimation is loaded from a resource. 

    context - Application context to use 
    attrs - Attribute set from which to read values 

*android.view.animation.TranslateAnimation(float,float,float,float)*

public TranslateAnimation(
  float fromXDelta,
  float toXDelta,
  float fromYDelta,
  float toYDelta)

Constructor to use when building a TranslateAnimation from code 

    fromXDelta - Change in X coordinate to apply at the start of the animation 
    toXDelta - Change in X coordinate to apply at the end of the animation 
    fromYDelta - Change in Y coordinate to apply at the start of the animation 
    toYDelta - Change in Y coordinate to apply at the end of the animation 

*android.view.animation.TranslateAnimation(int,float,int,float,int,float,int,float)*

public TranslateAnimation(
  int fromXType,
  float fromXValue,
  int toXType,
  float toXValue,
  int fromYType,
  float fromYValue,
  int toYType,
  float toYValue)

Constructor to use when building a TranslateAnimation from code 

    fromXType - Specifies how fromXValue should be interpreted. One of Animation.ABSOLUTE, 
       Animation.RELATIVE_TO_SELF, or Animation.RELATIVE_TO_PARENT. 
    fromXValue - Change in X coordinate to apply at the start of the animation. This value can 
       either be an absolute number if fromXType is ABSOLUTE, or a percentage 
       (where 1.0 is 100%) otherwise. 
    toXType - Specifies how toXValue should be interpreted. One of Animation.ABSOLUTE, 
       Animation.RELATIVE_TO_SELF, or Animation.RELATIVE_TO_PARENT. 
    toXValue - Change in X coordinate to apply at the end of the animation. This value can 
       either be an absolute number if toXType is ABSOLUTE, or a percentage 
       (where 1.0 is 100%) otherwise. 
    fromYType - Specifies how fromYValue should be interpreted. One of Animation.ABSOLUTE, 
       Animation.RELATIVE_TO_SELF, or Animation.RELATIVE_TO_PARENT. 
    fromYValue - Change in Y coordinate to apply at the start of the animation. This value can 
       either be an absolute number if fromYType is ABSOLUTE, or a percentage 
       (where 1.0 is 100%) otherwise. 
    toYType - Specifies how toYValue should be interpreted. One of Animation.ABSOLUTE, 
       Animation.RELATIVE_TO_SELF, or Animation.RELATIVE_TO_PARENT. 
    toYValue - Change in Y coordinate to apply at the end of the animation. This value can 
       either be an absolute number if toYType is ABSOLUTE, or a percentage 
       (where 1.0 is 100%) otherwise. 

*android.view.animation.TranslateAnimation.applyTransformation(float,Transformation)*

protected void applyTransformation(
  float interpolatedTime,
  android.view.animation.Transformation t)





*android.view.animation.TranslateAnimation.initialize(int,int,int,int)*

public void initialize(
  int width,
  int height,
  int parentWidth,
  int parentHeight)






