*android.bluetooth.BluetoothGattCharacteristic* *BluetoothGattCharacteristic* Re

public class BluetoothGattCharacteristic
  extends    |java.lang.Object|

|android.bluetooth.BluetoothGattCharacteristic_Description|
|android.bluetooth.BluetoothGattCharacteristic_Fields|
|android.bluetooth.BluetoothGattCharacteristic_Constructors|
|android.bluetooth.BluetoothGattCharacteristic_Methods|

================================================================================

*android.bluetooth.BluetoothGattCharacteristic_Fields*
|int_android.bluetooth.BluetoothGattCharacteristic.FORMAT_FLOAT|
|int_android.bluetooth.BluetoothGattCharacteristic.FORMAT_SFLOAT|
|int_android.bluetooth.BluetoothGattCharacteristic.FORMAT_SINT16|
|int_android.bluetooth.BluetoothGattCharacteristic.FORMAT_SINT32|
|int_android.bluetooth.BluetoothGattCharacteristic.FORMAT_SINT8|
|int_android.bluetooth.BluetoothGattCharacteristic.FORMAT_UINT16|
|int_android.bluetooth.BluetoothGattCharacteristic.FORMAT_UINT32|
|int_android.bluetooth.BluetoothGattCharacteristic.FORMAT_UINT8|
|java.util.List<android.bluetooth.BluetoothGattDescriptor>_android.bluetooth.BluetoothGattCharacteristic.mDescriptors|
|int_android.bluetooth.BluetoothGattCharacteristic.mInstance|
|int_android.bluetooth.BluetoothGattCharacteristic.mKeySize|
|int_android.bluetooth.BluetoothGattCharacteristic.mPermissions|
|int_android.bluetooth.BluetoothGattCharacteristic.mProperties|
|android.bluetooth.BluetoothGattService_android.bluetooth.BluetoothGattCharacteristic.mService|
|java.util.UUID_android.bluetooth.BluetoothGattCharacteristic.mUuid|
|byte[]_android.bluetooth.BluetoothGattCharacteristic.mValue|
|int_android.bluetooth.BluetoothGattCharacteristic.mWriteType|
|int_android.bluetooth.BluetoothGattCharacteristic.PERMISSION_READ|
|int_android.bluetooth.BluetoothGattCharacteristic.PERMISSION_READ_ENCRYPTED|
|int_android.bluetooth.BluetoothGattCharacteristic.PERMISSION_READ_ENCRYPTED_MITM|
|int_android.bluetooth.BluetoothGattCharacteristic.PERMISSION_WRITE|
|int_android.bluetooth.BluetoothGattCharacteristic.PERMISSION_WRITE_ENCRYPTED|
|int_android.bluetooth.BluetoothGattCharacteristic.PERMISSION_WRITE_ENCRYPTED_MITM|
|int_android.bluetooth.BluetoothGattCharacteristic.PERMISSION_WRITE_SIGNED|
|int_android.bluetooth.BluetoothGattCharacteristic.PERMISSION_WRITE_SIGNED_MITM|
|int_android.bluetooth.BluetoothGattCharacteristic.PROPERTY_BROADCAST|
|int_android.bluetooth.BluetoothGattCharacteristic.PROPERTY_EXTENDED_PROPS|
|int_android.bluetooth.BluetoothGattCharacteristic.PROPERTY_INDICATE|
|int_android.bluetooth.BluetoothGattCharacteristic.PROPERTY_NOTIFY|
|int_android.bluetooth.BluetoothGattCharacteristic.PROPERTY_READ|
|int_android.bluetooth.BluetoothGattCharacteristic.PROPERTY_SIGNED_WRITE|
|int_android.bluetooth.BluetoothGattCharacteristic.PROPERTY_WRITE|
|int_android.bluetooth.BluetoothGattCharacteristic.PROPERTY_WRITE_NO_RESPONSE|
|int_android.bluetooth.BluetoothGattCharacteristic.WRITE_TYPE_DEFAULT|
|int_android.bluetooth.BluetoothGattCharacteristic.WRITE_TYPE_NO_RESPONSE|
|int_android.bluetooth.BluetoothGattCharacteristic.WRITE_TYPE_SIGNED|

*android.bluetooth.BluetoothGattCharacteristic_Constructors*
|android.bluetooth.BluetoothGattCharacteristic(UUID,int,int)|Create a new Bluet

*android.bluetooth.BluetoothGattCharacteristic_Methods*
|android.bluetooth.BluetoothGattCharacteristic.addDescriptor(BluetoothGattDescriptor)|
|android.bluetooth.BluetoothGattCharacteristic.getDescriptor(UUID)|Returns a de
|android.bluetooth.BluetoothGattCharacteristic.getDescriptors()|Returns a list 
|android.bluetooth.BluetoothGattCharacteristic.getFloatValue(int,int)|Return th
|android.bluetooth.BluetoothGattCharacteristic.getInstanceId()|Returns the inst
|android.bluetooth.BluetoothGattCharacteristic.getIntValue(int,int)|Return the 
|android.bluetooth.BluetoothGattCharacteristic.getPermissions()|Returns the per
|android.bluetooth.BluetoothGattCharacteristic.getProperties()|Returns the prop
|android.bluetooth.BluetoothGattCharacteristic.getService()|Returns the service
|android.bluetooth.BluetoothGattCharacteristic.getStringValue(int)|Return the s
|android.bluetooth.BluetoothGattCharacteristic.getUuid()|Returns the UUID of th
|android.bluetooth.BluetoothGattCharacteristic.getValue()|Get the stored value 
|android.bluetooth.BluetoothGattCharacteristic.getWriteType()|Gets the write ty
|android.bluetooth.BluetoothGattCharacteristic.setKeySize(int)|Set the desired 
|android.bluetooth.BluetoothGattCharacteristic.setValue(byte[])|Updates the loc
|android.bluetooth.BluetoothGattCharacteristic.setValue(int,int,int)|Set the lo
|android.bluetooth.BluetoothGattCharacteristic.setValue(int,int,int,int)|Set th
|android.bluetooth.BluetoothGattCharacteristic.setValue(String)|Set the locally
|android.bluetooth.BluetoothGattCharacteristic.setWriteType(int)|Set the write 

*android.bluetooth.BluetoothGattCharacteristic_Description*

Represents a Bluetooth GATT Characteristic 

A GATT characteristic is a basic data element used to construct a GATT service, 
(|android.bluetooth.BluetoothGattService|) . The characteristic contains a 
value as well as additional information and optional GATT descriptors, 
(|android.bluetooth.BluetoothGattDescriptor|) . 



*int_android.bluetooth.BluetoothGattCharacteristic.FORMAT_FLOAT*

Characteristic value format type float (32-bit float) 


*int_android.bluetooth.BluetoothGattCharacteristic.FORMAT_SFLOAT*

Characteristic value format type sfloat (16-bit float) 


*int_android.bluetooth.BluetoothGattCharacteristic.FORMAT_SINT16*

Characteristic value format type sint16 


*int_android.bluetooth.BluetoothGattCharacteristic.FORMAT_SINT32*

Characteristic value format type sint32 


*int_android.bluetooth.BluetoothGattCharacteristic.FORMAT_SINT8*

Characteristic value format type sint8 


*int_android.bluetooth.BluetoothGattCharacteristic.FORMAT_UINT16*

Characteristic value format type uint16 


*int_android.bluetooth.BluetoothGattCharacteristic.FORMAT_UINT32*

Characteristic value format type uint32 


*int_android.bluetooth.BluetoothGattCharacteristic.FORMAT_UINT8*

Characteristic value format type uint8 


*java.util.List<android.bluetooth.BluetoothGattDescriptor>_android.bluetooth.BluetoothGattCharacteristic.mDescriptors*

List of descriptors included in this characteristic. 


*int_android.bluetooth.BluetoothGattCharacteristic.mInstance*

Instance ID for this characteristic. 


*int_android.bluetooth.BluetoothGattCharacteristic.mKeySize*

Key size (default = 16). 


*int_android.bluetooth.BluetoothGattCharacteristic.mPermissions*

Characteristic permissions. 


*int_android.bluetooth.BluetoothGattCharacteristic.mProperties*

Characteristic properties. 


*android.bluetooth.BluetoothGattService_android.bluetooth.BluetoothGattCharacteristic.mService*

Back-reference to the service this characteristic belongs to. 


*java.util.UUID_android.bluetooth.BluetoothGattCharacteristic.mUuid*

The UUID of this characteristic. 


*byte[]_android.bluetooth.BluetoothGattCharacteristic.mValue*

The cached value of this characteristic. 


*int_android.bluetooth.BluetoothGattCharacteristic.mWriteType*

Write type for this characteristic. See WRITE_TYPE_* constants. 


*int_android.bluetooth.BluetoothGattCharacteristic.PERMISSION_READ*

Characteristic read permission 


*int_android.bluetooth.BluetoothGattCharacteristic.PERMISSION_READ_ENCRYPTED*

Characteristic permission: Allow encrypted read operations 


*int_android.bluetooth.BluetoothGattCharacteristic.PERMISSION_READ_ENCRYPTED_MITM*

Characteristic permission: Allow reading with man-in-the-middle protection 


*int_android.bluetooth.BluetoothGattCharacteristic.PERMISSION_WRITE*

Characteristic write permission 


*int_android.bluetooth.BluetoothGattCharacteristic.PERMISSION_WRITE_ENCRYPTED*

Characteristic permission: Allow encrypted writes 


*int_android.bluetooth.BluetoothGattCharacteristic.PERMISSION_WRITE_ENCRYPTED_MITM*

Characteristic permission: Allow encrypted writes with man-in-the-middle 
protection 


*int_android.bluetooth.BluetoothGattCharacteristic.PERMISSION_WRITE_SIGNED*

Characteristic permission: Allow signed write operations 


*int_android.bluetooth.BluetoothGattCharacteristic.PERMISSION_WRITE_SIGNED_MITM*

Characteristic permission: Allow signed write operations with man-in-the-middle 
protection 


*int_android.bluetooth.BluetoothGattCharacteristic.PROPERTY_BROADCAST*

Characteristic proprty: Characteristic is broadcastable. 


*int_android.bluetooth.BluetoothGattCharacteristic.PROPERTY_EXTENDED_PROPS*

Characteristic property: Characteristic has extended properties 


*int_android.bluetooth.BluetoothGattCharacteristic.PROPERTY_INDICATE*

Characteristic property: Characteristic supports indication 


*int_android.bluetooth.BluetoothGattCharacteristic.PROPERTY_NOTIFY*

Characteristic property: Characteristic supports notification 


*int_android.bluetooth.BluetoothGattCharacteristic.PROPERTY_READ*

Characteristic property: Characteristic is readable. 


*int_android.bluetooth.BluetoothGattCharacteristic.PROPERTY_SIGNED_WRITE*

Characteristic property: Characteristic supports write with signature 


*int_android.bluetooth.BluetoothGattCharacteristic.PROPERTY_WRITE*

Characteristic property: Characteristic can be written. 


*int_android.bluetooth.BluetoothGattCharacteristic.PROPERTY_WRITE_NO_RESPONSE*

Characteristic property: Characteristic can be written without response. 


*int_android.bluetooth.BluetoothGattCharacteristic.WRITE_TYPE_DEFAULT*

Write characteristic, requesting acknoledgement by the remote device 


*int_android.bluetooth.BluetoothGattCharacteristic.WRITE_TYPE_NO_RESPONSE*

Wrtite characteristic without requiring a response by the remote device 


*int_android.bluetooth.BluetoothGattCharacteristic.WRITE_TYPE_SIGNED*

Write characteristic including authentication signature 



*android.bluetooth.BluetoothGattCharacteristic(UUID,int,int)*

public BluetoothGattCharacteristic(
  java.util.UUID uuid,
  int properties,
  int permissions)

Create a new BluetoothGattCharacteristic. Requires 
(|android.Manifest.permission|) permission. 

    uuid - The UUID for this characteristic 
    properties - Properties of this characteristic 
    permissions - Permissions for this characteristic 

*android.bluetooth.BluetoothGattCharacteristic.addDescriptor(BluetoothGattDescriptor)*

public boolean addDescriptor(android.bluetooth.BluetoothGattDescriptor descriptor)

Adds a descriptor to this characteristic. Requires 
(|android.Manifest.permission|) permission. 


    descriptor - Descriptor to be added to this characteristic. 

    Returns: true, if the descriptor was added to the characteristic 

*android.bluetooth.BluetoothGattCharacteristic.getDescriptor(UUID)*

public |android.bluetooth.BluetoothGattDescriptor| getDescriptor(java.util.UUID uuid)

Returns a descriptor with a given UUID out of the list of descriptors for this 
characteristic. 



    Returns: GATT descriptor object or null if no descriptor with the given UUID was found. 

*android.bluetooth.BluetoothGattCharacteristic.getDescriptors()*

public |java.util.List|<BluetoothGattDescriptor> getDescriptors()

Returns a list of descriptors for this characteristic. 



    Returns: Descriptors for this characteristic 

*android.bluetooth.BluetoothGattCharacteristic.getFloatValue(int,int)*

public |java.lang.Float| getFloatValue(
  int formatType,
  int offset)

Return the stored value of this characteristic. See 
(|android.bluetooth.BluetoothGattCharacteristic|) for details. 


    formatType - The format type used to interpret the characteristic value. 
    offset - Offset at which the float value can be found. 

    Returns: Cached value of the characteristic at a given offset or null if the requested 
             offset exceeds the value size. 

*android.bluetooth.BluetoothGattCharacteristic.getInstanceId()*

public int getInstanceId()

Returns the instance ID for this characteristic. 

If a remote device offers multiple characteristics with the same UUID, the 
instance ID is used to distuinguish between characteristics. 



    Returns: Instance ID of this characteristic 

*android.bluetooth.BluetoothGattCharacteristic.getIntValue(int,int)*

public |java.lang.Integer| getIntValue(
  int formatType,
  int offset)

Return the stored value of this characteristic. 

The formatType parameter determines how the characteristic value is to be 
interpreted. For example, settting formatType to 
(|android.bluetooth.BluetoothGattCharacteristic|) specifies that the first two 
bytes of the characteristic value at the given offset are interpreted to 
generate the return value. 


    formatType - The format type used to interpret the characteristic value. 
    offset - Offset at which the integer value can be found. 

    Returns: Cached value of the characteristic or null of offset exceeds value size. 

*android.bluetooth.BluetoothGattCharacteristic.getPermissions()*

public int getPermissions()

Returns the permissions for this characteristic. 



    Returns: Permissions of this characteristic 

*android.bluetooth.BluetoothGattCharacteristic.getProperties()*

public int getProperties()

Returns the properties of this characteristic. 

The properties contain a bit mask of property flags indicating the features of 
this characteristic. 



    Returns: Properties of this characteristic 

*android.bluetooth.BluetoothGattCharacteristic.getService()*

public |android.bluetooth.BluetoothGattService| getService()

Returns the service this characteristic belongs to. 



    Returns: The asscociated service 

*android.bluetooth.BluetoothGattCharacteristic.getStringValue(int)*

public |java.lang.String| getStringValue(int offset)

Return the stored value of this characteristic. See 
(|android.bluetooth.BluetoothGattCharacteristic|) for details. 


    offset - Offset at which the string value can be found. 

    Returns: Cached value of the characteristic 

*android.bluetooth.BluetoothGattCharacteristic.getUuid()*

public |java.util.UUID| getUuid()

Returns the UUID of this characteristic 



    Returns: UUID of this characteristic 

*android.bluetooth.BluetoothGattCharacteristic.getValue()*

public byte[] getValue()

Get the stored value for this characteristic. 

This function returns the stored value for this characteristic as retrieved by 
calling (|android.bluetooth.BluetoothGatt|) . The cached value of the 
characteristic is updated as a result of a read characteristic operation or if 
a characteristic update notification has been received. 



    Returns: Cached value of the characteristic 

*android.bluetooth.BluetoothGattCharacteristic.getWriteType()*

public int getWriteType()

Gets the write type for this characteristic. 



    Returns: Write type for this characteristic 

*android.bluetooth.BluetoothGattCharacteristic.setKeySize(int)*

public void setKeySize(int keySize)

Set the desired key size. 



*android.bluetooth.BluetoothGattCharacteristic.setValue(byte[])*

public boolean setValue(byte[] value)

Updates the locally stored value of this characteristic. 

This function modifies the locally stored cached value of this characteristic. 
To send the value to the remote device, call 
(|android.bluetooth.BluetoothGatt|) to send the value to the remote device. 


    value - New value for this characteristic 

    Returns: true if the locally stored value has been set, false if the requested value 
             could not be stored locally. 

*android.bluetooth.BluetoothGattCharacteristic.setValue(int,int,int)*

public boolean setValue(
  int value,
  int formatType,
  int offset)

Set the locally stored value of this characteristic. See 
(|android.bluetooth.BluetoothGattCharacteristic|) for details. 


    value - New value for this characteristic 
    formatType - Integer format type used to transform the value parameter 
    offset - Offset at which the value should be placed 

    Returns: true if the locally stored value has been set 

*android.bluetooth.BluetoothGattCharacteristic.setValue(int,int,int,int)*

public boolean setValue(
  int mantissa,
  int exponent,
  int formatType,
  int offset)

Set the locally stored value of this characteristic. See 
(|android.bluetooth.BluetoothGattCharacteristic|) for details. 


    mantissa - Mantissa for this characteristic 
    exponent - exponent value for this characteristic 
    formatType - Float format type used to transform the value parameter 
    offset - Offset at which the value should be placed 

    Returns: true if the locally stored value has been set 

*android.bluetooth.BluetoothGattCharacteristic.setValue(String)*

public boolean setValue(java.lang.String value)

Set the locally stored value of this characteristic. See 
(|android.bluetooth.BluetoothGattCharacteristic|) for details. 


    value - New value for this characteristic 

    Returns: true if the locally stored value has been set 

*android.bluetooth.BluetoothGattCharacteristic.setWriteType(int)*

public void setWriteType(int writeType)

Set the write type for this characteristic 

Setting the write type of a characteristic determines how the 
(|android.bluetooth.BluetoothGatt|) function write this characteristic. 


    writeType - The write type to for this characteristic. Can be one of: {@link 
       #WRITE_TYPE_DEFAULT}, {@link #WRITE_TYPE_NO_RESPONSE} or {@link 
       #WRITE_TYPE_SIGNED}. 


