*android.speech.srec.MicrophoneInputStream* *MicrophoneInputStream* PCM input st

public final class MicrophoneInputStream
  extends    |java.io.InputStream|

|android.speech.srec.MicrophoneInputStream_Description|
|android.speech.srec.MicrophoneInputStream_Fields|
|android.speech.srec.MicrophoneInputStream_Constructors|
|android.speech.srec.MicrophoneInputStream_Methods|

================================================================================

*android.speech.srec.MicrophoneInputStream_Constructors*
|android.speech.srec.MicrophoneInputStream(int,int)|MicrophoneInputStream const

*android.speech.srec.MicrophoneInputStream_Methods*
|android.speech.srec.MicrophoneInputStream.close()|Closes this stream.
|android.speech.srec.MicrophoneInputStream.finalize()|
|android.speech.srec.MicrophoneInputStream.read()|
|android.speech.srec.MicrophoneInputStream.read(byte[])|
|android.speech.srec.MicrophoneInputStream.read(byte[],int,int)|

*android.speech.srec.MicrophoneInputStream_Description*

PCM input stream from the microphone, 16 bits per sample. 



*android.speech.srec.MicrophoneInputStream(int,int)*

public MicrophoneInputStream(
  int sampleRate,
  int fifoDepth)
  throws |java.io.IOException|
         
MicrophoneInputStream constructor. 

    sampleRate - sample rate of the microphone, typically 11025 or 8000. 
    fifoDepth - depth of the real time fifo, measured in sampleRate clock ticks. This 
       determines how long an application may delay before losing data. 

*android.speech.srec.MicrophoneInputStream.close()*

public void close()
  throws |java.io.IOException|
         
Closes this stream. 



*android.speech.srec.MicrophoneInputStream.finalize()*

protected void finalize()
  throws |java.lang.Throwable|
         




*android.speech.srec.MicrophoneInputStream.read()*

public int read()
  throws |java.io.IOException|
         




*android.speech.srec.MicrophoneInputStream.read(byte[])*

public int read(byte[] b)
  throws |java.io.IOException|
         




*android.speech.srec.MicrophoneInputStream.read(byte[],int,int)*

public int read(
  byte[] b,
  int offset,
  int length)
  throws |java.io.IOException|
         





