*android.support.v7.internal.view.menu.MenuPopupHelper* *MenuPopupHelper* Presen

public class MenuPopupHelper
  extends    |java.lang.Object|
  implements |android.support.v7.internal.view.menu.MenuPresenter|

|android.support.v7.internal.view.menu.MenuPopupHelper_Description|
|android.support.v7.internal.view.menu.MenuPopupHelper_Fields|
|android.support.v7.internal.view.menu.MenuPopupHelper_Constructors|
|android.support.v7.internal.view.menu.MenuPopupHelper_Methods|

================================================================================

*android.support.v7.internal.view.menu.MenuPopupHelper_Constructors*
|android.support.v7.internal.view.menu.MenuPopupHelper(Context,MenuBuilder)|
|android.support.v7.internal.view.menu.MenuPopupHelper(Context,MenuBuilder,View)|
|android.support.v7.internal.view.menu.MenuPopupHelper(Context,MenuBuilder,View,boolean)|

*android.support.v7.internal.view.menu.MenuPopupHelper_Methods*
|android.support.v7.internal.view.menu.MenuPopupHelper.collapseItemActionView(MenuBuilder,MenuItemImpl)|
|android.support.v7.internal.view.menu.MenuPopupHelper.dismiss()|
|android.support.v7.internal.view.menu.MenuPopupHelper.expandItemActionView(MenuBuilder,MenuItemImpl)|
|android.support.v7.internal.view.menu.MenuPopupHelper.flagActionItems()|
|android.support.v7.internal.view.menu.MenuPopupHelper.getId()|
|android.support.v7.internal.view.menu.MenuPopupHelper.getMenuView(ViewGroup)|
|android.support.v7.internal.view.menu.MenuPopupHelper.initForMenu(Context,MenuBuilder)|
|android.support.v7.internal.view.menu.MenuPopupHelper.isShowing()|
|android.support.v7.internal.view.menu.MenuPopupHelper.onCloseMenu(MenuBuilder,boolean)|
|android.support.v7.internal.view.menu.MenuPopupHelper.onDismiss()|
|android.support.v7.internal.view.menu.MenuPopupHelper.onGlobalLayout()|
|android.support.v7.internal.view.menu.MenuPopupHelper.onItemClick(<any>,View,int,long)|
|android.support.v7.internal.view.menu.MenuPopupHelper.onKey(View,int,KeyEvent)|
|android.support.v7.internal.view.menu.MenuPopupHelper.onRestoreInstanceState(Parcelable)|
|android.support.v7.internal.view.menu.MenuPopupHelper.onSaveInstanceState()|
|android.support.v7.internal.view.menu.MenuPopupHelper.onSubMenuSelected(SubMenuBuilder)|
|android.support.v7.internal.view.menu.MenuPopupHelper.setAnchorView(View)|
|android.support.v7.internal.view.menu.MenuPopupHelper.setCallback(MenuPresenter.Callback)|
|android.support.v7.internal.view.menu.MenuPopupHelper.setForceShowIcon(boolean)|
|android.support.v7.internal.view.menu.MenuPopupHelper.show()|
|android.support.v7.internal.view.menu.MenuPopupHelper.tryShow()|
|android.support.v7.internal.view.menu.MenuPopupHelper.updateMenuView(boolean)|

*android.support.v7.internal.view.menu.MenuPopupHelper_Description*

Presents a menu as a small, simple popup anchored to another view. 



*android.support.v7.internal.view.menu.MenuPopupHelper(Context,MenuBuilder)*

public MenuPopupHelper(
  Context context,
  android.support.v7.internal.view.menu.MenuBuilder menu)




*android.support.v7.internal.view.menu.MenuPopupHelper(Context,MenuBuilder,View)*

public MenuPopupHelper(
  Context context,
  android.support.v7.internal.view.menu.MenuBuilder menu,
  View anchorView)




*android.support.v7.internal.view.menu.MenuPopupHelper(Context,MenuBuilder,View,boolean)*

public MenuPopupHelper(
  Context context,
  android.support.v7.internal.view.menu.MenuBuilder menu,
  View anchorView,
  boolean overflowOnly)




*android.support.v7.internal.view.menu.MenuPopupHelper.collapseItemActionView(MenuBuilder,MenuItemImpl)*

public boolean collapseItemActionView(
  android.support.v7.internal.view.menu.MenuBuilder menu,
  android.support.v7.internal.view.menu.MenuItemImpl item)





*android.support.v7.internal.view.menu.MenuPopupHelper.dismiss()*

public void dismiss()





*android.support.v7.internal.view.menu.MenuPopupHelper.expandItemActionView(MenuBuilder,MenuItemImpl)*

public boolean expandItemActionView(
  android.support.v7.internal.view.menu.MenuBuilder menu,
  android.support.v7.internal.view.menu.MenuItemImpl item)





*android.support.v7.internal.view.menu.MenuPopupHelper.flagActionItems()*

public boolean flagActionItems()





*android.support.v7.internal.view.menu.MenuPopupHelper.getId()*

public int getId()





*android.support.v7.internal.view.menu.MenuPopupHelper.getMenuView(ViewGroup)*

public |android.support.v7.internal.view.menu.MenuView| getMenuView(ViewGroup root)





*android.support.v7.internal.view.menu.MenuPopupHelper.initForMenu(Context,MenuBuilder)*

public void initForMenu(
  Context context,
  android.support.v7.internal.view.menu.MenuBuilder menu)





*android.support.v7.internal.view.menu.MenuPopupHelper.isShowing()*

public boolean isShowing()





*android.support.v7.internal.view.menu.MenuPopupHelper.onCloseMenu(MenuBuilder,boolean)*

public void onCloseMenu(
  android.support.v7.internal.view.menu.MenuBuilder menu,
  boolean allMenusAreClosing)





*android.support.v7.internal.view.menu.MenuPopupHelper.onDismiss()*

public void onDismiss()





*android.support.v7.internal.view.menu.MenuPopupHelper.onGlobalLayout()*

public void onGlobalLayout()





*android.support.v7.internal.view.menu.MenuPopupHelper.onItemClick(<any>,View,int,long)*

public void onItemClick(
  <any> parent,
  View view,
  int position,
  long id)





*android.support.v7.internal.view.menu.MenuPopupHelper.onKey(View,int,KeyEvent)*

public boolean onKey(
  View v,
  int keyCode,
  KeyEvent event)





*android.support.v7.internal.view.menu.MenuPopupHelper.onRestoreInstanceState(Parcelable)*

public void onRestoreInstanceState(Parcelable state)





*android.support.v7.internal.view.menu.MenuPopupHelper.onSaveInstanceState()*

public Parcelable onSaveInstanceState()





*android.support.v7.internal.view.menu.MenuPopupHelper.onSubMenuSelected(SubMenuBuilder)*

public boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder subMenu)





*android.support.v7.internal.view.menu.MenuPopupHelper.setAnchorView(View)*

public void setAnchorView(View anchor)





*android.support.v7.internal.view.menu.MenuPopupHelper.setCallback(MenuPresenter.Callback)*

public void setCallback(android.support.v7.internal.view.menu.MenuPresenter.Callback cb)





*android.support.v7.internal.view.menu.MenuPopupHelper.setForceShowIcon(boolean)*

public void setForceShowIcon(boolean forceShow)





*android.support.v7.internal.view.menu.MenuPopupHelper.show()*

public void show()





*android.support.v7.internal.view.menu.MenuPopupHelper.tryShow()*

public boolean tryShow()





*android.support.v7.internal.view.menu.MenuPopupHelper.updateMenuView(boolean)*

public void updateMenuView(boolean cleared)






