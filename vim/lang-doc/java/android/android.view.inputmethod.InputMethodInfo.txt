*android.view.inputmethod.InputMethodInfo* *InputMethodInfo* This class is used 

public final class InputMethodInfo
  extends    |java.lang.Object|
  implements |android.os.Parcelable|

|android.view.inputmethod.InputMethodInfo_Description|
|android.view.inputmethod.InputMethodInfo_Fields|
|android.view.inputmethod.InputMethodInfo_Constructors|
|android.view.inputmethod.InputMethodInfo_Methods|

================================================================================

*android.view.inputmethod.InputMethodInfo_Fields*
|android.os.Parcelable.Creator<android.view.inputmethod.InputMethodInfo>_android.view.inputmethod.InputMethodInfo.CREATOR|

*android.view.inputmethod.InputMethodInfo_Constructors*
|android.view.inputmethod.InputMethodInfo(Context,ResolveInfo)|Constructor.
|android.view.inputmethod.InputMethodInfo(Context,ResolveInfo,Map<String,List<InputMethodSubtype>>)|
|android.view.inputmethod.InputMethodInfo(ResolveInfo,boolean,String,List<InputMethodSubtype>,int,boolean)|
|android.view.inputmethod.InputMethodInfo(String,String,CharSequence,String)|Te

*android.view.inputmethod.InputMethodInfo_Methods*
|android.view.inputmethod.InputMethodInfo.describeContents()|
|android.view.inputmethod.InputMethodInfo.dump(Printer,String)|
|android.view.inputmethod.InputMethodInfo.equals(Object)|Used to test whether t
|android.view.inputmethod.InputMethodInfo.getComponent()|Return the component o
|android.view.inputmethod.InputMethodInfo.getId()|Return a unique ID for this i
|android.view.inputmethod.InputMethodInfo.getIsDefaultResourceId()|Return the r
|android.view.inputmethod.InputMethodInfo.getPackageName()|Return the .apk pack
|android.view.inputmethod.InputMethodInfo.getServiceInfo()|Return the raw infor
|android.view.inputmethod.InputMethodInfo.getServiceName()|Return the class nam
|android.view.inputmethod.InputMethodInfo.getSettingsActivity()|Return the clas
|android.view.inputmethod.InputMethodInfo.getSubtypeAt(int)|Return the Input Me
|android.view.inputmethod.InputMethodInfo.getSubtypeCount()|Return the count of
|android.view.inputmethod.InputMethodInfo.hashCode()|
|android.view.inputmethod.InputMethodInfo.isAuxiliaryIme()|
|android.view.inputmethod.InputMethodInfo.isDefault(Context)|Return whether or 
|android.view.inputmethod.InputMethodInfo.loadIcon(PackageManager)|Load the use
|android.view.inputmethod.InputMethodInfo.loadLabel(PackageManager)|Load the us
|android.view.inputmethod.InputMethodInfo.supportsSwitchingToNextInputMethod()|
|android.view.inputmethod.InputMethodInfo.toString()|
|android.view.inputmethod.InputMethodInfo.writeToParcel(Parcel,int)|Used to pac

*android.view.inputmethod.InputMethodInfo_Description*

This class is used to specify meta information of an input method. 

It should be defined in an XML resource file with an<input-method>element. For 
more information, see the guide to <a 
href="guide/topics/text/creating-input-method.html"> Creating an Input Method. 



*android.os.Parcelable.Creator<android.view.inputmethod.InputMethodInfo>_android.view.inputmethod.InputMethodInfo.CREATOR*

Used to make this class parcelable. 



*android.view.inputmethod.InputMethodInfo(Context,ResolveInfo)*

public InputMethodInfo(
  android.content.Context context,
  android.content.pm.ResolveInfo service)
  throws |java.io.IOException|
         |XmlPullParserException|
         
Constructor. 

    context - The Context in which we are parsing the input method. 
    service - The ResolveInfo returned from the package manager about this input method's 
       component. 

*android.view.inputmethod.InputMethodInfo(Context,ResolveInfo,Map<String,List<InputMethodSubtype>>)*

public InputMethodInfo(
  android.content.Context context,
  android.content.pm.ResolveInfo service,
  java.util.Map<java.lang.String, java.util.List<android.view.inputmethod.InputMethodSubtype>> additionalSubtypesMap)
  throws |java.io.IOException|
         |XmlPullParserException|
         
Constructor. 

    context - The Context in which we are parsing the input method. 
    service - The ResolveInfo returned from the package manager about this input method's 
       component. 
    additionalSubtypes - additional subtypes being added to this InputMethodInfo 

*android.view.inputmethod.InputMethodInfo(ResolveInfo,boolean,String,List<InputMethodSubtype>,int,boolean)*

public InputMethodInfo(
  android.content.pm.ResolveInfo ri,
  boolean isAuxIme,
  java.lang.String settingsActivity,
  java.util.List<android.view.inputmethod.InputMethodSubtype> subtypes,
  int isDefaultResId,
  boolean forceDefault)

Temporary API for creating a built-in input method for test. 


*android.view.inputmethod.InputMethodInfo(String,String,CharSequence,String)*

public InputMethodInfo(
  java.lang.String packageName,
  java.lang.String className,
  java.lang.CharSequence label,
  java.lang.String settingsActivity)

Temporary API for creating a built-in input method for test. 


*android.view.inputmethod.InputMethodInfo.describeContents()*

public int describeContents()





*android.view.inputmethod.InputMethodInfo.dump(Printer,String)*

public void dump(
  android.util.Printer pw,
  java.lang.String prefix)





*android.view.inputmethod.InputMethodInfo.equals(Object)*

public boolean equals(java.lang.Object o)

Used to test whether the given parameter object is an 
(|android.view.inputmethod.InputMethodInfo|) and its Id is the same to this 
one. 



    Returns: true if the given parameter object is an {@link InputMethodInfo} and its Id is 
             the same to this one. 

*android.view.inputmethod.InputMethodInfo.getComponent()*

public |android.content.ComponentName| getComponent()

Return the component of the service that implements this input method. 



*android.view.inputmethod.InputMethodInfo.getId()*

public |java.lang.String| getId()

Return a unique ID for this input method. The ID is generated from the package 
and class name implementing the method. 



*android.view.inputmethod.InputMethodInfo.getIsDefaultResourceId()*

public int getIsDefaultResourceId()

Return the resource identifier of a resource inside of this input method's .apk 
that determines whether it should be considered a default input method for the 
system. 



*android.view.inputmethod.InputMethodInfo.getPackageName()*

public |java.lang.String| getPackageName()

Return the .apk package that implements this input method. 



*android.view.inputmethod.InputMethodInfo.getServiceInfo()*

public |android.content.pm.ServiceInfo| getServiceInfo()

Return the raw information about the Service implementing this input method. Do 
not modify the returned object. 



*android.view.inputmethod.InputMethodInfo.getServiceName()*

public |java.lang.String| getServiceName()

Return the class name of the service component that implements this input 
method. 



*android.view.inputmethod.InputMethodInfo.getSettingsActivity()*

public |java.lang.String| getSettingsActivity()

Return the class name of an activity that provides a settings UI for the input 
method. You can launch this activity be starting it with an 
(|android.content.Intent|) whose action is MAIN and with an explicit 
(|android.content.ComponentName|) composed of 
(|android.view.inputmethod.InputMethodInfo|) and the class name returned here. 

A null will be returned if there is no settings activity associated with the 
input method. 



*android.view.inputmethod.InputMethodInfo.getSubtypeAt(int)*

public |android.view.inputmethod.InputMethodSubtype| getSubtypeAt(int index)

Return the Input Method's subtype at the specified index. 


    index - the index of the subtype to return. 

*android.view.inputmethod.InputMethodInfo.getSubtypeCount()*

public int getSubtypeCount()

Return the count of the subtypes of Input Method. 



*android.view.inputmethod.InputMethodInfo.hashCode()*

public int hashCode()





*android.view.inputmethod.InputMethodInfo.isAuxiliaryIme()*

public boolean isAuxiliaryIme()





*android.view.inputmethod.InputMethodInfo.isDefault(Context)*

public boolean isDefault(android.content.Context context)

Return whether or not this ime is a default ime or not. 



*android.view.inputmethod.InputMethodInfo.loadIcon(PackageManager)*

public Drawable loadIcon(android.content.pm.PackageManager pm)

Load the user-displayed icon for this input method. 


    pm - Supply a PackageManager used to load the input method's resources. 

*android.view.inputmethod.InputMethodInfo.loadLabel(PackageManager)*

public |java.lang.CharSequence| loadLabel(android.content.pm.PackageManager pm)

Load the user-displayed label for this input method. 


    pm - Supply a PackageManager used to load the input method's resources. 

*android.view.inputmethod.InputMethodInfo.supportsSwitchingToNextInputMethod()*

public boolean supportsSwitchingToNextInputMethod()





    Returns: true if this input method supports ways to switch to a next input method. 

*android.view.inputmethod.InputMethodInfo.toString()*

public |java.lang.String| toString()





*android.view.inputmethod.InputMethodInfo.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel dest,
  int flags)

Used to package this object into a (|android.os.Parcel|) . 


    dest - The {@link Parcel} to be written. 
    flags - The flags used for parceling. 


