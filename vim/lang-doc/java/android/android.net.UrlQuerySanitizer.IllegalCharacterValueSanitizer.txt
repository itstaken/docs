*android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer* *UrlQuerySanitizer.IllegalCharacterValueSanitizer* 

public static class UrlQuerySanitizer.IllegalCharacterValueSanitizer
  extends    |java.lang.Object|
  implements |android.net.UrlQuerySanitizer.ValueSanitizer|

|android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer_Description|
|android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer_Fields|
|android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer_Constructors|
|android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer_Methods|

================================================================================

*android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer_Fields*
|int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.ALL_BUT_NUL_AND_ANGLE_BRACKETS_LEGAL|
|int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.ALL_BUT_NUL_LEGAL|
|int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.ALL_BUT_WHITESPACE_LEGAL|
|int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.ALL_ILLEGAL|
|int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.ALL_OK|
|int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.ALL_WHITESPACE_OK|
|int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.AMP_AND_SPACE_LEGAL|
|int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.AMP_LEGAL|
|int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.AMP_OK|
|int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.DQUOTE_OK|
|int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.GT_OK|
|int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.LT_OK|
|int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.NON_7_BIT_ASCII_OK|
|int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.NUL_OK|
|int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.OTHER_WHITESPACE_OK|
|int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.PCT_OK|
|int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.SCRIPT_URL_OK|
|int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.SPACE_LEGAL|
|int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.SPACE_OK|
|int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.SQUOTE_OK|
|int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.URL_AND_SPACE_LEGAL|
|int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.URL_LEGAL|

*android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer_Constructors*
|android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer(int)|Construct a 

*android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer_Methods*
|android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.sanitize(String)|

*android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer_Description*

Sanitize values based on which characters they contain. Illegal characters are 
replaced with either space or '_', depending upon whether space is a legal 
character or not. 



*int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.ALL_BUT_NUL_AND_ANGLE_BRACKETS_LEGAL*

Allow all but. 

Nul ('\0') Angle brackets ('') 

Deny script URLs. 


*int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.ALL_BUT_NUL_LEGAL*

Allow all special characters except Nul. ('\0'). Allow script URLs. 


*int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.ALL_BUT_WHITESPACE_LEGAL*

Allow all special characters except for: 

whitespace characters Nul ('\0') 

Allow script URLs. 


*int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.ALL_ILLEGAL*

Deny all special characters. Deny script URLs. 


*int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.ALL_OK*

Mask with all fields set to OK 


*int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.ALL_WHITESPACE_OK*

Mask with both regular space and other whitespace OK 


*int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.AMP_AND_SPACE_LEGAL*

Allow ampersand. Allow space. Deny script URLs. 


*int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.AMP_LEGAL*

Allow ampersand. Deny script URLs. 


*int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.AMP_OK*

Allow ampersand characters ('&') 


*int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.DQUOTE_OK*

Allow double quote characters. ('"') 


*int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.GT_OK*

Allow greater-than characters. ('>') 


*int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.LT_OK*

Allow less-than characters. ('<') 


*int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.NON_7_BIT_ASCII_OK*

Allow characters with character codes 128 to 255. 


*int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.NUL_OK*

Allow nul characters ('\0') 


*int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.OTHER_WHITESPACE_OK*

Allow whitespace characters other than space. The other whitespace characters 
are '\t' '\f' '\n' '\r' and '\0x000b' (vertical tab) 


*int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.PCT_OK*

Allow percent-sign characters ('%') 


*int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.SCRIPT_URL_OK*

Allow text to start with a script URL such as "javascript:" or "vbscript:" 


*int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.SPACE_LEGAL*

Allow space. Deny script URLs. 


*int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.SPACE_OK*

Allow space (' ') characters. 


*int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.SQUOTE_OK*

Allow single quote characters. ('\'') 


*int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.URL_AND_SPACE_LEGAL*

Allow characters used by encoded URLs. Allow spaces. Deny script URLs. 


*int_android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.URL_LEGAL*

Allow characters used by encoded URLs. Deny script URLs. 



*android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer(int)*

public UrlQuerySanitizer.IllegalCharacterValueSanitizer(int flags)

Construct a sanitizer. The parameters set the behavior of the sanitizer. 

    flags - some combination of the XXX_OK flags. 

*android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.sanitize(String)*

public |java.lang.String| sanitize(java.lang.String value)

Sanitize a value. 

If script URLs are not OK, the will be removed. If neither spaces nor other 
white space is OK, then white space will be trimmed from the beginning and end 
of the URL. (Just the actual white space characters are trimmed, not other 
control codes.) Illegal characters will be replaced with either ' ' or '_', 
depending on whether a space is itself a legal character. 


    value - 

    Returns: the sanitized value 


