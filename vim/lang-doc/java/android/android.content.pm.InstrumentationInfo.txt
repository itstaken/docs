*android.content.pm.InstrumentationInfo* *InstrumentationInfo* Information you c

public class InstrumentationInfo
  extends    |android.content.pm.PackageItemInfo|
  implements |android.os.Parcelable|

|android.content.pm.InstrumentationInfo_Description|
|android.content.pm.InstrumentationInfo_Fields|
|android.content.pm.InstrumentationInfo_Constructors|
|android.content.pm.InstrumentationInfo_Methods|

================================================================================

*android.content.pm.InstrumentationInfo_Fields*
|android.os.Parcelable.Creator<android.content.pm.InstrumentationInfo>_android.content.pm.InstrumentationInfo.CREATOR|
|java.lang.String_android.content.pm.InstrumentationInfo.dataDir|
|boolean_android.content.pm.InstrumentationInfo.functionalTest|
|boolean_android.content.pm.InstrumentationInfo.handleProfiling|
|java.lang.String_android.content.pm.InstrumentationInfo.nativeLibraryDir|
|java.lang.String_android.content.pm.InstrumentationInfo.publicSourceDir|
|java.lang.String_android.content.pm.InstrumentationInfo.sourceDir|
|java.lang.String_android.content.pm.InstrumentationInfo.targetPackage|

*android.content.pm.InstrumentationInfo_Constructors*
|android.content.pm.InstrumentationInfo()|
|android.content.pm.InstrumentationInfo(InstrumentationInfo)|

*android.content.pm.InstrumentationInfo_Methods*
|android.content.pm.InstrumentationInfo.describeContents()|
|android.content.pm.InstrumentationInfo.toString()|
|android.content.pm.InstrumentationInfo.writeToParcel(Parcel,int)|

*android.content.pm.InstrumentationInfo_Description*

Information you can retrieve about a particular piece of test instrumentation. 
This corresponds to information collected from the AndroidManifest.xml's 
<instrumentation> tag. 



*android.os.Parcelable.Creator<android.content.pm.InstrumentationInfo>_android.content.pm.InstrumentationInfo.CREATOR*




*java.lang.String_android.content.pm.InstrumentationInfo.dataDir*

Full path to a directory assigned to the package for its persistent data. 


*boolean_android.content.pm.InstrumentationInfo.functionalTest*

Specifies whether or not to run this instrumentation as a functional test 


*boolean_android.content.pm.InstrumentationInfo.handleProfiling*

Specifies whether or not this instrumentation will handle profiling. 


*java.lang.String_android.content.pm.InstrumentationInfo.nativeLibraryDir*

Full path to the directory where the native JNI libraries are stored. 


*java.lang.String_android.content.pm.InstrumentationInfo.publicSourceDir*

Full path to the location of the publicly available parts of this package (i.e. 
the resources and manifest). For non-forward-locked apps this will be the same 
as {@link #sourceDir). 


*java.lang.String_android.content.pm.InstrumentationInfo.sourceDir*

Full path to the location of this package. 


*java.lang.String_android.content.pm.InstrumentationInfo.targetPackage*

The name of the application package being instrumented. From the "package" 
attribute. 



*android.content.pm.InstrumentationInfo()*

public InstrumentationInfo()




*android.content.pm.InstrumentationInfo(InstrumentationInfo)*

public InstrumentationInfo(android.content.pm.InstrumentationInfo orig)




*android.content.pm.InstrumentationInfo.describeContents()*

public int describeContents()





*android.content.pm.InstrumentationInfo.toString()*

public |java.lang.String| toString()





*android.content.pm.InstrumentationInfo.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel dest,
  int parcelableFlags)






