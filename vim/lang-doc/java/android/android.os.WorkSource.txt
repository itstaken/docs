*android.os.WorkSource* *WorkSource* Describes the source of some work that may 

public class WorkSource
  extends    |java.lang.Object|
  implements |android.os.Parcelable|

|android.os.WorkSource_Description|
|android.os.WorkSource_Fields|
|android.os.WorkSource_Constructors|
|android.os.WorkSource_Methods|

================================================================================

*android.os.WorkSource_Fields*
|android.os.Parcelable.Creator<android.os.WorkSource>_android.os.WorkSource.CREATOR|

*android.os.WorkSource_Constructors*
|android.os.WorkSource()|Create an empty work source.
|android.os.WorkSource(int)|
|android.os.WorkSource(int,String)|
|android.os.WorkSource(WorkSource)|Create a new WorkSource that is a copy of an

*android.os.WorkSource_Methods*
|android.os.WorkSource.add(int)|
|android.os.WorkSource.add(int,String)|
|android.os.WorkSource.add(WorkSource)|Merge the contents of other WorkSource i
|android.os.WorkSource.addReturningNewbs(int)|
|android.os.WorkSource.addReturningNewbs(WorkSource)|
|android.os.WorkSource.clear()|Clear this WorkSource to be empty.
|android.os.WorkSource.clearNames()|Clear names from this WorkSource.
|android.os.WorkSource.describeContents()|
|android.os.WorkSource.diff(WorkSource)|Compare this WorkSource with another.
|android.os.WorkSource.equals(Object)|
|android.os.WorkSource.get(int)|
|android.os.WorkSource.getName(int)|
|android.os.WorkSource.hashCode()|
|android.os.WorkSource.remove(WorkSource)|
|android.os.WorkSource.set(int)|
|android.os.WorkSource.set(int,String)|
|android.os.WorkSource.set(WorkSource)|Replace the current contents of this wor
|android.os.WorkSource.setReturningDiffs(WorkSource)|
|android.os.WorkSource.size()|
|android.os.WorkSource.stripNames()|
|android.os.WorkSource.toString()|
|android.os.WorkSource.writeToParcel(Parcel,int)|

*android.os.WorkSource_Description*

Describes the source of some work that may be done by someone else. Currently 
the public representation of what a work source is is not defined; this is an 
opaque container. 



*android.os.Parcelable.Creator<android.os.WorkSource>_android.os.WorkSource.CREATOR*





*android.os.WorkSource()*

public WorkSource()

Create an empty work source. 


*android.os.WorkSource(int)*

public WorkSource(int uid)




*android.os.WorkSource(int,String)*

public WorkSource(
  int uid,
  java.lang.String name)




*android.os.WorkSource(WorkSource)*

public WorkSource(android.os.WorkSource orig)

Create a new WorkSource that is a copy of an existing one. If orig is null, an 
empty WorkSource is created. 


*android.os.WorkSource.add(int)*

public boolean add(int uid)





*android.os.WorkSource.add(int,String)*

public boolean add(
  int uid,
  java.lang.String name)





*android.os.WorkSource.add(WorkSource)*

public boolean add(android.os.WorkSource other)

Merge the contents of other WorkSource in to this one. 


    other - The other WorkSource whose contents are to be merged. 

    Returns: Returns true if any new sources were added. 

*android.os.WorkSource.addReturningNewbs(int)*

public |android.os.WorkSource| addReturningNewbs(int uid)





*android.os.WorkSource.addReturningNewbs(WorkSource)*

public |android.os.WorkSource| addReturningNewbs(android.os.WorkSource other)





*android.os.WorkSource.clear()*

public void clear()

Clear this WorkSource to be empty. 



*android.os.WorkSource.clearNames()*

public void clearNames()

Clear names from this WorkSource. Uids are left intact. 

Useful when combining with another WorkSource that doesn't have names. 



*android.os.WorkSource.describeContents()*

public int describeContents()





*android.os.WorkSource.diff(WorkSource)*

public boolean diff(android.os.WorkSource other)

Compare this WorkSource with another. 


    other - The WorkSource to compare against. 

    Returns: If there is a difference, true is returned. 

*android.os.WorkSource.equals(Object)*

public boolean equals(java.lang.Object o)





*android.os.WorkSource.get(int)*

public int get(int index)





*android.os.WorkSource.getName(int)*

public |java.lang.String| getName(int index)





*android.os.WorkSource.hashCode()*

public int hashCode()





*android.os.WorkSource.remove(WorkSource)*

public boolean remove(android.os.WorkSource other)





*android.os.WorkSource.set(int)*

public void set(int uid)





*android.os.WorkSource.set(int,String)*

public void set(
  int uid,
  java.lang.String name)





*android.os.WorkSource.set(WorkSource)*

public void set(android.os.WorkSource other)

Replace the current contents of this work source with the given work source. If 
other is null, the current work source will be made empty. 



*android.os.WorkSource.setReturningDiffs(WorkSource)*

public |android.os.WorkSource|[] setReturningDiffs(android.os.WorkSource other)





*android.os.WorkSource.size()*

public int size()





*android.os.WorkSource.stripNames()*

public |android.os.WorkSource| stripNames()





*android.os.WorkSource.toString()*

public |java.lang.String| toString()





*android.os.WorkSource.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel dest,
  int flags)






