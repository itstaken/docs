*android.view.Gravity* *Gravity* Standard constants and tools for placing an obj

public class Gravity
  extends    |java.lang.Object|

|android.view.Gravity_Description|
|android.view.Gravity_Fields|
|android.view.Gravity_Constructors|
|android.view.Gravity_Methods|

================================================================================

*android.view.Gravity_Fields*
|int_android.view.Gravity.AXIS_CLIP|
|int_android.view.Gravity.AXIS_PULL_AFTER|
|int_android.view.Gravity.AXIS_PULL_BEFORE|
|int_android.view.Gravity.AXIS_SPECIFIED|
|int_android.view.Gravity.AXIS_X_SHIFT|
|int_android.view.Gravity.AXIS_Y_SHIFT|
|int_android.view.Gravity.BOTTOM|
|int_android.view.Gravity.CENTER|
|int_android.view.Gravity.CENTER_HORIZONTAL|
|int_android.view.Gravity.CENTER_VERTICAL|
|int_android.view.Gravity.CLIP_HORIZONTAL|
|int_android.view.Gravity.CLIP_VERTICAL|
|int_android.view.Gravity.DISPLAY_CLIP_HORIZONTAL|
|int_android.view.Gravity.DISPLAY_CLIP_VERTICAL|
|int_android.view.Gravity.END|
|int_android.view.Gravity.FILL|
|int_android.view.Gravity.FILL_HORIZONTAL|
|int_android.view.Gravity.FILL_VERTICAL|
|int_android.view.Gravity.HORIZONTAL_GRAVITY_MASK|
|int_android.view.Gravity.LEFT|
|int_android.view.Gravity.NO_GRAVITY|
|int_android.view.Gravity.RELATIVE_HORIZONTAL_GRAVITY_MASK|
|int_android.view.Gravity.RELATIVE_LAYOUT_DIRECTION|
|int_android.view.Gravity.RIGHT|
|int_android.view.Gravity.START|
|int_android.view.Gravity.TOP|
|int_android.view.Gravity.VERTICAL_GRAVITY_MASK|

*android.view.Gravity_Constructors*
|android.view.Gravity()|

*android.view.Gravity_Methods*
|android.view.Gravity.apply(int,int,int,Rect,int,int,Rect)|Apply a gravity cons
|android.view.Gravity.apply(int,int,int,Rect,int,int,Rect,int)|Apply a gravity 
|android.view.Gravity.apply(int,int,int,Rect,Rect)|Apply a gravity constant to 
|android.view.Gravity.apply(int,int,int,Rect,Rect,int)|Apply a gravity constant
|android.view.Gravity.applyDisplay(int,Rect,Rect)|Apply additional gravity beha
|android.view.Gravity.applyDisplay(int,Rect,Rect,int)|Apply additional gravity 
|android.view.Gravity.getAbsoluteGravity(int,int)|Convert script specific gravi
|android.view.Gravity.isHorizontal(int)|Indicate whether the supplied gravity h
|android.view.Gravity.isVertical(int)|Indicate whether the supplied gravity has

*android.view.Gravity_Description*

Standard constants and tools for placing an object within a potentially larger 
container. 



*int_android.view.Gravity.AXIS_CLIP*

Raw bit controlling whether the right/bottom edge is clipped to its container, 
based on the gravity direction being applied. 


*int_android.view.Gravity.AXIS_PULL_AFTER*

Raw bit controlling how the right/bottom edge is placed. 


*int_android.view.Gravity.AXIS_PULL_BEFORE*

Raw bit controlling how the left/top edge is placed. 


*int_android.view.Gravity.AXIS_SPECIFIED*

Raw bit indicating the gravity for an axis has been specified. 


*int_android.view.Gravity.AXIS_X_SHIFT*

Bits defining the horizontal axis. 


*int_android.view.Gravity.AXIS_Y_SHIFT*

Bits defining the vertical axis. 


*int_android.view.Gravity.BOTTOM*

Push object to the bottom of its container, not changing its size. 


*int_android.view.Gravity.CENTER*

Place the object in the center of its container in both the vertical and 
horizontal axis, not changing its size. 


*int_android.view.Gravity.CENTER_HORIZONTAL*

Place object in the horizontal center of its container, not changing its size. 


*int_android.view.Gravity.CENTER_VERTICAL*

Place object in the vertical center of its container, not changing its size. 


*int_android.view.Gravity.CLIP_HORIZONTAL*

Flag to clip the edges of the object to its container along the horizontal 
axis. 


*int_android.view.Gravity.CLIP_VERTICAL*

Flag to clip the edges of the object to its container along the vertical axis. 


*int_android.view.Gravity.DISPLAY_CLIP_HORIZONTAL*

Special constant to enable clipping to an overall display along the horizontal 
dimension. This is not applied by default by (|android.view.Gravity|) ; you 
must do so yourself by calling (|android.view.Gravity|) . 


*int_android.view.Gravity.DISPLAY_CLIP_VERTICAL*

Special constant to enable clipping to an overall display along the vertical 
dimension. This is not applied by default by (|android.view.Gravity|) ; you 
must do so yourself by calling (|android.view.Gravity|) . 


*int_android.view.Gravity.END*

Push object to x-axis position at the end of its container, not changing its 
size. 


*int_android.view.Gravity.FILL*

Grow the horizontal and vertical size of the object if needed so it completely 
fills its container. 


*int_android.view.Gravity.FILL_HORIZONTAL*

Grow the horizontal size of the object if needed so it completely fills its 
container. 


*int_android.view.Gravity.FILL_VERTICAL*

Grow the vertical size of the object if needed so it completely fills its 
container. 


*int_android.view.Gravity.HORIZONTAL_GRAVITY_MASK*

Binary mask to get the absolute horizontal gravity of a gravity. 


*int_android.view.Gravity.LEFT*

Push object to the left of its container, not changing its size. 


*int_android.view.Gravity.NO_GRAVITY*

Constant indicating that no gravity has been set 


*int_android.view.Gravity.RELATIVE_HORIZONTAL_GRAVITY_MASK*

Binary mask for the horizontal gravity and script specific direction bit. 


*int_android.view.Gravity.RELATIVE_LAYOUT_DIRECTION*

Raw bit controlling whether the layout direction is relative or not (START/END 
instead of absolute LEFT/RIGHT). 


*int_android.view.Gravity.RIGHT*

Push object to the right of its container, not changing its size. 


*int_android.view.Gravity.START*

Push object to x-axis position at the start of its container, not changing its 
size. 


*int_android.view.Gravity.TOP*

Push object to the top of its container, not changing its size. 


*int_android.view.Gravity.VERTICAL_GRAVITY_MASK*

Binary mask to get the vertical gravity of a gravity. 



*android.view.Gravity()*

public Gravity()




*android.view.Gravity.apply(int,int,int,Rect,int,int,Rect)*

public static void apply(
  int gravity,
  int w,
  int h,
  Rect container,
  int xAdj,
  int yAdj,
  Rect outRect)

Apply a gravity constant to an object. 


    gravity - The desired placement of the object, as defined by the constants in this class. 
    w - The horizontal size of the object. 
    h - The vertical size of the object. 
    container - The frame of the containing space, in which the object will be placed. Should 
       be large enough to contain the width and height of the object. 
    xAdj - Offset to apply to the X axis. If gravity is LEFT this pushes it to the right; 
       if gravity is RIGHT it pushes it to the left; if gravity is 
       CENTER_HORIZONTAL it pushes it to the right or left; otherwise it is 
       ignored. 
    yAdj - Offset to apply to the Y axis. If gravity is TOP this pushes it down; if 
       gravity is BOTTOM it pushes it up; if gravity is CENTER_VERTICAL it 
       pushes it down or up; otherwise it is ignored. 
    outRect - Receives the computed frame of the object in its container. 

*android.view.Gravity.apply(int,int,int,Rect,int,int,Rect,int)*

public static void apply(
  int gravity,
  int w,
  int h,
  Rect container,
  int xAdj,
  int yAdj,
  Rect outRect,
  int layoutDirection)

Apply a gravity constant to an object. 


    gravity - The desired placement of the object, as defined by the constants in this class. 
    w - The horizontal size of the object. 
    h - The vertical size of the object. 
    container - The frame of the containing space, in which the object will be placed. Should 
       be large enough to contain the width and height of the object. 
    xAdj - Offset to apply to the X axis. If gravity is LEFT this pushes it to the right; 
       if gravity is RIGHT it pushes it to the left; if gravity is 
       CENTER_HORIZONTAL it pushes it to the right or left; otherwise it is 
       ignored. 
    yAdj - Offset to apply to the Y axis. If gravity is TOP this pushes it down; if 
       gravity is BOTTOM it pushes it up; if gravity is CENTER_VERTICAL it 
       pushes it down or up; otherwise it is ignored. 
    outRect - Receives the computed frame of the object in its container. 
    layoutDirection - The layout direction. 

*android.view.Gravity.apply(int,int,int,Rect,Rect)*

public static void apply(
  int gravity,
  int w,
  int h,
  Rect container,
  Rect outRect)

Apply a gravity constant to an object. This suppose that the layout direction 
is LTR. 


    gravity - The desired placement of the object, as defined by the constants in this class. 
    w - The horizontal size of the object. 
    h - The vertical size of the object. 
    container - The frame of the containing space, in which the object will be placed. Should 
       be large enough to contain the width and height of the object. 
    outRect - Receives the computed frame of the object in its container. 

*android.view.Gravity.apply(int,int,int,Rect,Rect,int)*

public static void apply(
  int gravity,
  int w,
  int h,
  Rect container,
  Rect outRect,
  int layoutDirection)

Apply a gravity constant to an object and take care if layout direction is RTL 
or not. 


    gravity - The desired placement of the object, as defined by the constants in this class. 
    w - The horizontal size of the object. 
    h - The vertical size of the object. 
    container - The frame of the containing space, in which the object will be placed. Should 
       be large enough to contain the width and height of the object. 
    outRect - Receives the computed frame of the object in its container. 
    layoutDirection - The layout direction. 

*android.view.Gravity.applyDisplay(int,Rect,Rect)*

public static void applyDisplay(
  int gravity,
  Rect display,
  Rect inoutObj)

Apply additional gravity behavior based on the overall "display" that an object 
exists in. This can be used after (|android.view.Gravity|) to place the object 
within a visible display. By default this moves or clips the object to be 
visible in the display; the gravity flags (|android.view.Gravity|) and 
(|android.view.Gravity|) can be used to change this behavior. 


    gravity - Gravity constants to modify the placement within the display. 
    display - The rectangle of the display in which the object is being placed. 
    inoutObj - Supplies the current object position; returns with it modified if needed to fit 
       in the display. 

*android.view.Gravity.applyDisplay(int,Rect,Rect,int)*

public static void applyDisplay(
  int gravity,
  Rect display,
  Rect inoutObj,
  int layoutDirection)

Apply additional gravity behavior based on the overall "display" that an object 
exists in. This can be used after (|android.view.Gravity|) to place the object 
within a visible display. By default this moves or clips the object to be 
visible in the display; the gravity flags (|android.view.Gravity|) and 
(|android.view.Gravity|) can be used to change this behavior. 


    gravity - Gravity constants to modify the placement within the display. 
    display - The rectangle of the display in which the object is being placed. 
    inoutObj - Supplies the current object position; returns with it modified if needed to fit 
       in the display. 
    layoutDirection - The layout direction. 

*android.view.Gravity.getAbsoluteGravity(int,int)*

public static int getAbsoluteGravity(
  int gravity,
  int layoutDirection)

Convert script specific gravity to absolute horizontal value. 

if horizontal direction is LTR, then START will set LEFT and END will set 
RIGHT. if horizontal direction is RTL, then START will set RIGHT and END will 
set LEFT. 


    gravity - The gravity to convert to absolute (horizontal) values. 
    layoutDirection - The layout direction. 

    Returns: gravity converted to absolute (horizontal) values. 

*android.view.Gravity.isHorizontal(int)*

public static boolean isHorizontal(int gravity)

Indicate whether the supplied gravity has an horizontal pull. 


    gravity - the gravity to check for horizontal pull 

    Returns: true if the supplied gravity has an horizontal pull 

*android.view.Gravity.isVertical(int)*

public static boolean isVertical(int gravity)

Indicate whether the supplied gravity has a vertical pull. 


    gravity - the gravity to check for vertical pull 

    Returns: true if the supplied gravity has a vertical pull 


