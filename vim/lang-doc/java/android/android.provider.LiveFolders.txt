*android.provider.LiveFolders* *LiveFolders* A LiveFolder is a special folder wh

public final class LiveFolders
  extends    |java.lang.Object|
  implements |android.provider.BaseColumns|

|android.provider.LiveFolders_Description|
|android.provider.LiveFolders_Fields|
|android.provider.LiveFolders_Constructors|
|android.provider.LiveFolders_Methods|

================================================================================

*android.provider.LiveFolders_Fields*
|java.lang.String_android.provider.LiveFolders.ACTION_CREATE_LIVE_FOLDER|
|java.lang.String_android.provider.LiveFolders.DESCRIPTION|
|int_android.provider.LiveFolders.DISPLAY_MODE_GRID|
|int_android.provider.LiveFolders.DISPLAY_MODE_LIST|
|java.lang.String_android.provider.LiveFolders.EXTRA_LIVE_FOLDER_BASE_INTENT|
|java.lang.String_android.provider.LiveFolders.EXTRA_LIVE_FOLDER_DISPLAY_MODE|
|java.lang.String_android.provider.LiveFolders.EXTRA_LIVE_FOLDER_ICON|
|java.lang.String_android.provider.LiveFolders.EXTRA_LIVE_FOLDER_NAME|
|java.lang.String_android.provider.LiveFolders.ICON_BITMAP|
|java.lang.String_android.provider.LiveFolders.ICON_PACKAGE|
|java.lang.String_android.provider.LiveFolders.ICON_RESOURCE|
|java.lang.String_android.provider.LiveFolders.INTENT|
|java.lang.String_android.provider.LiveFolders.NAME|

*android.provider.LiveFolders_Description*

A LiveFolder is a special folder whose content is provided by a 
(|android.content.ContentProvider|) . To create a live folder, two components 
are required: 

An activity that can respond to the intent action 
(|android.provider.LiveFolders|) . The activity is responsible for creating the 
live folder. A (|android.content.ContentProvider|) to provide the live folder 
items. 

Lifecycle When a user wants to create a live folder, the system looks for all 
activities with the intent filter action (|android.provider.LiveFolders|) and 
presents the list to the user. When the user chooses one of the activities, the 
activity is invoked with the (|android.provider.LiveFolders|) action. The 
activity then creates the live folder and passes it back to the system by 
setting it as an activity result(|android.app.Activity|) . The live folder is 
described by a content provider URI, a name, an icon and a display mode. 
Finally, when the user opens the live folder, the system queries the content 
provider to retrieve the folder's content. 

Setting up the live folder activity The following code sample shows how to 
write an activity that creates a live folder: 

public static class MyLiveFolder extends Activity { public static final Uri 
CONTENT_URI = Uri.parse("content://my.app/live"); 

protected void onCreate(Bundle savedInstanceState) { 
super.onCreate(savedInstanceState); 

final Intent intent = getIntent(); final String action = intent.getAction(); 

if (LiveFolders.ACTION_CREATE_LIVE_FOLDER.equals(action)) { 
setResult(RESULT_OK, createLiveFolder(this, CONTENT_URI, "My LiveFolder", 
R.drawable.ic_launcher_contacts_phones)); } else { setResult(RESULT_CANCELED); 
} 

finish(); } 

private static Intent createLiveFolder(Context context, Uri uri, String name, 
int icon) { 

final Intent intent = new Intent(); 

intent.setData(uri); intent.putExtra(LiveFolders.EXTRA_LIVE_FOLDER_NAME, name); 
intent.putExtra(LiveFolders.EXTRA_LIVE_FOLDER_ICON, 
Intent.ShortcutIconResource.fromContext(context, icon)); 
intent.putExtra(LiveFolders.EXTRA_LIVE_FOLDER_DISPLAY_MODE, 
LiveFolders.DISPLAY_MODE_LIST); 

return intent; } } 

The live folder is described by an (|android.content.Intent|) as follows: 

Component Type Description Required 

URI URI The ContentProvider URI Yes 

(|android.provider.LiveFolders|) Extra String The name of the live folder Yes 

(|android.provider.LiveFolders|) Extra 
(|android.content.Intent.ShortcutIconResource|) The icon of the live folder Yes 

(|android.provider.LiveFolders|) Extra int The display mode of the live folder. 
The value must be either (|android.provider.LiveFolders|) or 
(|android.provider.LiveFolders|) . Yes 

(|android.provider.LiveFolders|) Extra Intent When the user clicks an item 
inside a live folder, the system will either fire the intent associated with 
that item or, if present, the live folder's base intent with the id of the item 
appended to the base intent's URI. No 



Setting up the content provider The live folder's content provider must, upon 
query, return a (|android.database.Cursor|) whose columns match the following 
names: 

Column Type Description Required 

(|android.provider.LiveFolders|) String The name of the item Yes 

(|android.provider.LiveFolders|) String The description of the item. The 
description is ignored when the live folder's display mode is 
(|android.provider.LiveFolders|) . No 

(|android.provider.LiveFolders|) (|android.content.Intent|) The intent to fire 
when the item is clicked. Ignored when the live folder defines a base intent. 
No 

(|android.provider.LiveFolders|) Bitmap The icon for the item. When this column 
value is not null, the values for the columns (|android.provider.LiveFolders|) 
and (|android.provider.LiveFolders|) must be null. No 

(|android.provider.LiveFolders|) String The package of the item's icon. When 
this value is not null, the value for the column 
(|android.provider.LiveFolders|) must be specified and the value for the column 
(|android.provider.LiveFolders|) must be null. No 

(|android.provider.LiveFolders|) String The resource name of the item's icon. 
When this value is not null, the value for the column 
(|android.provider.LiveFolders|) must be specified and the value for the column 
(|android.provider.LiveFolders|) must be null. No 




  Deprecated: Live folders are no longer supported by Android.  These have been
 replaced by the new
 <a href="{@docRoot}guide/topics/appwidgets/index.html#collections">AppWidget Collection</a>
 APIs introduced in {@link android.os.Build.VERSION_CODES#HONEYCOMB}.  These provide
 all of the features of live folders plus many more.  The use of live folders is greatly
 discouraged because of security issues they introduce -- publishing a live folder requires
 making all data show for the live folder available to all applications with no
 permissions protecting it.

*java.lang.String_android.provider.LiveFolders.ACTION_CREATE_LIVE_FOLDER*

Activity Action: Creates a live folder. Input: Nothing. Output: An Intent 
representing the live folder. The intent must contain four extras: 
EXTRA_LIVE_FOLDER_NAME (value: String), EXTRA_LIVE_FOLDER_ICON (value: 
ShortcutIconResource), EXTRA_LIVE_FOLDER_URI (value: String) and 
EXTRA_LIVE_FOLDER_DISPLAY_MODE (value: int). The Intent can optionnally contain 
EXTRA_LIVE_FOLDER_BASE_INTENT (value: Intent). 


*java.lang.String_android.provider.LiveFolders.DESCRIPTION*

Content provider column. Description of the live folder item. This value is 
ignored if the live folder's display mode is (|android.provider.LiveFolders|) . 
Optional. Type: String. 


*int_android.provider.LiveFolders.DISPLAY_MODE_GRID*

Displays a live folder's content in a grid. 


*int_android.provider.LiveFolders.DISPLAY_MODE_LIST*

Displays a live folder's content in a list. 


*java.lang.String_android.provider.LiveFolders.EXTRA_LIVE_FOLDER_BASE_INTENT*

The name of the extra used to define the base Intent of a live folder. 


*java.lang.String_android.provider.LiveFolders.EXTRA_LIVE_FOLDER_DISPLAY_MODE*

The name of the extra used to define the display mode of a live folder. 


*java.lang.String_android.provider.LiveFolders.EXTRA_LIVE_FOLDER_ICON*

The name of the extra used to define the icon of a live folder. 


*java.lang.String_android.provider.LiveFolders.EXTRA_LIVE_FOLDER_NAME*

The name of the extra used to define the name of a live folder. 


*java.lang.String_android.provider.LiveFolders.ICON_BITMAP*

Content provider column. Icon of the live folder item, as a custom bitmap. 
Optional. Type: (|android.graphics.Bitmap|) . 


*java.lang.String_android.provider.LiveFolders.ICON_PACKAGE*

Content provider column. Package where to find the icon of the live folder 
item. This value can be obtained easily using 
(|android.content.Intent.ShortcutIconResource|) . Optional. Type: String. 


*java.lang.String_android.provider.LiveFolders.ICON_RESOURCE*

Content provider column. Resource name of the live folder item. This value can 
be obtained easily using (|android.content.Intent.ShortcutIconResource|) . 
Optional. Type: String. 


*java.lang.String_android.provider.LiveFolders.INTENT*

Content provider column. Intent of the live folder item. Optional if the live 
folder has a base intent. Type: (|android.content.Intent|) . 


*java.lang.String_android.provider.LiveFolders.NAME*

Content provider column. Name of the live folder item. Required. Type: String. 



