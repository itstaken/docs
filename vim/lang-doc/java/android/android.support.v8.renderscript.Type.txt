*android.support.v8.renderscript.Type* *Type* A Type describes theandroid.suppor

public class Type
  extends    |android.support.v8.renderscript.BaseObj|

|android.support.v8.renderscript.Type_Description|
|android.support.v8.renderscript.Type_Fields|
|android.support.v8.renderscript.Type_Constructors|
|android.support.v8.renderscript.Type_Methods|

================================================================================

*android.support.v8.renderscript.Type_Methods*
|android.support.v8.renderscript.Type.getCount()|Return the total number of acc
|android.support.v8.renderscript.Type.getElement()|Return the element associate
|android.support.v8.renderscript.Type.getX()|Return the value of the X dimensio
|android.support.v8.renderscript.Type.getY()|Return the value of the Y dimensio
|android.support.v8.renderscript.Type.getYuv()|Get the YUV format
|android.support.v8.renderscript.Type.getZ()|Return the value of the Z dimensio
|android.support.v8.renderscript.Type.hasFaces()|Return if the Type is a cube m
|android.support.v8.renderscript.Type.hasMipmaps()|Return if the Type has a mip

*android.support.v8.renderscript.Type_Description*

A Type describes the (|android.support.v8.renderscript.Element|) and dimensions 
used for an (|android.support.v8.renderscript.Allocation|) or a parallel 
operation. Types are created through 
(|android.support.v8.renderscript.Type.Builder|) . 

A Type always includes an (|android.support.v8.renderscript.Element|) and an X 
dimension. A Type may be multidimensional, up to three dimensions. A nonzero 
value in the Y or Z dimensions indicates that the dimension is present. Note 
that a Type with only a given X dimension and a Type with the same X dimension 
but Y = 1 are not equivalent. 

A Type also supports inclusion of level of detail (LOD) or cube map faces. LOD 
and cube map faces are booleans to indicate present or not present. 

A Type also supports YUV format information to support an 
(|android.support.v8.renderscript.Allocation|) in a YUV format. The YUV formats 
supported are (|android.graphics.ImageFormat|) and 
(|android.graphics.ImageFormat|) . 

Developer Guides For more information about creating an application that uses 
RenderScript, read the <a 
href="guide/topics/renderscript/index.html">RenderScript developer guide. 



*android.support.v8.renderscript.Type.getCount()*

public int getCount()

Return the total number of accessable cells in the Type. 



    Returns: 

*android.support.v8.renderscript.Type.getElement()*

public |android.support.v8.renderscript.Element| getElement()

Return the element associated with this Type. 



    Returns: 

*android.support.v8.renderscript.Type.getX()*

public int getX()

Return the value of the X dimension. 



    Returns: 

*android.support.v8.renderscript.Type.getY()*

public int getY()

Return the value of the Y dimension or 0 for a 1D allocation. 



    Returns: 

*android.support.v8.renderscript.Type.getYuv()*

public int getYuv()

Get the YUV format 



    Returns: 

*android.support.v8.renderscript.Type.getZ()*

public int getZ()

Return the value of the Z dimension or 0 for a 1D or 2D allocation. 



    Returns: 

*android.support.v8.renderscript.Type.hasFaces()*

public boolean hasFaces()

Return if the Type is a cube map. 



    Returns: 

*android.support.v8.renderscript.Type.hasMipmaps()*

public boolean hasMipmaps()

Return if the Type has a mipmap chain. 



    Returns: 


