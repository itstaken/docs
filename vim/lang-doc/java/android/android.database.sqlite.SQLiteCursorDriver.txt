*android.database.sqlite.SQLiteCursorDriver* *SQLiteCursorDriver* A driver for S

public interface interface SQLiteCursorDriver


|android.database.sqlite.SQLiteCursorDriver_Description|
|android.database.sqlite.SQLiteCursorDriver_Fields|
|android.database.sqlite.SQLiteCursorDriver_Constructors|
|android.database.sqlite.SQLiteCursorDriver_Methods|

================================================================================

*android.database.sqlite.SQLiteCursorDriver_Methods*
|android.database.sqlite.SQLiteCursorDriver.cursorClosed()|Called by a SQLiteCu
|android.database.sqlite.SQLiteCursorDriver.cursorDeactivated()|Called by a SQL
|android.database.sqlite.SQLiteCursorDriver.cursorRequeried(Cursor)|Called by a
|android.database.sqlite.SQLiteCursorDriver.query(SQLiteDatabase.CursorFactory,String[])|
|android.database.sqlite.SQLiteCursorDriver.setBindArguments(String[])|Set new 

*android.database.sqlite.SQLiteCursorDriver_Description*

A driver for SQLiteCursors that is used to create them and gets notified by the 
cursors it creates on significant events in their lifetimes. 



*android.database.sqlite.SQLiteCursorDriver.cursorClosed()*

public void cursorClosed()

Called by a SQLiteCursor when it it closed to destroy this object as well. 



*android.database.sqlite.SQLiteCursorDriver.cursorDeactivated()*

public void cursorDeactivated()

Called by a SQLiteCursor when it is released. 



*android.database.sqlite.SQLiteCursorDriver.cursorRequeried(Cursor)*

public void cursorRequeried(android.database.Cursor cursor)

Called by a SQLiteCursor when it is requeried. 



*android.database.sqlite.SQLiteCursorDriver.query(SQLiteDatabase.CursorFactory,String[])*

public |android.database.Cursor| query(
  android.database.sqlite.SQLiteDatabase.CursorFactory factory,
  java.lang.String[] bindArgs)

Executes the query returning a Cursor over the result set. 


    factory - The CursorFactory to use when creating the Cursors, or null if standard 
       SQLiteCursors should be returned. 

    Returns: a Cursor over the result set 

*android.database.sqlite.SQLiteCursorDriver.setBindArguments(String[])*

public void setBindArguments(java.lang.String[] bindArgs)

Set new bind arguments. These will take effect in cursorRequeried(). 


    bindArgs - the new arguments 


