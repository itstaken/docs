*android.database.MergeCursor* *MergeCursor* A convience class that lets you pre

public class MergeCursor
  extends    |android.database.AbstractCursor|

|android.database.MergeCursor_Description|
|android.database.MergeCursor_Fields|
|android.database.MergeCursor_Constructors|
|android.database.MergeCursor_Methods|

================================================================================

*android.database.MergeCursor_Constructors*
|android.database.MergeCursor(Cursor[])|

*android.database.MergeCursor_Methods*
|android.database.MergeCursor.close()|
|android.database.MergeCursor.deactivate()|
|android.database.MergeCursor.getBlob(int)|
|android.database.MergeCursor.getColumnNames()|
|android.database.MergeCursor.getCount()|
|android.database.MergeCursor.getDouble(int)|
|android.database.MergeCursor.getFloat(int)|
|android.database.MergeCursor.getInt(int)|
|android.database.MergeCursor.getLong(int)|
|android.database.MergeCursor.getShort(int)|
|android.database.MergeCursor.getString(int)|
|android.database.MergeCursor.getType(int)|
|android.database.MergeCursor.isNull(int)|
|android.database.MergeCursor.onMove(int,int)|
|android.database.MergeCursor.registerContentObserver(ContentObserver)|
|android.database.MergeCursor.registerDataSetObserver(DataSetObserver)|
|android.database.MergeCursor.requery()|
|android.database.MergeCursor.unregisterContentObserver(ContentObserver)|
|android.database.MergeCursor.unregisterDataSetObserver(DataSetObserver)|

*android.database.MergeCursor_Description*

A convience class that lets you present an array of Cursors as a single linear 
Cursor. The schema of the cursors presented is entirely up to the creator of 
the MergeCursor, and may be different if that is desired. Calls to getColumns, 
getColumnIndex, etc will return the value for the row that the MergeCursor is 
currently pointing at. 



*android.database.MergeCursor(Cursor[])*

public MergeCursor(android.database.Cursor[] cursors)




*android.database.MergeCursor.close()*

public void close()





*android.database.MergeCursor.deactivate()*

public void deactivate()





*android.database.MergeCursor.getBlob(int)*

public byte[] getBlob(int column)





*android.database.MergeCursor.getColumnNames()*

public |java.lang.String|[] getColumnNames()





*android.database.MergeCursor.getCount()*

public int getCount()





*android.database.MergeCursor.getDouble(int)*

public double getDouble(int column)





*android.database.MergeCursor.getFloat(int)*

public float getFloat(int column)





*android.database.MergeCursor.getInt(int)*

public int getInt(int column)





*android.database.MergeCursor.getLong(int)*

public long getLong(int column)





*android.database.MergeCursor.getShort(int)*

public short getShort(int column)





*android.database.MergeCursor.getString(int)*

public |java.lang.String| getString(int column)





*android.database.MergeCursor.getType(int)*

public int getType(int column)





*android.database.MergeCursor.isNull(int)*

public boolean isNull(int column)





*android.database.MergeCursor.onMove(int,int)*

public boolean onMove(
  int oldPosition,
  int newPosition)





*android.database.MergeCursor.registerContentObserver(ContentObserver)*

public void registerContentObserver(android.database.ContentObserver observer)





*android.database.MergeCursor.registerDataSetObserver(DataSetObserver)*

public void registerDataSetObserver(android.database.DataSetObserver observer)





*android.database.MergeCursor.requery()*

public boolean requery()





*android.database.MergeCursor.unregisterContentObserver(ContentObserver)*

public void unregisterContentObserver(android.database.ContentObserver observer)





*android.database.MergeCursor.unregisterDataSetObserver(DataSetObserver)*

public void unregisterDataSetObserver(android.database.DataSetObserver observer)






