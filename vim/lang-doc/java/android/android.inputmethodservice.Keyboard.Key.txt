*android.inputmethodservice.Keyboard.Key* *Keyboard.Key* Class for describing th

public static class Keyboard.Key
  extends    |java.lang.Object|

|android.inputmethodservice.Keyboard.Key_Description|
|android.inputmethodservice.Keyboard.Key_Fields|
|android.inputmethodservice.Keyboard.Key_Constructors|
|android.inputmethodservice.Keyboard.Key_Methods|

================================================================================

*android.inputmethodservice.Keyboard.Key_Fields*
|int[]_android.inputmethodservice.Keyboard.Key.codes|
|int_android.inputmethodservice.Keyboard.Key.edgeFlags|
|int_android.inputmethodservice.Keyboard.Key.gap|
|int_android.inputmethodservice.Keyboard.Key.height|
|Drawable_android.inputmethodservice.Keyboard.Key.icon|
|Drawable_android.inputmethodservice.Keyboard.Key.iconPreview|
|java.lang.CharSequence_android.inputmethodservice.Keyboard.Key.label|
|boolean_android.inputmethodservice.Keyboard.Key.modifier|
|boolean_android.inputmethodservice.Keyboard.Key.on|
|java.lang.CharSequence_android.inputmethodservice.Keyboard.Key.popupCharacters|
|int_android.inputmethodservice.Keyboard.Key.popupResId|
|boolean_android.inputmethodservice.Keyboard.Key.pressed|
|boolean_android.inputmethodservice.Keyboard.Key.repeatable|
|boolean_android.inputmethodservice.Keyboard.Key.sticky|
|java.lang.CharSequence_android.inputmethodservice.Keyboard.Key.text|
|int_android.inputmethodservice.Keyboard.Key.width|
|int_android.inputmethodservice.Keyboard.Key.x|
|int_android.inputmethodservice.Keyboard.Key.y|

*android.inputmethodservice.Keyboard.Key_Constructors*
|android.inputmethodservice.Keyboard.Key(Keyboard.Row)|Create an empty key with
|android.inputmethodservice.Keyboard.Key(Resources,Keyboard.Row,int,int,XmlResourceParser)|

*android.inputmethodservice.Keyboard.Key_Methods*
|android.inputmethodservice.Keyboard.Key.getCurrentDrawableState()|Returns the 
|android.inputmethodservice.Keyboard.Key.isInside(int,int)|Detects if a point f
|android.inputmethodservice.Keyboard.Key.onPressed()|Informs the key that it ha
|android.inputmethodservice.Keyboard.Key.onReleased(boolean)|Changes the presse
|android.inputmethodservice.Keyboard.Key.squaredDistanceFrom(int,int)|Returns t

*android.inputmethodservice.Keyboard.Key_Description*

Class for describing the position and characteristics of a single key in the 
keyboard. 



*int[]_android.inputmethodservice.Keyboard.Key.codes*

All the key codes (unicode or custom code) that this key could generate, 
zero'th being the most important. 


*int_android.inputmethodservice.Keyboard.Key.edgeFlags*

Flags that specify the anchoring to edges of the keyboard for detecting touch 
events that are just out of the boundary of the key. This is a bit mask of 
(|android.inputmethodservice.Keyboard|) , 
(|android.inputmethodservice.Keyboard|) , 
(|android.inputmethodservice.Keyboard|) and 
(|android.inputmethodservice.Keyboard|) . 


*int_android.inputmethodservice.Keyboard.Key.gap*

The horizontal gap before this key 


*int_android.inputmethodservice.Keyboard.Key.height*

Height of the key, not including the gap 


*Drawable_android.inputmethodservice.Keyboard.Key.icon*

Icon to display instead of a label. Icon takes precedence over a label 


*Drawable_android.inputmethodservice.Keyboard.Key.iconPreview*

Preview version of the icon, for the preview popup 


*java.lang.CharSequence_android.inputmethodservice.Keyboard.Key.label*

Label to display 


*boolean_android.inputmethodservice.Keyboard.Key.modifier*

Whether this is a modifier key, such as Shift or Alt 


*boolean_android.inputmethodservice.Keyboard.Key.on*

If this is a sticky key, is it on? 


*java.lang.CharSequence_android.inputmethodservice.Keyboard.Key.popupCharacters*

Popup characters 


*int_android.inputmethodservice.Keyboard.Key.popupResId*

If this key pops up a mini keyboard, this is the resource id for the XML layout 
for that keyboard. 


*boolean_android.inputmethodservice.Keyboard.Key.pressed*

The current pressed state of this key 


*boolean_android.inputmethodservice.Keyboard.Key.repeatable*

Whether this key repeats itself when held down 


*boolean_android.inputmethodservice.Keyboard.Key.sticky*

Whether this key is sticky, i.e., a toggle key 


*java.lang.CharSequence_android.inputmethodservice.Keyboard.Key.text*

Text to output when pressed. This can be multiple characters, like ".com" 


*int_android.inputmethodservice.Keyboard.Key.width*

Width of the key, not including the gap 


*int_android.inputmethodservice.Keyboard.Key.x*

X coordinate of the key in the keyboard layout 


*int_android.inputmethodservice.Keyboard.Key.y*

Y coordinate of the key in the keyboard layout 



*android.inputmethodservice.Keyboard.Key(Keyboard.Row)*

public Keyboard.Key(android.inputmethodservice.Keyboard.Row parent)

Create an empty key with no attributes. 


*android.inputmethodservice.Keyboard.Key(Resources,Keyboard.Row,int,int,XmlResourceParser)*

public Keyboard.Key(
  android.content.res.Resources res,
  android.inputmethodservice.Keyboard.Row parent,
  int x,
  int y,
  android.content.res.XmlResourceParser parser)

Create a key with the given top-left coordinate and extract its attributes from 
the XML parser. 

    res - resources associated with the caller's context 
    parent - the row that this key belongs to. The row must already be attached to a {@link 
       Keyboard}. 
    x - the x coordinate of the top-left 
    y - the y coordinate of the top-left 
    parser - the XML parser containing the attributes for this key 

*android.inputmethodservice.Keyboard.Key.getCurrentDrawableState()*

public int[] getCurrentDrawableState()

Returns the drawable state for the key, based on the current state and type of 
the key. 



    Returns: the drawable state of the key. 

*android.inputmethodservice.Keyboard.Key.isInside(int,int)*

public boolean isInside(
  int x,
  int y)

Detects if a point falls inside this key. 


    x - the x-coordinate of the point 
    y - the y-coordinate of the point 

    Returns: whether or not the point falls inside the key. If the key is attached to an 
             edge, it will assume that all points between the key and the edge 
             are considered to be inside the key. 

*android.inputmethodservice.Keyboard.Key.onPressed()*

public void onPressed()

Informs the key that it has been pressed, in case it needs to change its 
appearance or state. 



*android.inputmethodservice.Keyboard.Key.onReleased(boolean)*

public void onReleased(boolean inside)

Changes the pressed state of the key. If it is a sticky key, it will also 
change the toggled state of the key if the finger was release inside. 


    inside - whether the finger was released inside the key 

*android.inputmethodservice.Keyboard.Key.squaredDistanceFrom(int,int)*

public int squaredDistanceFrom(
  int x,
  int y)

Returns the square of the distance between the center of the key and the given 
point. 


    x - the x-coordinate of the point 
    y - the y-coordinate of the point 

    Returns: the square of the distance of the point from the center of the key 


