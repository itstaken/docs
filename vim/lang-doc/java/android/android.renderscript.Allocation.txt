*android.renderscript.Allocation* *Allocation* 

public class Allocation
  extends    |android.renderscript.BaseObj|

|android.renderscript.Allocation_Description|
|android.renderscript.Allocation_Fields|
|android.renderscript.Allocation_Constructors|
|android.renderscript.Allocation_Methods|

================================================================================

*android.renderscript.Allocation_Fields*
|int_android.renderscript.Allocation.USAGE_GRAPHICS_CONSTANTS|
|int_android.renderscript.Allocation.USAGE_GRAPHICS_RENDER_TARGET|
|int_android.renderscript.Allocation.USAGE_GRAPHICS_TEXTURE|
|int_android.renderscript.Allocation.USAGE_GRAPHICS_VERTEX|
|int_android.renderscript.Allocation.USAGE_IO_INPUT|
|int_android.renderscript.Allocation.USAGE_IO_OUTPUT|
|int_android.renderscript.Allocation.USAGE_SCRIPT|
|int_android.renderscript.Allocation.USAGE_SHARED|

*android.renderscript.Allocation_Methods*
|android.renderscript.Allocation.copy1DRangeFrom(int,int,Allocation,int)|
|android.renderscript.Allocation.copy1DRangeFrom(int,int,byte[])|
|android.renderscript.Allocation.copy1DRangeFrom(int,int,float[])|
|android.renderscript.Allocation.copy1DRangeFrom(int,int,int[])|
|android.renderscript.Allocation.copy1DRangeFrom(int,int,short[])|
|android.renderscript.Allocation.copy1DRangeFromUnchecked(int,int,byte[])|
|android.renderscript.Allocation.copy1DRangeFromUnchecked(int,int,float[])|
|android.renderscript.Allocation.copy1DRangeFromUnchecked(int,int,int[])|
|android.renderscript.Allocation.copy1DRangeFromUnchecked(int,int,short[])|
|android.renderscript.Allocation.copy2DRangeFrom(int,int,Bitmap)|
|android.renderscript.Allocation.copy2DRangeFrom(int,int,int,int,Allocation,int,int)|
|android.renderscript.Allocation.copy2DRangeFrom(int,int,int,int,byte[])|
|android.renderscript.Allocation.copy2DRangeFrom(int,int,int,int,float[])|
|android.renderscript.Allocation.copy2DRangeFrom(int,int,int,int,int[])|
|android.renderscript.Allocation.copy2DRangeFrom(int,int,int,int,short[])|
|android.renderscript.Allocation.copyFrom(Allocation)|
|android.renderscript.Allocation.copyFrom(BaseObj[])|
|android.renderscript.Allocation.copyFrom(Bitmap)|
|android.renderscript.Allocation.copyFrom(byte[])|
|android.renderscript.Allocation.copyFrom(float[])|
|android.renderscript.Allocation.copyFrom(int[])|
|android.renderscript.Allocation.copyFrom(short[])|
|android.renderscript.Allocation.copyFromUnchecked(byte[])|
|android.renderscript.Allocation.copyFromUnchecked(float[])|
|android.renderscript.Allocation.copyFromUnchecked(int[])|
|android.renderscript.Allocation.copyFromUnchecked(short[])|
|android.renderscript.Allocation.copyTo(Bitmap)|
|android.renderscript.Allocation.copyTo(byte[])|
|android.renderscript.Allocation.copyTo(float[])|
|android.renderscript.Allocation.copyTo(int[])|
|android.renderscript.Allocation.copyTo(short[])|
|android.renderscript.Allocation.createCubemapFromBitmap(RenderScript,Bitmap)|
|android.renderscript.Allocation.createCubemapFromBitmap(RenderScript,Bitmap,Allocation.MipmapControl,int)|
|android.renderscript.Allocation.createCubemapFromCubeFaces(RenderScript,Bitmap,Bitmap,Bitmap,Bitmap,Bitmap,Bitmap)|
|android.renderscript.Allocation.createCubemapFromCubeFaces(RenderScript,Bitmap,Bitmap,Bitmap,Bitmap,Bitmap,Bitmap,Allocation.MipmapControl,int)|
|android.renderscript.Allocation.createFromBitmap(RenderScript,Bitmap)|
|android.renderscript.Allocation.createFromBitmap(RenderScript,Bitmap,Allocation.MipmapControl,int)|
|android.renderscript.Allocation.createFromBitmapResource(RenderScript,Resources,int)|
|android.renderscript.Allocation.createFromBitmapResource(RenderScript,Resources,int,Allocation.MipmapControl,int)|
|android.renderscript.Allocation.createFromString(RenderScript,String,int)|
|android.renderscript.Allocation.createSized(RenderScript,Element,int)|
|android.renderscript.Allocation.createSized(RenderScript,Element,int,int)|
|android.renderscript.Allocation.createTyped(RenderScript,Type)|
|android.renderscript.Allocation.createTyped(RenderScript,Type,Allocation.MipmapControl,int)|
|android.renderscript.Allocation.createTyped(RenderScript,Type,int)|
|android.renderscript.Allocation.finalize()|
|android.renderscript.Allocation.generateMipmaps()|
|android.renderscript.Allocation.getBytesSize()|
|android.renderscript.Allocation.getElement()|
|android.renderscript.Allocation.getSurface()|
|android.renderscript.Allocation.getType()|
|android.renderscript.Allocation.getUsage()|
|android.renderscript.Allocation.ioReceive()|
|android.renderscript.Allocation.ioSend()|
|android.renderscript.Allocation.resize(int)|
|android.renderscript.Allocation.setFromFieldPacker(int,FieldPacker)|
|android.renderscript.Allocation.setFromFieldPacker(int,int,FieldPacker)|
|android.renderscript.Allocation.setOnBufferAvailableListener(Allocation.OnBufferAvailableListener)|
|android.renderscript.Allocation.setSurface(Surface)|
|android.renderscript.Allocation.syncAll(int)|

*android.renderscript.Allocation_Description*





*int_android.renderscript.Allocation.USAGE_GRAPHICS_CONSTANTS*




*int_android.renderscript.Allocation.USAGE_GRAPHICS_RENDER_TARGET*




*int_android.renderscript.Allocation.USAGE_GRAPHICS_TEXTURE*




*int_android.renderscript.Allocation.USAGE_GRAPHICS_VERTEX*




*int_android.renderscript.Allocation.USAGE_IO_INPUT*




*int_android.renderscript.Allocation.USAGE_IO_OUTPUT*




*int_android.renderscript.Allocation.USAGE_SCRIPT*




*int_android.renderscript.Allocation.USAGE_SHARED*





*android.renderscript.Allocation.copy1DRangeFrom(int,int,Allocation,int)*

public void copy1DRangeFrom(
  int off,
  int count,
  android.renderscript.Allocation data,
  int dataOff)





*android.renderscript.Allocation.copy1DRangeFrom(int,int,byte[])*

public void copy1DRangeFrom(
  int off,
  int count,
  byte[] d)





*android.renderscript.Allocation.copy1DRangeFrom(int,int,float[])*

public void copy1DRangeFrom(
  int off,
  int count,
  float[] d)





*android.renderscript.Allocation.copy1DRangeFrom(int,int,int[])*

public void copy1DRangeFrom(
  int off,
  int count,
  int[] d)





*android.renderscript.Allocation.copy1DRangeFrom(int,int,short[])*

public void copy1DRangeFrom(
  int off,
  int count,
  short[] d)





*android.renderscript.Allocation.copy1DRangeFromUnchecked(int,int,byte[])*

public void copy1DRangeFromUnchecked(
  int off,
  int count,
  byte[] d)





*android.renderscript.Allocation.copy1DRangeFromUnchecked(int,int,float[])*

public void copy1DRangeFromUnchecked(
  int off,
  int count,
  float[] d)





*android.renderscript.Allocation.copy1DRangeFromUnchecked(int,int,int[])*

public void copy1DRangeFromUnchecked(
  int off,
  int count,
  int[] d)





*android.renderscript.Allocation.copy1DRangeFromUnchecked(int,int,short[])*

public void copy1DRangeFromUnchecked(
  int off,
  int count,
  short[] d)





*android.renderscript.Allocation.copy2DRangeFrom(int,int,Bitmap)*

public void copy2DRangeFrom(
  int xoff,
  int yoff,
  android.graphics.Bitmap data)





*android.renderscript.Allocation.copy2DRangeFrom(int,int,int,int,Allocation,int,int)*

public void copy2DRangeFrom(
  int xoff,
  int yoff,
  int w,
  int h,
  android.renderscript.Allocation data,
  int dataXoff,
  int dataYoff)





*android.renderscript.Allocation.copy2DRangeFrom(int,int,int,int,byte[])*

public void copy2DRangeFrom(
  int xoff,
  int yoff,
  int w,
  int h,
  byte[] data)





*android.renderscript.Allocation.copy2DRangeFrom(int,int,int,int,float[])*

public void copy2DRangeFrom(
  int xoff,
  int yoff,
  int w,
  int h,
  float[] data)





*android.renderscript.Allocation.copy2DRangeFrom(int,int,int,int,int[])*

public void copy2DRangeFrom(
  int xoff,
  int yoff,
  int w,
  int h,
  int[] data)





*android.renderscript.Allocation.copy2DRangeFrom(int,int,int,int,short[])*

public void copy2DRangeFrom(
  int xoff,
  int yoff,
  int w,
  int h,
  short[] data)





*android.renderscript.Allocation.copyFrom(Allocation)*

public void copyFrom(android.renderscript.Allocation a)





*android.renderscript.Allocation.copyFrom(BaseObj[])*

public void copyFrom(android.renderscript.BaseObj[] d)





*android.renderscript.Allocation.copyFrom(Bitmap)*

public void copyFrom(android.graphics.Bitmap b)





*android.renderscript.Allocation.copyFrom(byte[])*

public void copyFrom(byte[] d)





*android.renderscript.Allocation.copyFrom(float[])*

public void copyFrom(float[] d)





*android.renderscript.Allocation.copyFrom(int[])*

public void copyFrom(int[] d)





*android.renderscript.Allocation.copyFrom(short[])*

public void copyFrom(short[] d)





*android.renderscript.Allocation.copyFromUnchecked(byte[])*

public void copyFromUnchecked(byte[] d)





*android.renderscript.Allocation.copyFromUnchecked(float[])*

public void copyFromUnchecked(float[] d)





*android.renderscript.Allocation.copyFromUnchecked(int[])*

public void copyFromUnchecked(int[] d)





*android.renderscript.Allocation.copyFromUnchecked(short[])*

public void copyFromUnchecked(short[] d)





*android.renderscript.Allocation.copyTo(Bitmap)*

public void copyTo(android.graphics.Bitmap b)





*android.renderscript.Allocation.copyTo(byte[])*

public void copyTo(byte[] d)





*android.renderscript.Allocation.copyTo(float[])*

public void copyTo(float[] d)





*android.renderscript.Allocation.copyTo(int[])*

public void copyTo(int[] d)





*android.renderscript.Allocation.copyTo(short[])*

public void copyTo(short[] d)





*android.renderscript.Allocation.createCubemapFromBitmap(RenderScript,Bitmap)*

public static |android.renderscript.Allocation| createCubemapFromBitmap(
  android.renderscript.RenderScript rs,
  android.graphics.Bitmap b)





*android.renderscript.Allocation.createCubemapFromBitmap(RenderScript,Bitmap,Allocation.MipmapControl,int)*

public static |android.renderscript.Allocation| createCubemapFromBitmap(
  android.renderscript.RenderScript rs,
  android.graphics.Bitmap b,
  android.renderscript.Allocation.MipmapControl mips,
  int usage)





*android.renderscript.Allocation.createCubemapFromCubeFaces(RenderScript,Bitmap,Bitmap,Bitmap,Bitmap,Bitmap,Bitmap)*

public static |android.renderscript.Allocation| createCubemapFromCubeFaces(
  android.renderscript.RenderScript rs,
  android.graphics.Bitmap xpos,
  android.graphics.Bitmap xneg,
  android.graphics.Bitmap ypos,
  android.graphics.Bitmap yneg,
  android.graphics.Bitmap zpos,
  android.graphics.Bitmap zneg)





*android.renderscript.Allocation.createCubemapFromCubeFaces(RenderScript,Bitmap,Bitmap,Bitmap,Bitmap,Bitmap,Bitmap,Allocation.MipmapControl,int)*

public static |android.renderscript.Allocation| createCubemapFromCubeFaces(
  android.renderscript.RenderScript rs,
  android.graphics.Bitmap xpos,
  android.graphics.Bitmap xneg,
  android.graphics.Bitmap ypos,
  android.graphics.Bitmap yneg,
  android.graphics.Bitmap zpos,
  android.graphics.Bitmap zneg,
  android.renderscript.Allocation.MipmapControl mips,
  int usage)





*android.renderscript.Allocation.createFromBitmap(RenderScript,Bitmap)*

public static |android.renderscript.Allocation| createFromBitmap(
  android.renderscript.RenderScript rs,
  android.graphics.Bitmap b)





*android.renderscript.Allocation.createFromBitmap(RenderScript,Bitmap,Allocation.MipmapControl,int)*

public static |android.renderscript.Allocation| createFromBitmap(
  android.renderscript.RenderScript rs,
  android.graphics.Bitmap b,
  android.renderscript.Allocation.MipmapControl mips,
  int usage)





*android.renderscript.Allocation.createFromBitmapResource(RenderScript,Resources,int)*

public static |android.renderscript.Allocation| createFromBitmapResource(
  android.renderscript.RenderScript rs,
  android.content.res.Resources res,
  int id)





*android.renderscript.Allocation.createFromBitmapResource(RenderScript,Resources,int,Allocation.MipmapControl,int)*

public static |android.renderscript.Allocation| createFromBitmapResource(
  android.renderscript.RenderScript rs,
  android.content.res.Resources res,
  int id,
  android.renderscript.Allocation.MipmapControl mips,
  int usage)





*android.renderscript.Allocation.createFromString(RenderScript,String,int)*

public static |android.renderscript.Allocation| createFromString(
  android.renderscript.RenderScript rs,
  java.lang.String str,
  int usage)





*android.renderscript.Allocation.createSized(RenderScript,Element,int)*

public static |android.renderscript.Allocation| createSized(
  android.renderscript.RenderScript rs,
  android.renderscript.Element e,
  int count)





*android.renderscript.Allocation.createSized(RenderScript,Element,int,int)*

public static |android.renderscript.Allocation| createSized(
  android.renderscript.RenderScript rs,
  android.renderscript.Element e,
  int count,
  int usage)





*android.renderscript.Allocation.createTyped(RenderScript,Type)*

public static |android.renderscript.Allocation| createTyped(
  android.renderscript.RenderScript rs,
  android.renderscript.Type type)





*android.renderscript.Allocation.createTyped(RenderScript,Type,Allocation.MipmapControl,int)*

public static |android.renderscript.Allocation| createTyped(
  android.renderscript.RenderScript rs,
  android.renderscript.Type type,
  android.renderscript.Allocation.MipmapControl mips,
  int usage)





*android.renderscript.Allocation.createTyped(RenderScript,Type,int)*

public static |android.renderscript.Allocation| createTyped(
  android.renderscript.RenderScript rs,
  android.renderscript.Type type,
  int usage)





*android.renderscript.Allocation.finalize()*

protected void finalize()
  throws |java.lang.Throwable|
         




*android.renderscript.Allocation.generateMipmaps()*

public void generateMipmaps()





*android.renderscript.Allocation.getBytesSize()*

public int getBytesSize()





*android.renderscript.Allocation.getElement()*

public |android.renderscript.Element| getElement()





*android.renderscript.Allocation.getSurface()*

public |android.view.Surface| getSurface()





*android.renderscript.Allocation.getType()*

public |android.renderscript.Type| getType()





*android.renderscript.Allocation.getUsage()*

public int getUsage()





*android.renderscript.Allocation.ioReceive()*

public void ioReceive()





*android.renderscript.Allocation.ioSend()*

public void ioSend()





*android.renderscript.Allocation.resize(int)*

public synchronized void resize(int dimX)





*android.renderscript.Allocation.setFromFieldPacker(int,FieldPacker)*

public void setFromFieldPacker(
  int xoff,
  android.renderscript.FieldPacker fp)





*android.renderscript.Allocation.setFromFieldPacker(int,int,FieldPacker)*

public void setFromFieldPacker(
  int xoff,
  int component_number,
  android.renderscript.FieldPacker fp)





*android.renderscript.Allocation.setOnBufferAvailableListener(Allocation.OnBufferAvailableListener)*

public void setOnBufferAvailableListener(android.renderscript.Allocation.OnBufferAvailableListener callback)





*android.renderscript.Allocation.setSurface(Surface)*

public void setSurface(android.view.Surface sur)





*android.renderscript.Allocation.syncAll(int)*

public void syncAll(int srcLocation)






