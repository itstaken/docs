*android.app.ActivityManager.RunningServiceInfo* *ActivityManager.RunningServiceInfo* 

public static class ActivityManager.RunningServiceInfo
  extends    |java.lang.Object|
  implements |android.os.Parcelable|

|android.app.ActivityManager.RunningServiceInfo_Description|
|android.app.ActivityManager.RunningServiceInfo_Fields|
|android.app.ActivityManager.RunningServiceInfo_Constructors|
|android.app.ActivityManager.RunningServiceInfo_Methods|

================================================================================

*android.app.ActivityManager.RunningServiceInfo_Fields*
|long_android.app.ActivityManager.RunningServiceInfo.activeSince|
|int_android.app.ActivityManager.RunningServiceInfo.clientCount|
|int_android.app.ActivityManager.RunningServiceInfo.clientLabel|
|java.lang.String_android.app.ActivityManager.RunningServiceInfo.clientPackage|
|int_android.app.ActivityManager.RunningServiceInfo.crashCount|
|android.os.Parcelable.Creator<android.app.ActivityManager.RunningServiceInfo>_android.app.ActivityManager.RunningServiceInfo.CREATOR|
|int_android.app.ActivityManager.RunningServiceInfo.FLAG_FOREGROUND|
|int_android.app.ActivityManager.RunningServiceInfo.FLAG_PERSISTENT_PROCESS|
|int_android.app.ActivityManager.RunningServiceInfo.FLAG_STARTED|
|int_android.app.ActivityManager.RunningServiceInfo.FLAG_SYSTEM_PROCESS|
|int_android.app.ActivityManager.RunningServiceInfo.flags|
|boolean_android.app.ActivityManager.RunningServiceInfo.foreground|
|long_android.app.ActivityManager.RunningServiceInfo.lastActivityTime|
|int_android.app.ActivityManager.RunningServiceInfo.pid|
|java.lang.String_android.app.ActivityManager.RunningServiceInfo.process|
|long_android.app.ActivityManager.RunningServiceInfo.restarting|
|android.content.ComponentName_android.app.ActivityManager.RunningServiceInfo.service|
|boolean_android.app.ActivityManager.RunningServiceInfo.started|
|int_android.app.ActivityManager.RunningServiceInfo.uid|

*android.app.ActivityManager.RunningServiceInfo_Constructors*
|android.app.ActivityManager.RunningServiceInfo()|

*android.app.ActivityManager.RunningServiceInfo_Methods*
|android.app.ActivityManager.RunningServiceInfo.describeContents()|
|android.app.ActivityManager.RunningServiceInfo.readFromParcel(Parcel)|
|android.app.ActivityManager.RunningServiceInfo.writeToParcel(Parcel,int)|

*android.app.ActivityManager.RunningServiceInfo_Description*

Information you can retrieve about a particular Service that is currently 
running in the system. 



*long_android.app.ActivityManager.RunningServiceInfo.activeSince*

The time when the service was first made active, either by someone starting or 
binding to it. This is in units of (|android.os.SystemClock|) . 


*int_android.app.ActivityManager.RunningServiceInfo.clientCount*

Number of clients connected to the service. 


*int_android.app.ActivityManager.RunningServiceInfo.clientLabel*

For special services that are bound to by system code, this is a string 
resource providing a user-visible label for who the client is. 


*java.lang.String_android.app.ActivityManager.RunningServiceInfo.clientPackage*

For special services that are bound to by system code, this is the package that 
holds the binding. 


*int_android.app.ActivityManager.RunningServiceInfo.crashCount*

Number of times the service's process has crashed while the service is running. 


*android.os.Parcelable.Creator<android.app.ActivityManager.RunningServiceInfo>_android.app.ActivityManager.RunningServiceInfo.CREATOR*




*int_android.app.ActivityManager.RunningServiceInfo.FLAG_FOREGROUND*

Bit for (|android.app.ActivityManager.RunningServiceInfo|) : set if the service 
has asked to run as a foreground process. 


*int_android.app.ActivityManager.RunningServiceInfo.FLAG_PERSISTENT_PROCESS*

Bit for {@link #flags): set if the service is running in a persistent process. 


*int_android.app.ActivityManager.RunningServiceInfo.FLAG_STARTED*

Bit for (|android.app.ActivityManager.RunningServiceInfo|) : set if this 
service has been explicitly started. 


*int_android.app.ActivityManager.RunningServiceInfo.FLAG_SYSTEM_PROCESS*

Bit for {@link #flags): set if the service is running in a core system process. 


*int_android.app.ActivityManager.RunningServiceInfo.flags*

Running flags. 


*boolean_android.app.ActivityManager.RunningServiceInfo.foreground*

Set to true if the service has asked to run as a foreground process. 


*long_android.app.ActivityManager.RunningServiceInfo.lastActivityTime*

The time when there was last activity in the service (either explicit requests 
to start it or clients binding to it). This is in units of 
(|android.os.SystemClock|) . 


*int_android.app.ActivityManager.RunningServiceInfo.pid*

If non-zero, this is the process the service is running in. 


*java.lang.String_android.app.ActivityManager.RunningServiceInfo.process*

The name of the process this service runs in. 


*long_android.app.ActivityManager.RunningServiceInfo.restarting*

If non-zero, this service is not currently running, but scheduled to restart at 
the given time. 


*android.content.ComponentName_android.app.ActivityManager.RunningServiceInfo.service*

The service component. 


*boolean_android.app.ActivityManager.RunningServiceInfo.started*

Set to true if this service has been explicitly started. 


*int_android.app.ActivityManager.RunningServiceInfo.uid*

The UID that owns this service. 



*android.app.ActivityManager.RunningServiceInfo()*

public ActivityManager.RunningServiceInfo()




*android.app.ActivityManager.RunningServiceInfo.describeContents()*

public int describeContents()





*android.app.ActivityManager.RunningServiceInfo.readFromParcel(Parcel)*

public void readFromParcel(android.os.Parcel source)





*android.app.ActivityManager.RunningServiceInfo.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel dest,
  int flags)






