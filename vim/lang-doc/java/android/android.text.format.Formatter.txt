*android.text.format.Formatter* *Formatter* Utility class to aid in formatting c

public final class Formatter
  extends    |java.lang.Object|

|android.text.format.Formatter_Description|
|android.text.format.Formatter_Fields|
|android.text.format.Formatter_Constructors|
|android.text.format.Formatter_Methods|

================================================================================

*android.text.format.Formatter_Constructors*
|android.text.format.Formatter()|

*android.text.format.Formatter_Methods*
|android.text.format.Formatter.formatFileSize(Context,long)|Formats a content s
|android.text.format.Formatter.formatIpAddress(int)|Returns a string in the can
|android.text.format.Formatter.formatShortFileSize(Context,long)|Like#formatFil

*android.text.format.Formatter_Description*

Utility class to aid in formatting common values that are not covered by the 
(|java.util.Formatter|) class in (|java.util|) 



*android.text.format.Formatter()*

public Formatter()




*android.text.format.Formatter.formatFileSize(Context,long)*

public static |java.lang.String| formatFileSize(
  android.content.Context context,
  long number)

Formats a content size to be in the form of bytes, kilobytes, megabytes, etc 


    context - Context to use to load the localized units 
    number - size value to be formatted 

    Returns: formatted string with the number 

*android.text.format.Formatter.formatIpAddress(int)*

public static |java.lang.String| formatIpAddress(int ipv4Address)

Returns a string in the canonical IPv4 format ###.###.###.### from a packed 
integer containing the IP address. The IPv4 address is expected to be in 
little-endian format (LSB first). That is, 0x01020304 will return "4.3.2.1". 

    Deprecated: Use {@link java.net.InetAddress#getHostAddress()}, which supports both IPv4 and
     IPv6 addresses. This method does not support IPv6 addresses.


*android.text.format.Formatter.formatShortFileSize(Context,long)*

public static |java.lang.String| formatShortFileSize(
  android.content.Context context,
  long number)

Like (|android.text.format.Formatter|) , but trying to generate shorter numbers 
(showing fewer digits of precision). 




