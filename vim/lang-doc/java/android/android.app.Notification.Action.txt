*android.app.Notification.Action* *Notification.Action* Structure to encapsulate

public static class Notification.Action
  extends    |java.lang.Object|
  implements |android.os.Parcelable|

|android.app.Notification.Action_Description|
|android.app.Notification.Action_Fields|
|android.app.Notification.Action_Constructors|
|android.app.Notification.Action_Methods|

================================================================================

*android.app.Notification.Action_Fields*
|android.app.PendingIntent_android.app.Notification.Action.actionIntent|
|android.os.Parcelable.Creator<android.app.Notification.Action>_android.app.Notification.Action.CREATOR|
|int_android.app.Notification.Action.icon|
|java.lang.CharSequence_android.app.Notification.Action.title|

*android.app.Notification.Action_Constructors*
|android.app.Notification.Action(int,CharSequence,PendingIntent)|UseBuilder#add

*android.app.Notification.Action_Methods*
|android.app.Notification.Action.clone()|
|android.app.Notification.Action.describeContents()|
|android.app.Notification.Action.writeToParcel(Parcel,int)|

*android.app.Notification.Action_Description*

Structure to encapsulate a named action that can be shown as part of this 
notification. It must include an icon, a label, and a 
(|android.app.PendingIntent|) to be fired when the action is selected by the 
user. 

Apps should use (|android.app.Notification.Builder|) to create and attach 
actions. 



*android.app.PendingIntent_android.app.Notification.Action.actionIntent*

Intent to send when the user invokes this action. May be null, in which case 
the action may be rendered in a disabled presentation by the system UI. 


*android.os.Parcelable.Creator<android.app.Notification.Action>_android.app.Notification.Action.CREATOR*




*int_android.app.Notification.Action.icon*

Small icon representing the action. 


*java.lang.CharSequence_android.app.Notification.Action.title*

Title of the action. 



*android.app.Notification.Action(int,CharSequence,PendingIntent)*

public Notification.Action(
  int icon,
  java.lang.CharSequence title,
  android.app.PendingIntent intent)

Use (|android.app.Notification.Builder|) . 


*android.app.Notification.Action.clone()*

public |android.app.Notification.Action| clone()





*android.app.Notification.Action.describeContents()*

public int describeContents()





*android.app.Notification.Action.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel out,
  int flags)






