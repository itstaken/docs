*android.support.v7.internal.view.menu.MenuView.ItemView* *MenuView.ItemView* Mi

public static interface interface MenuView.ItemView


|android.support.v7.internal.view.menu.MenuView.ItemView_Description|
|android.support.v7.internal.view.menu.MenuView.ItemView_Fields|
|android.support.v7.internal.view.menu.MenuView.ItemView_Constructors|
|android.support.v7.internal.view.menu.MenuView.ItemView_Methods|

================================================================================

*android.support.v7.internal.view.menu.MenuView.ItemView_Methods*
|android.support.v7.internal.view.menu.MenuView.ItemView.getItemData()|Gets the
|android.support.v7.internal.view.menu.MenuView.ItemView.initialize(MenuItemImpl,int)|
|android.support.v7.internal.view.menu.MenuView.ItemView.prefersCondensedTitle()|
|android.support.v7.internal.view.menu.MenuView.ItemView.setCheckable(boolean)|
|android.support.v7.internal.view.menu.MenuView.ItemView.setChecked(boolean)|Ch
|android.support.v7.internal.view.menu.MenuView.ItemView.setEnabled(boolean)|Se
|android.support.v7.internal.view.menu.MenuView.ItemView.setIcon(Drawable)|Set 
|android.support.v7.internal.view.menu.MenuView.ItemView.setShortcut(boolean,char)|
|android.support.v7.internal.view.menu.MenuView.ItemView.setTitle(CharSequence)|
|android.support.v7.internal.view.menu.MenuView.ItemView.showsIcon()|Whether th

*android.support.v7.internal.view.menu.MenuView.ItemView_Description*

Minimal interface for a menu item view. 
(|android.support.v7.internal.view.menu.MenuView.ItemView|) must be called for 
the item to be functional. 



*android.support.v7.internal.view.menu.MenuView.ItemView.getItemData()*

public |android.support.v7.internal.view.menu.MenuItemImpl| getItemData()

Gets the item data that this view is displaying. 



    Returns: the item data, or null if there is not one 

*android.support.v7.internal.view.menu.MenuView.ItemView.initialize(MenuItemImpl,int)*

public void initialize(
  android.support.v7.internal.view.menu.MenuItemImpl itemData,
  int menuType)

Initializes with the provided MenuItemData. This should be called after the 
view is inflated. 


    itemData - The item that this ItemView should display. 
    menuType - The type of this menu, one of TYPE_ICON, TYPE_EXPANDED or TYPE_DIALOG. 

*android.support.v7.internal.view.menu.MenuView.ItemView.prefersCondensedTitle()*

public boolean prefersCondensedTitle()

Whether this item view prefers displaying the condensed title rather than the 
normal title. If a condensed title is not available, the normal title will be 
used. 



    Returns: Whether this item view prefers displaying the condensed title. 

*android.support.v7.internal.view.menu.MenuView.ItemView.setCheckable(boolean)*

public void setCheckable(boolean checkable)

Displays the checkbox for the item view. This does not ensure the item view 
will be checked, for that use 
(|android.support.v7.internal.view.menu.MenuView.ItemView|) . 


    checkable - Whether to display the checkbox or to hide it 

*android.support.v7.internal.view.menu.MenuView.ItemView.setChecked(boolean)*

public void setChecked(boolean checked)

Checks the checkbox for the item view. If the checkbox is hidden, it will NOT 
be made visible, call 
(|android.support.v7.internal.view.menu.MenuView.ItemView|) for that. 


    checked - Whether the checkbox should be checked 

*android.support.v7.internal.view.menu.MenuView.ItemView.setEnabled(boolean)*

public void setEnabled(boolean enabled)

Sets the enabled state of the item view. 


    enabled - Whether the item view should be enabled. 

*android.support.v7.internal.view.menu.MenuView.ItemView.setIcon(Drawable)*

public void setIcon(Drawable icon)

Set the icon of this item view. 


    icon - The icon of this item. null to hide the icon. 

*android.support.v7.internal.view.menu.MenuView.ItemView.setShortcut(boolean,char)*

public void setShortcut(
  boolean showShortcut,
  char shortcutKey)

Sets the shortcut for the item. 


    showShortcut - Whether a shortcut should be shown(if false, the value of shortcutKey should be 
       ignored). 
    shortcutKey - The shortcut key that should be shown on the ItemView. 

*android.support.v7.internal.view.menu.MenuView.ItemView.setTitle(CharSequence)*

public void setTitle(java.lang.CharSequence title)

Sets the title of the item view. 


    title - The title to set. 

*android.support.v7.internal.view.menu.MenuView.ItemView.showsIcon()*

public boolean showsIcon()

Whether this item view shows an icon. 



    Returns: Whether this item view shows an icon. 


