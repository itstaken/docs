*android.transition.Scene* *Scene* A scene represents the collection of values t

public final class Scene
  extends    |java.lang.Object|

|android.transition.Scene_Description|
|android.transition.Scene_Fields|
|android.transition.Scene_Constructors|
|android.transition.Scene_Methods|

================================================================================

*android.transition.Scene_Constructors*
|android.transition.Scene(ViewGroup)|Constructs a Scene with no information abo
|android.transition.Scene(ViewGroup,ViewGroup)|Constructs a Scene which, when e

*android.transition.Scene_Methods*
|android.transition.Scene.enter()|Enters this scene, which entails changing all
|android.transition.Scene.exit()|Exits this scene, if it is the current scene  
|android.transition.Scene.getSceneForLayout(ViewGroup,int,Context)|Returns a Sc
|android.transition.Scene.getSceneRoot()|Gets the root of the scene, which is t
|android.transition.Scene.setEnterAction(Runnable)|Scenes that are not defined 
|android.transition.Scene.setExitAction(Runnable)|Scenes that are not defined w

*android.transition.Scene_Description*

A scene represents the collection of values that various properties in the View 
hierarchy will have when the scene is applied. A Scene can be configured to 
automatically run a Transition when it is applied, which will animate the 
various property changes that take place during the scene change. 



*android.transition.Scene(ViewGroup)*

public Scene(android.view.ViewGroup sceneRoot)

Constructs a Scene with no information about how values will change when this 
scene is applied. This constructor might be used when a Scene is created with 
the intention of being dynamically configured, through setting 
(|android.transition.Scene|) and possibly (|android.transition.Scene|) . 

    sceneRoot - The root of the hierarchy in which scene changes and transitions will take 
       place. 

*android.transition.Scene(ViewGroup,ViewGroup)*

public Scene(
  android.view.ViewGroup sceneRoot,
  android.view.ViewGroup layout)

Constructs a Scene which, when entered, will remove any children from the 
sceneRoot container and add the layout object as a new child of that container. 

    sceneRoot - The root of the hierarchy in which scene changes and transitions will take 
       place. 
    layout - The view hierarchy of this scene, added as a child of sceneRoot when this scene 
       is entered. 

*android.transition.Scene.enter()*

public void enter()

Enters this scene, which entails changing all values that are specified by this 
scene. These may be values associated with a layout view group or layout 
resource file which will now be added to the scene root, or it may be values 
changed by an (|android.transition.Scene|) enter action}, or a combination of 
the these. No transition will be run when the scene is entered. To get 
transition behavior in scene changes, use one of the methods in 
(|android.transition.TransitionManager|) instead. 



*android.transition.Scene.exit()*

public void exit()

Exits this scene, if it is the current scene on the scene's scene 
root(|android.transition.Scene|) . The current scene is set when 
entering(|android.transition.Scene|) a scene. Exiting a scene runs the exit 
action(|android.transition.Scene|) if there is one. 



*android.transition.Scene.getSceneForLayout(ViewGroup,int,Context)*

public static |android.transition.Scene| getSceneForLayout(
  android.view.ViewGroup sceneRoot,
  int layoutId,
  android.content.Context context)

Returns a Scene described by the resource file associated with the given 
layoutId parameter. If such a Scene has already been created for the given 
sceneRoot, that same Scene will be returned. This caching of layoutId-based 
scenes enables sharing of common scenes between those created in code and those 
referenced by (|android.transition.TransitionManager|) XML resource files. 


    sceneRoot - The root of the hierarchy in which scene changes and transitions will take 
       place. 
    layoutId - The id of a standard layout resource file. 
    context - The context used in the process of inflating the layout resource. 

    Returns: The scene for the given root and layout id 

*android.transition.Scene.getSceneRoot()*

public |android.view.ViewGroup| getSceneRoot()

Gets the root of the scene, which is the root of the view hierarchy affected by 
changes due to this scene, and which will be animated when this scene is 
entered. 



    Returns: The root of the view hierarchy affected by this scene. 

*android.transition.Scene.setEnterAction(Runnable)*

public void setEnterAction(java.lang.Runnable action)

Scenes that are not defined with layout resources or hierarchies, or which need 
to perform additional steps after those hierarchies are changed to, should set 
an enter action, and possibly an exit action as well. An enter action will 
cause Scene to call back into application code to do anything else the 
application needs after transitions have captured pre-change values and after 
any other scene changes have been applied, such as the layout (if any) being 
added to the view hierarchy. After this method is called, Transitions will be 
played. 


    action - The runnable whose {@link Runnable#run() run()} method will be called when this 
       scene is entered 

*android.transition.Scene.setExitAction(Runnable)*

public void setExitAction(java.lang.Runnable action)

Scenes that are not defined with layout resources or hierarchies, or which need 
to perform additional steps after those hierarchies are changed to, should set 
an enter action, and possibly an exit action as well. An exit action will cause 
Scene to call back into application code to do anything the application needs 
to do after applicable transitions have captured pre-change values, but before 
any other scene changes have been applied, such as the new layout (if any) 
being added to the view hierarchy. After this method is called, the next scene 
will be entered, including a call to (|android.transition.Scene|) if an enter 
action is set. 




