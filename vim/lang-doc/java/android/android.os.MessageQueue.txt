*android.os.MessageQueue* *MessageQueue* Low-level class holding the list of mes

public final class MessageQueue
  extends    |java.lang.Object|

|android.os.MessageQueue_Description|
|android.os.MessageQueue_Fields|
|android.os.MessageQueue_Constructors|
|android.os.MessageQueue_Methods|

================================================================================

*android.os.MessageQueue_Methods*
|android.os.MessageQueue.addIdleHandler(MessageQueue.IdleHandler)|Add a newIdle
|android.os.MessageQueue.finalize()|
|android.os.MessageQueue.removeIdleHandler(MessageQueue.IdleHandler)|Remove anI

*android.os.MessageQueue_Description*

Low-level class holding the list of messages to be dispatched by a 
(|android.os.Looper|) . Messages are not added directly to a MessageQueue, but 
rather through (|android.os.Handler|) objects associated with the Looper. 

You can retrieve the MessageQueue for the current thread with 
Looper.myQueue()(|android.os.Looper|) . 



*android.os.MessageQueue.addIdleHandler(MessageQueue.IdleHandler)*

public void addIdleHandler(android.os.MessageQueue.IdleHandler handler)

Add a new (|android.os.MessageQueue.IdleHandler|) to this message queue. This 
may be removed automatically for you by returning false from 
IdleHandler.queueIdle()(|android.os.MessageQueue.IdleHandler|) when it is 
invoked, or explicitly removing it with (|android.os.MessageQueue|) . 

This method is safe to call from any thread. 


    handler - The IdleHandler to be added. 

*android.os.MessageQueue.finalize()*

protected void finalize()
  throws |java.lang.Throwable|
         




*android.os.MessageQueue.removeIdleHandler(MessageQueue.IdleHandler)*

public void removeIdleHandler(android.os.MessageQueue.IdleHandler handler)

Remove an (|android.os.MessageQueue.IdleHandler|) from the queue that was 
previously added with (|android.os.MessageQueue|) . If the given object is not 
currently in the idle list, nothing is done. 


    handler - The IdleHandler to be removed. 


