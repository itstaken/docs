*android.print.PrintAttributes* *PrintAttributes* This class represents the attr

public final class PrintAttributes
  extends    |java.lang.Object|
  implements |android.os.Parcelable|

|android.print.PrintAttributes_Description|
|android.print.PrintAttributes_Fields|
|android.print.PrintAttributes_Constructors|
|android.print.PrintAttributes_Methods|

================================================================================

*android.print.PrintAttributes_Fields*
|int_android.print.PrintAttributes.COLOR_MODE_COLOR|
|int_android.print.PrintAttributes.COLOR_MODE_MONOCHROME|
|android.os.Parcelable.Creator<android.print.PrintAttributes>_android.print.PrintAttributes.CREATOR|

*android.print.PrintAttributes_Methods*
|android.print.PrintAttributes.clear()|
|android.print.PrintAttributes.copyFrom(PrintAttributes)|
|android.print.PrintAttributes.describeContents()|
|android.print.PrintAttributes.equals(Object)|
|android.print.PrintAttributes.getColorMode()|Gets the color mode.
|android.print.PrintAttributes.getMediaSize()|Gets the media size.
|android.print.PrintAttributes.getMinMargins()|Gets the minimal margins.
|android.print.PrintAttributes.getResolution()|Gets the resolution.
|android.print.PrintAttributes.hashCode()|
|android.print.PrintAttributes.setColorMode(int)|Sets the color mode.
|android.print.PrintAttributes.setMediaSize(PrintAttributes.MediaSize)|Sets the
|android.print.PrintAttributes.setMinMargins(PrintAttributes.Margins)|Sets the 
|android.print.PrintAttributes.setResolution(PrintAttributes.Resolution)|Sets t
|android.print.PrintAttributes.toString()|
|android.print.PrintAttributes.writeToParcel(Parcel,int)|

*android.print.PrintAttributes_Description*

This class represents the attributes of a print job. These attributes describe 
how the printed content should be laid out. For example, the print attributes 
may state that the content should be laid out on a letter size with 300 DPI 
(dots per inch) resolution, have a margin of 10 mills (thousand of an inch) on 
all sides, and be black and white. 



*int_android.print.PrintAttributes.COLOR_MODE_COLOR*

Color mode: Color color scheme, for example many colors are used. 


*int_android.print.PrintAttributes.COLOR_MODE_MONOCHROME*

Color mode: Monochrome color scheme, for example one color is used. 


*android.os.Parcelable.Creator<android.print.PrintAttributes>_android.print.PrintAttributes.CREATOR*





*android.print.PrintAttributes.clear()*

public void clear()





*android.print.PrintAttributes.copyFrom(PrintAttributes)*

public void copyFrom(android.print.PrintAttributes other)





*android.print.PrintAttributes.describeContents()*

public int describeContents()





*android.print.PrintAttributes.equals(Object)*

public boolean equals(java.lang.Object obj)





*android.print.PrintAttributes.getColorMode()*

public int getColorMode()

Gets the color mode. 



    Returns: The color mode or zero if not set. 

*android.print.PrintAttributes.getMediaSize()*

public |android.print.PrintAttributes.MediaSize| getMediaSize()

Gets the media size. 



    Returns: The media size or null if not set. 

*android.print.PrintAttributes.getMinMargins()*

public |android.print.PrintAttributes.Margins| getMinMargins()

Gets the minimal margins. If the content does not fit these margins it will be 
clipped. 



    Returns: The margins or null if not set. 

*android.print.PrintAttributes.getResolution()*

public |android.print.PrintAttributes.Resolution| getResolution()

Gets the resolution. 



    Returns: The resolution or null if not set. 

*android.print.PrintAttributes.hashCode()*

public int hashCode()





*android.print.PrintAttributes.setColorMode(int)*

public void setColorMode(int colorMode)

Sets the color mode. 


    The - color mode. 

*android.print.PrintAttributes.setMediaSize(PrintAttributes.MediaSize)*

public void setMediaSize(android.print.PrintAttributes.MediaSize mediaSize)

Sets the media size. 


    The - media size. 

*android.print.PrintAttributes.setMinMargins(PrintAttributes.Margins)*

public void setMinMargins(android.print.PrintAttributes.Margins margins)

Sets the minimal margins. If the content does not fit these margins it will be 
clipped. 


    The - margins. 

*android.print.PrintAttributes.setResolution(PrintAttributes.Resolution)*

public void setResolution(android.print.PrintAttributes.Resolution resolution)

Sets the resolution. 


    The - resolution. 

*android.print.PrintAttributes.toString()*

public |java.lang.String| toString()





*android.print.PrintAttributes.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel parcel,
  int flags)






