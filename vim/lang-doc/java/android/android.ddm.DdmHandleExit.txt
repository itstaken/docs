*android.ddm.DdmHandleExit* *DdmHandleExit* Handle an EXIT chunk.

public class DdmHandleExit
  extends    |ChunkHandler|

|android.ddm.DdmHandleExit_Description|
|android.ddm.DdmHandleExit_Fields|
|android.ddm.DdmHandleExit_Constructors|
|android.ddm.DdmHandleExit_Methods|

================================================================================

*android.ddm.DdmHandleExit_Fields*
|int_android.ddm.DdmHandleExit.CHUNK_EXIT|

*android.ddm.DdmHandleExit_Methods*
|android.ddm.DdmHandleExit.connected()|Called when the DDM server connects.
|android.ddm.DdmHandleExit.disconnected()|Called when the DDM server disconnect
|android.ddm.DdmHandleExit.handleChunk(Chunk)|Handle a chunk of data.
|android.ddm.DdmHandleExit.register()|Register for the messages we're intereste

*android.ddm.DdmHandleExit_Description*

Handle an EXIT chunk. 



*int_android.ddm.DdmHandleExit.CHUNK_EXIT*





*android.ddm.DdmHandleExit.connected()*

public void connected()

Called when the DDM server connects. The handler is allowed to send messages to 
the server. 



*android.ddm.DdmHandleExit.disconnected()*

public void disconnected()

Called when the DDM server disconnects. Can be used to disable periodic 
transmissions or clean up saved state. 



*android.ddm.DdmHandleExit.handleChunk(Chunk)*

public Chunk handleChunk(Chunk request)

Handle a chunk of data. We're only registered for "EXIT". 



*android.ddm.DdmHandleExit.register()*

public static void register()

Register for the messages we're interested in. 




