*android.media.MediaPlayer* *MediaPlayer* 

public class MediaPlayer
  extends    |java.lang.Object|

|android.media.MediaPlayer_Description|
|android.media.MediaPlayer_Fields|
|android.media.MediaPlayer_Constructors|
|android.media.MediaPlayer_Methods|

================================================================================

*android.media.MediaPlayer_Fields*
|int_android.media.MediaPlayer.MEDIA_ERROR_IO|
|int_android.media.MediaPlayer.MEDIA_ERROR_MALFORMED|
|int_android.media.MediaPlayer.MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK|
|int_android.media.MediaPlayer.MEDIA_ERROR_SERVER_DIED|
|int_android.media.MediaPlayer.MEDIA_ERROR_TIMED_OUT|
|int_android.media.MediaPlayer.MEDIA_ERROR_UNKNOWN|
|int_android.media.MediaPlayer.MEDIA_ERROR_UNSUPPORTED|
|int_android.media.MediaPlayer.MEDIA_INFO_BAD_INTERLEAVING|
|int_android.media.MediaPlayer.MEDIA_INFO_BUFFERING_END|
|int_android.media.MediaPlayer.MEDIA_INFO_BUFFERING_START|
|int_android.media.MediaPlayer.MEDIA_INFO_METADATA_UPDATE|
|int_android.media.MediaPlayer.MEDIA_INFO_NOT_SEEKABLE|
|int_android.media.MediaPlayer.MEDIA_INFO_SUBTITLE_TIMED_OUT|
|int_android.media.MediaPlayer.MEDIA_INFO_UNKNOWN|
|int_android.media.MediaPlayer.MEDIA_INFO_UNSUPPORTED_SUBTITLE|
|int_android.media.MediaPlayer.MEDIA_INFO_VIDEO_RENDERING_START|
|int_android.media.MediaPlayer.MEDIA_INFO_VIDEO_TRACK_LAGGING|
|java.lang.String_android.media.MediaPlayer.MEDIA_MIMETYPE_TEXT_SUBRIP|
|int_android.media.MediaPlayer.VIDEO_SCALING_MODE_SCALE_TO_FIT|
|int_android.media.MediaPlayer.VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING|

*android.media.MediaPlayer_Constructors*
|android.media.MediaPlayer()|

*android.media.MediaPlayer_Methods*
|android.media.MediaPlayer.addTimedTextSource(Context,Uri,String)|
|android.media.MediaPlayer.addTimedTextSource(FileDescriptor,long,long,String)|
|android.media.MediaPlayer.addTimedTextSource(FileDescriptor,String)|
|android.media.MediaPlayer.addTimedTextSource(String,String)|
|android.media.MediaPlayer.attachAuxEffect(int)|
|android.media.MediaPlayer.create(Context,int)|
|android.media.MediaPlayer.create(Context,Uri)|
|android.media.MediaPlayer.create(Context,Uri,SurfaceHolder)|
|android.media.MediaPlayer.deselectTrack(int)|
|android.media.MediaPlayer.finalize()|
|android.media.MediaPlayer.getAudioSessionId()|
|android.media.MediaPlayer.getCurrentPosition()|
|android.media.MediaPlayer.getDuration()|
|android.media.MediaPlayer.getTrackInfo()|
|android.media.MediaPlayer.getVideoHeight()|
|android.media.MediaPlayer.getVideoWidth()|
|android.media.MediaPlayer.isLooping()|
|android.media.MediaPlayer.isPlaying()|
|android.media.MediaPlayer.pause()|
|android.media.MediaPlayer.prepare()|
|android.media.MediaPlayer.prepareAsync()|
|android.media.MediaPlayer.release()|
|android.media.MediaPlayer.reset()|
|android.media.MediaPlayer.seekTo(int)|
|android.media.MediaPlayer.selectTrack(int)|
|android.media.MediaPlayer.setAudioSessionId(int)|
|android.media.MediaPlayer.setAudioStreamType(int)|
|android.media.MediaPlayer.setAuxEffectSendLevel(float)|
|android.media.MediaPlayer.setDataSource(Context,Uri)|
|android.media.MediaPlayer.setDataSource(Context,Uri,Map<String,String>)|
|android.media.MediaPlayer.setDataSource(FileDescriptor)|
|android.media.MediaPlayer.setDataSource(FileDescriptor,long,long)|
|android.media.MediaPlayer.setDataSource(String)|
|android.media.MediaPlayer.setDisplay(SurfaceHolder)|
|android.media.MediaPlayer.setLooping(boolean)|
|android.media.MediaPlayer.setNextMediaPlayer(MediaPlayer)|
|android.media.MediaPlayer.setOnBufferingUpdateListener(MediaPlayer.OnBufferingUpdateListener)|
|android.media.MediaPlayer.setOnCompletionListener(MediaPlayer.OnCompletionListener)|
|android.media.MediaPlayer.setOnErrorListener(MediaPlayer.OnErrorListener)|
|android.media.MediaPlayer.setOnInfoListener(MediaPlayer.OnInfoListener)|
|android.media.MediaPlayer.setOnPreparedListener(MediaPlayer.OnPreparedListener)|
|android.media.MediaPlayer.setOnSeekCompleteListener(MediaPlayer.OnSeekCompleteListener)|
|android.media.MediaPlayer.setOnTimedTextListener(MediaPlayer.OnTimedTextListener)|
|android.media.MediaPlayer.setOnVideoSizeChangedListener(MediaPlayer.OnVideoSizeChangedListener)|
|android.media.MediaPlayer.setScreenOnWhilePlaying(boolean)|
|android.media.MediaPlayer.setSurface(Surface)|
|android.media.MediaPlayer.setVideoScalingMode(int)|
|android.media.MediaPlayer.setVolume(float,float)|
|android.media.MediaPlayer.setWakeMode(Context,int)|
|android.media.MediaPlayer.start()|
|android.media.MediaPlayer.stop()|

*android.media.MediaPlayer_Description*





*int_android.media.MediaPlayer.MEDIA_ERROR_IO*




*int_android.media.MediaPlayer.MEDIA_ERROR_MALFORMED*




*int_android.media.MediaPlayer.MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK*




*int_android.media.MediaPlayer.MEDIA_ERROR_SERVER_DIED*




*int_android.media.MediaPlayer.MEDIA_ERROR_TIMED_OUT*




*int_android.media.MediaPlayer.MEDIA_ERROR_UNKNOWN*




*int_android.media.MediaPlayer.MEDIA_ERROR_UNSUPPORTED*




*int_android.media.MediaPlayer.MEDIA_INFO_BAD_INTERLEAVING*




*int_android.media.MediaPlayer.MEDIA_INFO_BUFFERING_END*




*int_android.media.MediaPlayer.MEDIA_INFO_BUFFERING_START*




*int_android.media.MediaPlayer.MEDIA_INFO_METADATA_UPDATE*




*int_android.media.MediaPlayer.MEDIA_INFO_NOT_SEEKABLE*




*int_android.media.MediaPlayer.MEDIA_INFO_SUBTITLE_TIMED_OUT*




*int_android.media.MediaPlayer.MEDIA_INFO_UNKNOWN*




*int_android.media.MediaPlayer.MEDIA_INFO_UNSUPPORTED_SUBTITLE*




*int_android.media.MediaPlayer.MEDIA_INFO_VIDEO_RENDERING_START*




*int_android.media.MediaPlayer.MEDIA_INFO_VIDEO_TRACK_LAGGING*




*java.lang.String_android.media.MediaPlayer.MEDIA_MIMETYPE_TEXT_SUBRIP*




*int_android.media.MediaPlayer.VIDEO_SCALING_MODE_SCALE_TO_FIT*




*int_android.media.MediaPlayer.VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING*





*android.media.MediaPlayer()*

public MediaPlayer()




*android.media.MediaPlayer.addTimedTextSource(Context,Uri,String)*

public void addTimedTextSource(
  android.content.Context context,
  android.net.Uri uri,
  java.lang.String mimeType)
  throws |java.lang.IllegalArgumentException|
         |java.lang.IllegalStateException|
         |java.io.IOException|
         




*android.media.MediaPlayer.addTimedTextSource(FileDescriptor,long,long,String)*

public void addTimedTextSource(
  java.io.FileDescriptor fd,
  long offset,
  long length,
  java.lang.String mimeType)
  throws |java.lang.IllegalArgumentException|
         |java.lang.IllegalStateException|
         




*android.media.MediaPlayer.addTimedTextSource(FileDescriptor,String)*

public void addTimedTextSource(
  java.io.FileDescriptor fd,
  java.lang.String mimeType)
  throws |java.lang.IllegalArgumentException|
         |java.lang.IllegalStateException|
         




*android.media.MediaPlayer.addTimedTextSource(String,String)*

public void addTimedTextSource(
  java.lang.String path,
  java.lang.String mimeType)
  throws |java.lang.IllegalArgumentException|
         |java.lang.IllegalStateException|
         |java.io.IOException|
         




*android.media.MediaPlayer.attachAuxEffect(int)*

public native void attachAuxEffect(int effectId)





*android.media.MediaPlayer.create(Context,int)*

public static |android.media.MediaPlayer| create(
  android.content.Context context,
  int resid)





*android.media.MediaPlayer.create(Context,Uri)*

public static |android.media.MediaPlayer| create(
  android.content.Context context,
  android.net.Uri uri)





*android.media.MediaPlayer.create(Context,Uri,SurfaceHolder)*

public static |android.media.MediaPlayer| create(
  android.content.Context context,
  android.net.Uri uri,
  android.view.SurfaceHolder holder)





*android.media.MediaPlayer.deselectTrack(int)*

public void deselectTrack(int index)
  throws |java.lang.IllegalStateException|
         




*android.media.MediaPlayer.finalize()*

protected void finalize()





*android.media.MediaPlayer.getAudioSessionId()*

public native int getAudioSessionId()





*android.media.MediaPlayer.getCurrentPosition()*

public native int getCurrentPosition()





*android.media.MediaPlayer.getDuration()*

public native int getDuration()





*android.media.MediaPlayer.getTrackInfo()*

public |android.media.MediaPlayer.TrackInfo|[] getTrackInfo()
  throws |java.lang.IllegalStateException|
         




*android.media.MediaPlayer.getVideoHeight()*

public native int getVideoHeight()





*android.media.MediaPlayer.getVideoWidth()*

public native int getVideoWidth()





*android.media.MediaPlayer.isLooping()*

public native boolean isLooping()





*android.media.MediaPlayer.isPlaying()*

public native boolean isPlaying()





*android.media.MediaPlayer.pause()*

public void pause()
  throws |java.lang.IllegalStateException|
         




*android.media.MediaPlayer.prepare()*

public native void prepare()
  throws |java.lang.IllegalStateException|
         |java.io.IOException|
         




*android.media.MediaPlayer.prepareAsync()*

public native void prepareAsync()
  throws |java.lang.IllegalStateException|
         




*android.media.MediaPlayer.release()*

public void release()





*android.media.MediaPlayer.reset()*

public void reset()





*android.media.MediaPlayer.seekTo(int)*

public native void seekTo(int msec)
  throws |java.lang.IllegalStateException|
         




*android.media.MediaPlayer.selectTrack(int)*

public void selectTrack(int index)
  throws |java.lang.IllegalStateException|
         




*android.media.MediaPlayer.setAudioSessionId(int)*

public native void setAudioSessionId(int sessionId)
  throws |java.lang.IllegalArgumentException|
         |java.lang.IllegalStateException|
         




*android.media.MediaPlayer.setAudioStreamType(int)*

public native void setAudioStreamType(int streamtype)





*android.media.MediaPlayer.setAuxEffectSendLevel(float)*

public native void setAuxEffectSendLevel(float level)





*android.media.MediaPlayer.setDataSource(Context,Uri)*

public void setDataSource(
  android.content.Context context,
  android.net.Uri uri)
  throws |java.lang.IllegalArgumentException|
         |java.lang.IllegalStateException|
         |java.io.IOException|
         |java.lang.SecurityException|
         




*android.media.MediaPlayer.setDataSource(Context,Uri,Map<String,String>)*

public void setDataSource(
  android.content.Context context,
  android.net.Uri uri,
  java.util.Map<java.lang.String, java.lang.String> headers)
  throws |java.lang.IllegalArgumentException|
         |java.lang.IllegalStateException|
         |java.io.IOException|
         |java.lang.SecurityException|
         




*android.media.MediaPlayer.setDataSource(FileDescriptor)*

public void setDataSource(java.io.FileDescriptor fd)
  throws |java.lang.IllegalArgumentException|
         |java.lang.IllegalStateException|
         |java.io.IOException|
         




*android.media.MediaPlayer.setDataSource(FileDescriptor,long,long)*

public void setDataSource(
  java.io.FileDescriptor fd,
  long offset,
  long length)
  throws |java.lang.IllegalArgumentException|
         |java.lang.IllegalStateException|
         |java.io.IOException|
         




*android.media.MediaPlayer.setDataSource(String)*

public void setDataSource(java.lang.String path)
  throws |java.lang.IllegalArgumentException|
         |java.lang.IllegalStateException|
         |java.io.IOException|
         |java.lang.SecurityException|
         




*android.media.MediaPlayer.setDisplay(SurfaceHolder)*

public void setDisplay(android.view.SurfaceHolder sh)





*android.media.MediaPlayer.setLooping(boolean)*

public native void setLooping(boolean looping)





*android.media.MediaPlayer.setNextMediaPlayer(MediaPlayer)*

public native void setNextMediaPlayer(android.media.MediaPlayer next)





*android.media.MediaPlayer.setOnBufferingUpdateListener(MediaPlayer.OnBufferingUpdateListener)*

public void setOnBufferingUpdateListener(android.media.MediaPlayer.OnBufferingUpdateListener listener)





*android.media.MediaPlayer.setOnCompletionListener(MediaPlayer.OnCompletionListener)*

public void setOnCompletionListener(android.media.MediaPlayer.OnCompletionListener listener)





*android.media.MediaPlayer.setOnErrorListener(MediaPlayer.OnErrorListener)*

public void setOnErrorListener(android.media.MediaPlayer.OnErrorListener listener)





*android.media.MediaPlayer.setOnInfoListener(MediaPlayer.OnInfoListener)*

public void setOnInfoListener(android.media.MediaPlayer.OnInfoListener listener)





*android.media.MediaPlayer.setOnPreparedListener(MediaPlayer.OnPreparedListener)*

public void setOnPreparedListener(android.media.MediaPlayer.OnPreparedListener listener)





*android.media.MediaPlayer.setOnSeekCompleteListener(MediaPlayer.OnSeekCompleteListener)*

public void setOnSeekCompleteListener(android.media.MediaPlayer.OnSeekCompleteListener listener)





*android.media.MediaPlayer.setOnTimedTextListener(MediaPlayer.OnTimedTextListener)*

public void setOnTimedTextListener(android.media.MediaPlayer.OnTimedTextListener listener)





*android.media.MediaPlayer.setOnVideoSizeChangedListener(MediaPlayer.OnVideoSizeChangedListener)*

public void setOnVideoSizeChangedListener(android.media.MediaPlayer.OnVideoSizeChangedListener listener)





*android.media.MediaPlayer.setScreenOnWhilePlaying(boolean)*

public void setScreenOnWhilePlaying(boolean screenOn)





*android.media.MediaPlayer.setSurface(Surface)*

public void setSurface(android.view.Surface surface)





*android.media.MediaPlayer.setVideoScalingMode(int)*

public void setVideoScalingMode(int mode)





*android.media.MediaPlayer.setVolume(float,float)*

public native void setVolume(
  float leftVolume,
  float rightVolume)





*android.media.MediaPlayer.setWakeMode(Context,int)*

public void setWakeMode(
  android.content.Context context,
  int mode)





*android.media.MediaPlayer.start()*

public void start()
  throws |java.lang.IllegalStateException|
         




*android.media.MediaPlayer.stop()*

public void stop()
  throws |java.lang.IllegalStateException|
         





