*android.view.textservice.TextServicesManager* *TextServicesManager* System API 

public final class TextServicesManager
  extends    |java.lang.Object|

|android.view.textservice.TextServicesManager_Description|
|android.view.textservice.TextServicesManager_Fields|
|android.view.textservice.TextServicesManager_Constructors|
|android.view.textservice.TextServicesManager_Methods|

================================================================================

*android.view.textservice.TextServicesManager_Methods*
|android.view.textservice.TextServicesManager.getCurrentSpellChecker()|
|android.view.textservice.TextServicesManager.getCurrentSpellCheckerSubtype(boolean)|
|android.view.textservice.TextServicesManager.getEnabledSpellCheckers()|
|android.view.textservice.TextServicesManager.getInstance()|Retrieve the global
|android.view.textservice.TextServicesManager.isSpellCheckerEnabled()|
|android.view.textservice.TextServicesManager.newSpellCheckerSession(Bundle,Locale,SpellCheckerSession.SpellCheckerSessionListener,boolean)|
|android.view.textservice.TextServicesManager.setCurrentSpellChecker(SpellCheckerInfo)|
|android.view.textservice.TextServicesManager.setSpellCheckerEnabled(boolean)|
|android.view.textservice.TextServicesManager.setSpellCheckerSubtype(SpellCheckerSubtype)|

*android.view.textservice.TextServicesManager_Description*

System API to the overall text services, which arbitrates interaction between 
applications and text services. You can retrieve an instance of this interface 
with Context.getSystemService()(|android.content.Context|) . 

The user can change the current text services in Settings. And also 
applications can specify the target text services. 

Architecture Overview 

There are three primary parties involved in the text services framework (TSF) 
architecture: 

The text services manager as expressed by this class is the central point of 
the system that manages interaction between all other parts. It is expressed as 
the client-side API here which exists in each application context and 
communicates with a global system service that manages the interaction across 
all processes. A text service implements a particular interaction model 
allowing the client application to retrieve information of text. The system 
binds to the current text service that is in use, causing it to be created and 
run. Multiple client applications arbitrate with the text service manager for 
connections to text services. 

Text services sessions 

The spell checker session is one of the text services. 
(|android.view.textservice.SpellCheckerSession|) 



*android.view.textservice.TextServicesManager.getCurrentSpellChecker()*

public |android.view.textservice.SpellCheckerInfo| getCurrentSpellChecker()





*android.view.textservice.TextServicesManager.getCurrentSpellCheckerSubtype(boolean)*

public |android.view.textservice.SpellCheckerSubtype| getCurrentSpellCheckerSubtype(boolean allowImplicitlySelectedSubtype)





*android.view.textservice.TextServicesManager.getEnabledSpellCheckers()*

public |android.view.textservice.SpellCheckerInfo|[] getEnabledSpellCheckers()





*android.view.textservice.TextServicesManager.getInstance()*

public static |android.view.textservice.TextServicesManager| getInstance()

Retrieve the global TextServicesManager instance, creating it if it doesn't 
already exist. 



*android.view.textservice.TextServicesManager.isSpellCheckerEnabled()*

public boolean isSpellCheckerEnabled()





*android.view.textservice.TextServicesManager.newSpellCheckerSession(Bundle,Locale,SpellCheckerSession.SpellCheckerSessionListener,boolean)*

public |android.view.textservice.SpellCheckerSession| newSpellCheckerSession(
  android.os.Bundle bundle,
  java.util.Locale locale,
  android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener listener,
  boolean referToSpellCheckerLanguageSettings)

Get a spell checker session for the specified spell checker 


    locale - the locale for the spell checker. If {@code locale} is null and 
       referToSpellCheckerLanguageSettings is true, the locale specified in 
       Settings will be returned. If {@code locale} is not null and 
       referToSpellCheckerLanguageSettings is true, the locale specified in 
       Settings will be returned only when it is same as {@code locale}. 
       Exceptionally, when referToSpellCheckerLanguageSettings is true and 
       {@code locale} is only language (e.g. "en"), the specified locale in 
       Settings (e.g. "en_US") will be selected. 
    listener - a spell checker session lister for getting results from a spell checker. 
    referToSpellCheckerLanguageSettings - if true, the session for one of enabled languages in settings will be returned. 

    Returns: the spell checker session of the spell checker 

*android.view.textservice.TextServicesManager.setCurrentSpellChecker(SpellCheckerInfo)*

public void setCurrentSpellChecker(android.view.textservice.SpellCheckerInfo sci)





*android.view.textservice.TextServicesManager.setSpellCheckerEnabled(boolean)*

public void setSpellCheckerEnabled(boolean enabled)





*android.view.textservice.TextServicesManager.setSpellCheckerSubtype(SpellCheckerSubtype)*

public void setSpellCheckerSubtype(android.view.textservice.SpellCheckerSubtype subtype)






