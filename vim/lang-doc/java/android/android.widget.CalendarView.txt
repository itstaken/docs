*android.widget.CalendarView* *CalendarView* This class is a calendar widget for

public class CalendarView
  extends    |android.widget.FrameLayout|

|android.widget.CalendarView_Description|
|android.widget.CalendarView_Fields|
|android.widget.CalendarView_Constructors|
|android.widget.CalendarView_Methods|

================================================================================

*android.widget.CalendarView_Constructors*
|android.widget.CalendarView(Context)|
|android.widget.CalendarView(Context,AttributeSet)|
|android.widget.CalendarView(Context,AttributeSet,int)|

*android.widget.CalendarView_Methods*
|android.widget.CalendarView.getDate()|Gets the selected date in milliseconds s
|android.widget.CalendarView.getDateTextAppearance()|Gets the text appearance f
|android.widget.CalendarView.getFirstDayOfWeek()|Gets the first day of week.
|android.widget.CalendarView.getFocusedMonthDateColor()|Gets the color for the 
|android.widget.CalendarView.getMaxDate()|Gets the maximal date supported by th
|android.widget.CalendarView.getMinDate()|Gets the minimal date supported by th
|android.widget.CalendarView.getSelectedDateVerticalBar()|Gets the drawable for
|android.widget.CalendarView.getSelectedWeekBackgroundColor()|Gets the backgrou
|android.widget.CalendarView.getShownWeekCount()|Gets the number of weeks to be
|android.widget.CalendarView.getShowWeekNumber()|Gets whether to show the week 
|android.widget.CalendarView.getUnfocusedMonthDateColor()|Gets the color for th
|android.widget.CalendarView.getWeekDayTextAppearance()|Gets the text appearanc
|android.widget.CalendarView.getWeekNumberColor()|Gets the color for the week n
|android.widget.CalendarView.getWeekSeparatorLineColor()|Gets the color for the
|android.widget.CalendarView.isEnabled()|
|android.widget.CalendarView.onConfigurationChanged(Configuration)|
|android.widget.CalendarView.onInitializeAccessibilityEvent(AccessibilityEvent)|
|android.widget.CalendarView.onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo)|
|android.widget.CalendarView.setDate(long)|Sets the selected date in millisecon
|android.widget.CalendarView.setDate(long,boolean,boolean)|Sets the selected da
|android.widget.CalendarView.setDateTextAppearance(int)|Sets the text appearanc
|android.widget.CalendarView.setEnabled(boolean)|
|android.widget.CalendarView.setFirstDayOfWeek(int)|Sets the first day of week.
|android.widget.CalendarView.setFocusedMonthDateColor(int)|Sets the color for t
|android.widget.CalendarView.setMaxDate(long)|Sets the maximal date supported b
|android.widget.CalendarView.setMinDate(long)|Sets the minimal date supported b
|android.widget.CalendarView.setOnDateChangeListener(CalendarView.OnDateChangeListener)|
|android.widget.CalendarView.setSelectedDateVerticalBar(Drawable)|Sets the draw
|android.widget.CalendarView.setSelectedDateVerticalBar(int)|Sets the drawable 
|android.widget.CalendarView.setSelectedWeekBackgroundColor(int)|Sets the backg
|android.widget.CalendarView.setShownWeekCount(int)|Sets the number of weeks to
|android.widget.CalendarView.setShowWeekNumber(boolean)|Sets whether to show th
|android.widget.CalendarView.setUnfocusedMonthDateColor(int)|Sets the color for
|android.widget.CalendarView.setWeekDayTextAppearance(int)|Sets the text appear
|android.widget.CalendarView.setWeekNumberColor(int)|Sets the color for the wee
|android.widget.CalendarView.setWeekSeparatorLineColor(int)|Sets the color for 

*android.widget.CalendarView_Description*

This class is a calendar widget for displaying and selecting dates. The range 
of dates supported by this calendar is configurable. A user can select a date 
by taping on it and can scroll and fling the calendar to a desired date. 



*android.widget.CalendarView(Context)*

public CalendarView(android.content.Context context)




*android.widget.CalendarView(Context,AttributeSet)*

public CalendarView(
  android.content.Context context,
  android.util.AttributeSet attrs)




*android.widget.CalendarView(Context,AttributeSet,int)*

public CalendarView(
  android.content.Context context,
  android.util.AttributeSet attrs,
  int defStyle)




*android.widget.CalendarView.getDate()*

public long getDate()

Gets the selected date in milliseconds since January 1, 1970 00:00:00 in 
(|java.util.TimeZone|) time zone. 



    Returns: The selected date. 

*android.widget.CalendarView.getDateTextAppearance()*

public int getDateTextAppearance()

Gets the text appearance for the calendar dates. 



    Returns: The text appearance resource id. 

*android.widget.CalendarView.getFirstDayOfWeek()*

public int getFirstDayOfWeek()

Gets the first day of week. 



    Returns: The first day of the week conforming to the {@link CalendarView} APIs. 

*android.widget.CalendarView.getFocusedMonthDateColor()*

public int getFocusedMonthDateColor()

Gets the color for the dates in the focused month. 



    Returns: The focused month date color. 

*android.widget.CalendarView.getMaxDate()*

public long getMaxDate()

Gets the maximal date supported by this (|android.widget.CalendarView|) in 
milliseconds since January 1, 1970 00:00:00 in (|java.util.TimeZone|) time 
zone. 

Note: The default maximal date is 01/01/2100. 



    Returns: The maximal supported date. 

*android.widget.CalendarView.getMinDate()*

public long getMinDate()

Gets the minimal date supported by this (|android.widget.CalendarView|) in 
milliseconds since January 1, 1970 00:00:00 in (|java.util.TimeZone|) time 
zone. 

Note: The default minimal date is 01/01/1900. 



    Returns: The minimal supported date. 

*android.widget.CalendarView.getSelectedDateVerticalBar()*

public Drawable getSelectedDateVerticalBar()

Gets the drawable for the vertical bar shown at the beginning and at the end of 
the selected date. 



    Returns: The vertical bar drawable. 

*android.widget.CalendarView.getSelectedWeekBackgroundColor()*

public int getSelectedWeekBackgroundColor()

Gets the background color for the selected week. 



    Returns: The week background color. 

*android.widget.CalendarView.getShownWeekCount()*

public int getShownWeekCount()

Gets the number of weeks to be shown. 



    Returns: The shown week count. 

*android.widget.CalendarView.getShowWeekNumber()*

public boolean getShowWeekNumber()

Gets whether to show the week number. 



    Returns: True if showing the week number. 

*android.widget.CalendarView.getUnfocusedMonthDateColor()*

public int getUnfocusedMonthDateColor()

Gets the color for the dates in a not focused month. 



    Returns: A not focused month date color. 

*android.widget.CalendarView.getWeekDayTextAppearance()*

public int getWeekDayTextAppearance()

Gets the text appearance for the week day abbreviation of the calendar header. 



    Returns: The text appearance resource id. 

*android.widget.CalendarView.getWeekNumberColor()*

public int getWeekNumberColor()

Gets the color for the week numbers. 



    Returns: The week number color. 

*android.widget.CalendarView.getWeekSeparatorLineColor()*

public int getWeekSeparatorLineColor()

Gets the color for the separator line between weeks. 



    Returns: The week separator color. 

*android.widget.CalendarView.isEnabled()*

public boolean isEnabled()





*android.widget.CalendarView.onConfigurationChanged(Configuration)*

protected void onConfigurationChanged(android.content.res.Configuration newConfig)





*android.widget.CalendarView.onInitializeAccessibilityEvent(AccessibilityEvent)*

public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent event)





*android.widget.CalendarView.onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo)*

public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo info)





*android.widget.CalendarView.setDate(long)*

public void setDate(long date)

Sets the selected date in milliseconds since January 1, 1970 00:00:00 in 
(|java.util.TimeZone|) time zone. 


    date - The selected date. 

*android.widget.CalendarView.setDate(long,boolean,boolean)*

public void setDate(
  long date,
  boolean animate,
  boolean center)

Sets the selected date in milliseconds since January 1, 1970 00:00:00 in 
(|java.util.TimeZone|) time zone. 


    date - The date. 
    animate - Whether to animate the scroll to the current date. 
    center - Whether to center the current date even if it is already visible. 

*android.widget.CalendarView.setDateTextAppearance(int)*

public void setDateTextAppearance(int resourceId)

Sets the text appearance for the calendar dates. 


    resourceId - The text appearance resource id. 

*android.widget.CalendarView.setEnabled(boolean)*

public void setEnabled(boolean enabled)





*android.widget.CalendarView.setFirstDayOfWeek(int)*

public void setFirstDayOfWeek(int firstDayOfWeek)

Sets the first day of week. 


    firstDayOfWeek - The first day of the week conforming to the {@link CalendarView} APIs. 

*android.widget.CalendarView.setFocusedMonthDateColor(int)*

public void setFocusedMonthDateColor(int color)

Sets the color for the dates of the focused month. 


    color - The focused month date color. 

*android.widget.CalendarView.setMaxDate(long)*

public void setMaxDate(long maxDate)

Sets the maximal date supported by this (|android.widget.CalendarView|) in 
milliseconds since January 1, 1970 00:00:00 in (|java.util.TimeZone|) time 
zone. 


    maxDate - The maximal supported date. 

*android.widget.CalendarView.setMinDate(long)*

public void setMinDate(long minDate)

Sets the minimal date supported by this (|android.widget.CalendarView|) in 
milliseconds since January 1, 1970 00:00:00 in (|java.util.TimeZone|) time 
zone. 


    minDate - The minimal supported date. 

*android.widget.CalendarView.setOnDateChangeListener(CalendarView.OnDateChangeListener)*

public void setOnDateChangeListener(android.widget.CalendarView.OnDateChangeListener listener)

Sets the listener to be notified upon selected date change. 


    listener - The listener to be notified. 

*android.widget.CalendarView.setSelectedDateVerticalBar(Drawable)*

public void setSelectedDateVerticalBar(Drawable drawable)

Sets the drawable for the vertical bar shown at the beginning and at the end of 
the selected date. 


    drawable - The vertical bar drawable. 

*android.widget.CalendarView.setSelectedDateVerticalBar(int)*

public void setSelectedDateVerticalBar(int resourceId)

Sets the drawable for the vertical bar shown at the beginning and at the end of 
the selected date. 


    resourceId - The vertical bar drawable resource id. 

*android.widget.CalendarView.setSelectedWeekBackgroundColor(int)*

public void setSelectedWeekBackgroundColor(int color)

Sets the background color for the selected week. 


    color - The week background color. 

*android.widget.CalendarView.setShownWeekCount(int)*

public void setShownWeekCount(int count)

Sets the number of weeks to be shown. 


    count - The shown week count. 

*android.widget.CalendarView.setShowWeekNumber(boolean)*

public void setShowWeekNumber(boolean showWeekNumber)

Sets whether to show the week number. 


    showWeekNumber - True to show the week number. 

*android.widget.CalendarView.setUnfocusedMonthDateColor(int)*

public void setUnfocusedMonthDateColor(int color)

Sets the color for the dates of a not focused month. 


    color - A not focused month date color. 

*android.widget.CalendarView.setWeekDayTextAppearance(int)*

public void setWeekDayTextAppearance(int resourceId)

Sets the text appearance for the week day abbreviation of the calendar header. 


    resourceId - The text appearance resource id. 

*android.widget.CalendarView.setWeekNumberColor(int)*

public void setWeekNumberColor(int color)

Sets the color for the week numbers. 


    color - The week number color. 

*android.widget.CalendarView.setWeekSeparatorLineColor(int)*

public void setWeekSeparatorLineColor(int color)

Sets the color for the separator line between weeks. 


    color - The week separator color. 


