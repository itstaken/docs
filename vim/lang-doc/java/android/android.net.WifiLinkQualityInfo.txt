*android.net.WifiLinkQualityInfo* *WifiLinkQualityInfo* Class that represents us

public class WifiLinkQualityInfo
  extends    |android.net.LinkQualityInfo|

|android.net.WifiLinkQualityInfo_Description|
|android.net.WifiLinkQualityInfo_Fields|
|android.net.WifiLinkQualityInfo_Constructors|
|android.net.WifiLinkQualityInfo_Methods|

================================================================================

*android.net.WifiLinkQualityInfo_Constructors*
|android.net.WifiLinkQualityInfo()|

*android.net.WifiLinkQualityInfo_Methods*
|android.net.WifiLinkQualityInfo.createFromParcelBody(Parcel)|
|android.net.WifiLinkQualityInfo.getBssid()|returns BSSID of the access point
|android.net.WifiLinkQualityInfo.getRssi()|returns RSSI of the network in raw f
|android.net.WifiLinkQualityInfo.getTxBad()|returns number of transmitted packe
|android.net.WifiLinkQualityInfo.getTxGood()|returns number of packets transmit
|android.net.WifiLinkQualityInfo.getType()|returns Wifi network type
|android.net.WifiLinkQualityInfo.setBssid(String)|
|android.net.WifiLinkQualityInfo.setRssi(int)|
|android.net.WifiLinkQualityInfo.setTxBad(long)|
|android.net.WifiLinkQualityInfo.setTxGood(long)|
|android.net.WifiLinkQualityInfo.setType(int)|
|android.net.WifiLinkQualityInfo.writeToParcel(Parcel,int)|Implement the Parcel

*android.net.WifiLinkQualityInfo_Description*

Class that represents useful attributes of wifi network links such as the 
upload/download throughput or error rate etc. 



*android.net.WifiLinkQualityInfo()*

public WifiLinkQualityInfo()




*android.net.WifiLinkQualityInfo.createFromParcelBody(Parcel)*

public static |android.net.WifiLinkQualityInfo| createFromParcelBody(android.os.Parcel in)





*android.net.WifiLinkQualityInfo.getBssid()*

public |java.lang.String| getBssid()

returns BSSID of the access point 



    Returns: the BSSID, in the form of a six-byte MAC address: {@code XX:XX:XX:XX:XX:XX} or 
             null 

*android.net.WifiLinkQualityInfo.getRssi()*

public int getRssi()

returns RSSI of the network in raw form 



    Returns: un-normalized RSSI or {@link android.net.LinkQualityInfo#UNKNOWN_INT} 

*android.net.WifiLinkQualityInfo.getTxBad()*

public long getTxBad()

returns number of transmitted packets that encountered errors 



    Returns: number of packets or {@link android.net.LinkQualityInfo#UNKNOWN_LONG} 

*android.net.WifiLinkQualityInfo.getTxGood()*

public long getTxGood()

returns number of packets transmitted without error 



    Returns: number of packets or {@link android.net.LinkQualityInfo#UNKNOWN_LONG} 

*android.net.WifiLinkQualityInfo.getType()*

public int getType()

returns Wifi network type 



    Returns: network type or {@link android.net.LinkQualityInfo#UNKNOWN_INT} 

*android.net.WifiLinkQualityInfo.setBssid(String)*

public void setBssid(java.lang.String bssid)





*android.net.WifiLinkQualityInfo.setRssi(int)*

public void setRssi(int rssi)





*android.net.WifiLinkQualityInfo.setTxBad(long)*

public void setTxBad(long txBad)





*android.net.WifiLinkQualityInfo.setTxGood(long)*

public void setTxGood(long txGood)





*android.net.WifiLinkQualityInfo.setType(int)*

public void setType(int type)





*android.net.WifiLinkQualityInfo.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel dest,
  int flags)

Implement the Parcelable interface. 




