*android.widget.Toast* *Toast* A toast is a view containing a quick little messa

public class Toast
  extends    |java.lang.Object|

|android.widget.Toast_Description|
|android.widget.Toast_Fields|
|android.widget.Toast_Constructors|
|android.widget.Toast_Methods|

================================================================================

*android.widget.Toast_Fields*
|int_android.widget.Toast.LENGTH_LONG|
|int_android.widget.Toast.LENGTH_SHORT|

*android.widget.Toast_Constructors*
|android.widget.Toast(Context)|Construct an empty Toast object.

*android.widget.Toast_Methods*
|android.widget.Toast.cancel()|Close the view if it's showing, or don't show it
|android.widget.Toast.getDuration()|Return the duration.
|android.widget.Toast.getGravity()|Get the location at which the notification s
|android.widget.Toast.getHorizontalMargin()|Return the horizontal margin.
|android.widget.Toast.getVerticalMargin()|Return the vertical margin.
|android.widget.Toast.getView()|Return the view.
|android.widget.Toast.getXOffset()|Return the X offset in pixels to apply to th
|android.widget.Toast.getYOffset()|Return the Y offset in pixels to apply to th
|android.widget.Toast.makeText(Context,CharSequence,int)|Make a standard toast 
|android.widget.Toast.makeText(Context,int,int)|Make a standard toast that just
|android.widget.Toast.setDuration(int)|Set how long to show the view for.
|android.widget.Toast.setGravity(int,int,int)|Set the location at which the not
|android.widget.Toast.setMargin(float,float)|Set the margins of the view.
|android.widget.Toast.setText(CharSequence)|Update the text in a Toast that was
|android.widget.Toast.setText(int)|Update the text in a Toast that was previous
|android.widget.Toast.setView(View)|Set the view to show.
|android.widget.Toast.show()|Show the view for the specified duration.

*android.widget.Toast_Description*

A toast is a view containing a quick little message for the user. The toast 
class helps you create and show those. When the view is shown to the user, 
appears as a floating view over the application. It will never receive focus. 
The user will probably be in the middle of typing something else. The idea is 
to be as unobtrusive as possible, while still showing the user the information 
you want them to see. Two examples are the volume control, and the brief 
message saying that your settings have been saved. 

The easiest way to use this class is to call one of the static methods that 
constructs everything you need and returns a new Toast object. 

Developer Guides For information about creating Toast notifications, read the 
<a href="guide/topics/ui/notifiers/toasts.html">Toast Notifications developer 
guide. 



*int_android.widget.Toast.LENGTH_LONG*

Show the view or text notification for a long period of time. This time could 
be user-definable. 


*int_android.widget.Toast.LENGTH_SHORT*

Show the view or text notification for a short period of time. This time could 
be user-definable. This is the default. 



*android.widget.Toast(Context)*

public Toast(android.content.Context context)

Construct an empty Toast object. You must call (|android.widget.Toast|) before 
you can call (|android.widget.Toast|) . 

    context - The context to use. Usually your {@link android.app.Application} or {@link 
       android.app.Activity} object. 

*android.widget.Toast.cancel()*

public void cancel()

Close the view if it's showing, or don't show it if it isn't showing yet. You 
do not normally have to call this. Normally view will disappear on its own 
after the appropriate duration. 



*android.widget.Toast.getDuration()*

public int getDuration()

Return the duration. 



*android.widget.Toast.getGravity()*

public int getGravity()

Get the location at which the notification should appear on the screen. 



*android.widget.Toast.getHorizontalMargin()*

public float getHorizontalMargin()

Return the horizontal margin. 



*android.widget.Toast.getVerticalMargin()*

public float getVerticalMargin()

Return the vertical margin. 



*android.widget.Toast.getView()*

public |android.view.View| getView()

Return the view. 



*android.widget.Toast.getXOffset()*

public int getXOffset()

Return the X offset in pixels to apply to the gravity's location. 



*android.widget.Toast.getYOffset()*

public int getYOffset()

Return the Y offset in pixels to apply to the gravity's location. 



*android.widget.Toast.makeText(Context,CharSequence,int)*

public static |android.widget.Toast| makeText(
  android.content.Context context,
  java.lang.CharSequence text,
  int duration)

Make a standard toast that just contains a text view. 


    context - The context to use. Usually your {@link android.app.Application} or {@link 
       android.app.Activity} object. 
    text - The text to show. Can be formatted text. 
    duration - How long to display the message. Either {@link #LENGTH_SHORT} or {@link 
       #LENGTH_LONG} 

*android.widget.Toast.makeText(Context,int,int)*

public static |android.widget.Toast| makeText(
  android.content.Context context,
  int resId,
  int duration)
  throws |android.content.res.Resources.NotFoundException|
         
Make a standard toast that just contains a text view with the text from a 
resource. 


    context - The context to use. Usually your {@link android.app.Application} or {@link 
       android.app.Activity} object. 
    resId - The resource id of the string resource to use. Can be formatted text. 
    duration - How long to display the message. Either {@link #LENGTH_SHORT} or {@link 
       #LENGTH_LONG} 

*android.widget.Toast.setDuration(int)*

public void setDuration(int duration)

Set how long to show the view for. 



*android.widget.Toast.setGravity(int,int,int)*

public void setGravity(
  int gravity,
  int xOffset,
  int yOffset)

Set the location at which the notification should appear on the screen. 



*android.widget.Toast.setMargin(float,float)*

public void setMargin(
  float horizontalMargin,
  float verticalMargin)

Set the margins of the view. 


    horizontalMargin - The horizontal margin, in percentage of the container width, between the 
       container's edges and the notification 
    verticalMargin - The vertical margin, in percentage of the container height, between the 
       container's edges and the notification 

*android.widget.Toast.setText(CharSequence)*

public void setText(java.lang.CharSequence s)

Update the text in a Toast that was previously created using one of the 
makeText() methods. 


    s - The new text for the Toast. 

*android.widget.Toast.setText(int)*

public void setText(int resId)

Update the text in a Toast that was previously created using one of the 
makeText() methods. 


    resId - The new text for the Toast. 

*android.widget.Toast.setView(View)*

public void setView(android.view.View view)

Set the view to show. 



*android.widget.Toast.show()*

public void show()

Show the view for the specified duration. 




