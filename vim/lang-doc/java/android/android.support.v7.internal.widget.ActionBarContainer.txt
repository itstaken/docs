*android.support.v7.internal.widget.ActionBarContainer* *ActionBarContainer* Thi

public class ActionBarContainer
  extends    |FrameLayout|

|android.support.v7.internal.widget.ActionBarContainer_Description|
|android.support.v7.internal.widget.ActionBarContainer_Fields|
|android.support.v7.internal.widget.ActionBarContainer_Constructors|
|android.support.v7.internal.widget.ActionBarContainer_Methods|

================================================================================

*android.support.v7.internal.widget.ActionBarContainer_Constructors*
|android.support.v7.internal.widget.ActionBarContainer(Context)|
|android.support.v7.internal.widget.ActionBarContainer(Context,AttributeSet)|

*android.support.v7.internal.widget.ActionBarContainer_Methods*
|android.support.v7.internal.widget.ActionBarContainer.drawableStateChanged()|
|android.support.v7.internal.widget.ActionBarContainer.getTabContainer()|
|android.support.v7.internal.widget.ActionBarContainer.onDraw(Canvas)|
|android.support.v7.internal.widget.ActionBarContainer.onFinishInflate()|
|android.support.v7.internal.widget.ActionBarContainer.onHoverEvent(MotionEvent)|
|android.support.v7.internal.widget.ActionBarContainer.onInterceptTouchEvent(MotionEvent)|
|android.support.v7.internal.widget.ActionBarContainer.onLayout(boolean,int,int,int,int)|
|android.support.v7.internal.widget.ActionBarContainer.onMeasure(int,int)|
|android.support.v7.internal.widget.ActionBarContainer.onTouchEvent(MotionEvent)|
|android.support.v7.internal.widget.ActionBarContainer.setPrimaryBackground(Drawable)|
|android.support.v7.internal.widget.ActionBarContainer.setSplitBackground(Drawable)|
|android.support.v7.internal.widget.ActionBarContainer.setStackedBackground(Drawable)|
|android.support.v7.internal.widget.ActionBarContainer.setTabContainer(ScrollingTabContainerView)|
|android.support.v7.internal.widget.ActionBarContainer.setTransitioning(boolean)|
|android.support.v7.internal.widget.ActionBarContainer.setVisibility(int)|
|android.support.v7.internal.widget.ActionBarContainer.startActionModeForChild(View,ActionMode.Callback)|
|android.support.v7.internal.widget.ActionBarContainer.verifyDrawable(Drawable)|

*android.support.v7.internal.widget.ActionBarContainer_Description*

This class acts as a container for the action bar view and action mode context 
views. It applies special styles as needed to help handle animated transitions 
between them. 



*android.support.v7.internal.widget.ActionBarContainer(Context)*

public ActionBarContainer(Context context)




*android.support.v7.internal.widget.ActionBarContainer(Context,AttributeSet)*

public ActionBarContainer(
  Context context,
  AttributeSet attrs)




*android.support.v7.internal.widget.ActionBarContainer.drawableStateChanged()*

protected void drawableStateChanged()





*android.support.v7.internal.widget.ActionBarContainer.getTabContainer()*

public View getTabContainer()





*android.support.v7.internal.widget.ActionBarContainer.onDraw(Canvas)*

public void onDraw(Canvas canvas)





*android.support.v7.internal.widget.ActionBarContainer.onFinishInflate()*

public void onFinishInflate()





*android.support.v7.internal.widget.ActionBarContainer.onHoverEvent(MotionEvent)*

public boolean onHoverEvent(MotionEvent ev)





*android.support.v7.internal.widget.ActionBarContainer.onInterceptTouchEvent(MotionEvent)*

public boolean onInterceptTouchEvent(MotionEvent ev)





*android.support.v7.internal.widget.ActionBarContainer.onLayout(boolean,int,int,int,int)*

public void onLayout(
  boolean changed,
  int l,
  int t,
  int r,
  int b)





*android.support.v7.internal.widget.ActionBarContainer.onMeasure(int,int)*

public void onMeasure(
  int widthMeasureSpec,
  int heightMeasureSpec)





*android.support.v7.internal.widget.ActionBarContainer.onTouchEvent(MotionEvent)*

public boolean onTouchEvent(MotionEvent ev)





*android.support.v7.internal.widget.ActionBarContainer.setPrimaryBackground(Drawable)*

public void setPrimaryBackground(Drawable bg)





*android.support.v7.internal.widget.ActionBarContainer.setSplitBackground(Drawable)*

public void setSplitBackground(Drawable bg)





*android.support.v7.internal.widget.ActionBarContainer.setStackedBackground(Drawable)*

public void setStackedBackground(Drawable bg)





*android.support.v7.internal.widget.ActionBarContainer.setTabContainer(ScrollingTabContainerView)*

public void setTabContainer(android.support.v7.internal.widget.ScrollingTabContainerView tabView)





*android.support.v7.internal.widget.ActionBarContainer.setTransitioning(boolean)*

public void setTransitioning(boolean isTransitioning)

Set the action bar into a "transitioning" state. While transitioning the bar 
will block focus and touch from all of its descendants. This prevents the user 
from interacting with the bar while it is animating in or out. 


    isTransitioning - true if the bar is currently transitioning, false otherwise. 

*android.support.v7.internal.widget.ActionBarContainer.setVisibility(int)*

public void setVisibility(int visibility)





*android.support.v7.internal.widget.ActionBarContainer.startActionModeForChild(View,ActionMode.Callback)*

public |android.support.v7.view.ActionMode| startActionModeForChild(
  View child,
  android.support.v7.view.ActionMode.Callback callback)





*android.support.v7.internal.widget.ActionBarContainer.verifyDrawable(Drawable)*

protected boolean verifyDrawable(Drawable who)






