*android.support.v7.app.ActionBarActivity* *ActionBarActivity* Base class for ac

public class ActionBarActivity
  extends    |FragmentActivity|
  implements |android.support.v7.app.ActionBar.Callback|

|android.support.v7.app.ActionBarActivity_Description|
|android.support.v7.app.ActionBarActivity_Fields|
|android.support.v7.app.ActionBarActivity_Constructors|
|android.support.v7.app.ActionBarActivity_Methods|

================================================================================

*android.support.v7.app.ActionBarActivity_Constructors*
|android.support.v7.app.ActionBarActivity()|

*android.support.v7.app.ActionBarActivity_Methods*
|android.support.v7.app.ActionBarActivity.addContentView(View,ViewGroup.LayoutParams)|
|android.support.v7.app.ActionBarActivity.getDrawerToggleDelegate()|
|android.support.v7.app.ActionBarActivity.getMenuInflater()|
|android.support.v7.app.ActionBarActivity.getSupportActionBar()|Support library
|android.support.v7.app.ActionBarActivity.getSupportParentActivityIntent()|Obta
|android.support.v7.app.ActionBarActivity.onBackPressed()|
|android.support.v7.app.ActionBarActivity.onConfigurationChanged(Configuration)|
|android.support.v7.app.ActionBarActivity.onContentChanged()|Use#onSupportConte
|android.support.v7.app.ActionBarActivity.onCreate(Bundle)|
|android.support.v7.app.ActionBarActivity.onCreatePanelMenu(int,Menu)|
|android.support.v7.app.ActionBarActivity.onCreatePanelView(int)|
|android.support.v7.app.ActionBarActivity.onCreateSupportNavigateUpTaskStack(TaskStackBuilder)|
|android.support.v7.app.ActionBarActivity.onMenuItemSelected(int,android.view.MenuItem)|
|android.support.v7.app.ActionBarActivity.onPostResume()|
|android.support.v7.app.ActionBarActivity.onPrepareOptionsPanel(View,Menu)|
|android.support.v7.app.ActionBarActivity.onPreparePanel(int,View,Menu)|
|android.support.v7.app.ActionBarActivity.onPrepareSupportNavigateUpTaskStack(TaskStackBuilder)|
|android.support.v7.app.ActionBarActivity.onStop()|
|android.support.v7.app.ActionBarActivity.onSupportActionModeFinished(ActionMode)|
|android.support.v7.app.ActionBarActivity.onSupportActionModeStarted(ActionMode)|
|android.support.v7.app.ActionBarActivity.onSupportContentChanged()|This hook i
|android.support.v7.app.ActionBarActivity.onSupportNavigateUp()|This method is 
|android.support.v7.app.ActionBarActivity.onTitleChanged(CharSequence,int)|
|android.support.v7.app.ActionBarActivity.setContentView(int)|
|android.support.v7.app.ActionBarActivity.setContentView(View)|
|android.support.v7.app.ActionBarActivity.setContentView(View,ViewGroup.LayoutParams)|
|android.support.v7.app.ActionBarActivity.setSupportProgress(int)|Support libra
|android.support.v7.app.ActionBarActivity.setSupportProgressBarIndeterminate(boolean)|
|android.support.v7.app.ActionBarActivity.setSupportProgressBarIndeterminateVisibility(boolean)|
|android.support.v7.app.ActionBarActivity.setSupportProgressBarVisibility(boolean)|
|android.support.v7.app.ActionBarActivity.startSupportActionMode(ActionMode.Callback)|
|android.support.v7.app.ActionBarActivity.supportInvalidateOptionsMenu()|
|android.support.v7.app.ActionBarActivity.supportNavigateUpTo(Intent)|Navigate 
|android.support.v7.app.ActionBarActivity.supportRequestWindowFeature(int)|Enab
|android.support.v7.app.ActionBarActivity.supportShouldUpRecreateTask(Intent)|R

*android.support.v7.app.ActionBarActivity_Description*

Base class for activities that use the <a 
href="tools/extras/support-library.html">support library action bar features. 

You can add an (|android.support.v7.app.ActionBar|) to your activity when 
running on API level 7 or higher by extending this class for your activity and 
setting the activity theme to 
Theme.AppCompat(|android.support.v7.appcompat.R.style|) or a similar theme. 

Developer Guides 

For information about how to use the action bar, including how to add action 
items, navigation modes and more, read the <a 
href="guide/topics/ui/actionbar.html">Action Bar API guide. 



*android.support.v7.app.ActionBarActivity()*

public ActionBarActivity()




*android.support.v7.app.ActionBarActivity.addContentView(View,ViewGroup.LayoutParams)*

public void addContentView(
  View view,
  ViewGroup.LayoutParams params)





*android.support.v7.app.ActionBarActivity.getDrawerToggleDelegate()*

public final ActionBarDrawerToggle.Delegate getDrawerToggleDelegate()





*android.support.v7.app.ActionBarActivity.getMenuInflater()*

public MenuInflater getMenuInflater()





*android.support.v7.app.ActionBarActivity.getSupportActionBar()*

public |android.support.v7.app.ActionBar| getSupportActionBar()

Support library version of (|Activity|) . 

Retrieve a reference to this activity's ActionBar. 



    Returns: The Activity's ActionBar, or null if it does not have one. 

*android.support.v7.app.ActionBarActivity.getSupportParentActivityIntent()*

public Intent getSupportParentActivityIntent()

Obtain an (|Intent|) that will launch an explicit target activity specified by 
sourceActivity's (|NavUtils|) <meta-data> element in the application's 
manifest. If the device is running Jellybean or newer, the 
android:parentActivityName attribute will be preferred if it is present. 



    Returns: a new Intent targeting the defined parent activity of sourceActivity 

*android.support.v7.app.ActionBarActivity.onBackPressed()*

public void onBackPressed()





*android.support.v7.app.ActionBarActivity.onConfigurationChanged(Configuration)*

public void onConfigurationChanged(Configuration newConfig)





*android.support.v7.app.ActionBarActivity.onContentChanged()*

public final void onContentChanged()

Use (|android.support.v7.app.ActionBarActivity|) instead. 



*android.support.v7.app.ActionBarActivity.onCreate(Bundle)*

protected void onCreate(Bundle savedInstanceState)





*android.support.v7.app.ActionBarActivity.onCreatePanelMenu(int,Menu)*

public boolean onCreatePanelMenu(
  int featureId,
  Menu menu)





*android.support.v7.app.ActionBarActivity.onCreatePanelView(int)*

public View onCreatePanelView(int featureId)





*android.support.v7.app.ActionBarActivity.onCreateSupportNavigateUpTaskStack(TaskStackBuilder)*

public void onCreateSupportNavigateUpTaskStack(TaskStackBuilder builder)

Support version of (|android.support.v7.app.ActionBarActivity|) . This method 
will be called on all platform versions. 

Define the synthetic task stack that will be generated during Up navigation 
from a different task. 

The default implementation of this method adds the parent chain of this 
activity as specified in the manifest to the supplied (|TaskStackBuilder|) . 
Applications may choose to override this method to construct the desired task 
stack in a different way. 

This method will be invoked by the default implementation of 
(|android.support.v7.app.ActionBarActivity|) if 
(|android.support.v7.app.ActionBarActivity|) returns true when supplied with 
the intent returned by (|android.support.v7.app.ActionBarActivity|) . 

Applications that wish to supply extra Intent parameters to the parent stack 
defined by the manifest should override 
(|android.support.v7.app.ActionBarActivity|) . 


    builder - An empty TaskStackBuilder - the application should add intents representing the 
       desired task stack 

*android.support.v7.app.ActionBarActivity.onMenuItemSelected(int,android.view.MenuItem)*

public final boolean onMenuItemSelected(
  int featureId,
  android.view.MenuItem item)





*android.support.v7.app.ActionBarActivity.onPostResume()*

protected void onPostResume()





*android.support.v7.app.ActionBarActivity.onPrepareOptionsPanel(View,Menu)*

protected boolean onPrepareOptionsPanel(
  View view,
  Menu menu)





*android.support.v7.app.ActionBarActivity.onPreparePanel(int,View,Menu)*

public boolean onPreparePanel(
  int featureId,
  View view,
  Menu menu)





*android.support.v7.app.ActionBarActivity.onPrepareSupportNavigateUpTaskStack(TaskStackBuilder)*

public void onPrepareSupportNavigateUpTaskStack(TaskStackBuilder builder)

Support version of (|android.support.v7.app.ActionBarActivity|) . This method 
will be called on all platform versions. 

Prepare the synthetic task stack that will be generated during Up navigation 
from a different task. 

This method receives the (|TaskStackBuilder|) with the constructed series of 
Intents as generated by (|android.support.v7.app.ActionBarActivity|) . If any 
extra data should be added to these intents before launching the new task, the 
application should override this method and add that data here. 


    builder - A TaskStackBuilder that has been populated with Intents by 
       onCreateNavigateUpTaskStack. 

*android.support.v7.app.ActionBarActivity.onStop()*

protected void onStop()





*android.support.v7.app.ActionBarActivity.onSupportActionModeFinished(ActionMode)*

public void onSupportActionModeFinished(android.support.v7.view.ActionMode mode)

Notifies the activity that a support action mode has finished. Activity 
subclasses overriding this method should call the superclass implementation. 


    mode - The action mode that just finished. 

*android.support.v7.app.ActionBarActivity.onSupportActionModeStarted(ActionMode)*

public void onSupportActionModeStarted(android.support.v7.view.ActionMode mode)

Notifies the Activity that a support action mode has been started. Activity 
subclasses overriding this method should call the superclass implementation. 


    mode - The new action mode. 

*android.support.v7.app.ActionBarActivity.onSupportContentChanged()*

public void onSupportContentChanged()

This hook is called whenever the content view of the screen changes. 



*android.support.v7.app.ActionBarActivity.onSupportNavigateUp()*

public boolean onSupportNavigateUp()

This method is called whenever the user chooses to navigate Up within your 
application's activity hierarchy from the action bar. 

If a parent was specified in the manifest for this activity or an 
activity-alias to it, default Up navigation will be handled automatically. See 
(|android.support.v7.app.ActionBarActivity|) for how to specify the parent. If 
any activity along the parent chain requires extra Intent arguments, the 
Activity subclass should override the method 
(|android.support.v7.app.ActionBarActivity|) to supply those arguments. 

See <a href="guide/topics/fundamentals/tasks-and-back-stack.html">Tasks and 
Back Stack from the developer guide and <a 
href="design/patterns/navigation.html">Navigation from the design guide for 
more information about navigating within your app. 

See the (|TaskStackBuilder|) class and the Activity methods 
(|android.support.v7.app.ActionBarActivity|) , 
(|android.support.v7.app.ActionBarActivity|) , and 
(|android.support.v7.app.ActionBarActivity|) for help implementing custom Up 
navigation. 



    Returns: true if Up navigation completed successfully and this Activity was finished, 
             false otherwise. 

*android.support.v7.app.ActionBarActivity.onTitleChanged(CharSequence,int)*

protected void onTitleChanged(
  java.lang.CharSequence title,
  int color)





*android.support.v7.app.ActionBarActivity.setContentView(int)*

public void setContentView(int layoutResID)





*android.support.v7.app.ActionBarActivity.setContentView(View)*

public void setContentView(View view)





*android.support.v7.app.ActionBarActivity.setContentView(View,ViewGroup.LayoutParams)*

public void setContentView(
  View view,
  ViewGroup.LayoutParams params)





*android.support.v7.app.ActionBarActivity.setSupportProgress(int)*

public void setSupportProgress(int progress)

Support library version of (|Activity|) . 

Sets the progress for the progress bars in the title. 

In order for the progress bar to be shown, the feature must be requested via 
(|android.support.v7.app.ActionBarActivity|) . 


    progress - The progress for the progress bar. Valid ranges are from 0 to 10000 (both 
       inclusive). If 10000 is given, the progress bar will be completely 
       filled and will fade out. 

*android.support.v7.app.ActionBarActivity.setSupportProgressBarIndeterminate(boolean)*

public void setSupportProgressBarIndeterminate(boolean indeterminate)

Support library version of (|Activity|) Sets whether the horizontal progress 
bar in the title should be indeterminate (the circular is always 
indeterminate). 

In order for the progress bar to be shown, the feature must be requested via 
(|android.support.v7.app.ActionBarActivity|) . 


    indeterminate - Whether the horizontal progress bar should be indeterminate. 

*android.support.v7.app.ActionBarActivity.setSupportProgressBarIndeterminateVisibility(boolean)*

public void setSupportProgressBarIndeterminateVisibility(boolean visible)

Support library version of (|Activity|) Sets the visibility of the 
indeterminate progress bar in the title. 

In order for the progress bar to be shown, the feature must be requested via 
(|android.support.v7.app.ActionBarActivity|) . 


    visible - Whether to show the progress bars in the title. 

*android.support.v7.app.ActionBarActivity.setSupportProgressBarVisibility(boolean)*

public void setSupportProgressBarVisibility(boolean visible)

Support library version of (|Activity|) Sets the visibility of the progress bar 
in the title. 

In order for the progress bar to be shown, the feature must be requested via 
(|android.support.v7.app.ActionBarActivity|) . 


    visible - Whether to show the progress bars in the title. 

*android.support.v7.app.ActionBarActivity.startSupportActionMode(ActionMode.Callback)*

public |android.support.v7.view.ActionMode| startSupportActionMode(android.support.v7.view.ActionMode.Callback callback)





*android.support.v7.app.ActionBarActivity.supportInvalidateOptionsMenu()*

public void supportInvalidateOptionsMenu()





*android.support.v7.app.ActionBarActivity.supportNavigateUpTo(Intent)*

public void supportNavigateUpTo(Intent upIntent)

Navigate from sourceActivity to the activity specified by upIntent, finishing 
sourceActivity in the process. upIntent will have the flag (|Intent|) set by 
this method, along with any others required for proper up navigation as 
outlined in the Android Design Guide. 

This method should be used when performing up navigation from within the same 
task as the destination. If up navigation should cross tasks in some cases, see 
(|android.support.v7.app.ActionBarActivity|) . 


    upIntent - An intent representing the target destination for up navigation 

*android.support.v7.app.ActionBarActivity.supportRequestWindowFeature(int)*

public boolean supportRequestWindowFeature(int featureId)

Enable extended support library window features. 

This is a convenience for calling 
getWindow().requestFeature()(|android.view.Window|) . 


    featureId - The desired feature as defined in {@link android.view.Window} or {@link 
       WindowCompat}. 

    Returns: Returns true if the requested feature is supported and now enabled. 

*android.support.v7.app.ActionBarActivity.supportShouldUpRecreateTask(Intent)*

public boolean supportShouldUpRecreateTask(Intent targetIntent)

Returns true if sourceActivity should recreate the task when navigating 'up' by 
using targetIntent. 

If this method returns false the app can trivially call 
(|android.support.v7.app.ActionBarActivity|) using the same parameters to 
correctly perform up navigation. If this method returns false, the app should 
synthesize a new task stack by using (|TaskStackBuilder|) or another similar 
mechanism to perform up navigation. 


    targetIntent - An intent representing the target destination for up navigation 

    Returns: true if navigating up should recreate a new task stack, false if the same task 
             should be used for the destination 


