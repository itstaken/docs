*android.media.MediaExtractor* *MediaExtractor* 

public final class MediaExtractor
  extends    |java.lang.Object|

|android.media.MediaExtractor_Description|
|android.media.MediaExtractor_Fields|
|android.media.MediaExtractor_Constructors|
|android.media.MediaExtractor_Methods|

================================================================================

*android.media.MediaExtractor_Fields*
|int_android.media.MediaExtractor.SAMPLE_FLAG_ENCRYPTED|
|int_android.media.MediaExtractor.SAMPLE_FLAG_SYNC|
|int_android.media.MediaExtractor.SEEK_TO_CLOSEST_SYNC|
|int_android.media.MediaExtractor.SEEK_TO_NEXT_SYNC|
|int_android.media.MediaExtractor.SEEK_TO_PREVIOUS_SYNC|

*android.media.MediaExtractor_Constructors*
|android.media.MediaExtractor()|

*android.media.MediaExtractor_Methods*
|android.media.MediaExtractor.advance()|
|android.media.MediaExtractor.finalize()|
|android.media.MediaExtractor.getCachedDuration()|
|android.media.MediaExtractor.getPsshInfo()|
|android.media.MediaExtractor.getSampleCryptoInfo(MediaCodec.CryptoInfo)|
|android.media.MediaExtractor.getSampleFlags()|
|android.media.MediaExtractor.getSampleTime()|
|android.media.MediaExtractor.getSampleTrackIndex()|
|android.media.MediaExtractor.getTrackCount()|
|android.media.MediaExtractor.getTrackFormat(int)|
|android.media.MediaExtractor.hasCacheReachedEndOfStream()|
|android.media.MediaExtractor.readSampleData(ByteBuffer,int)|
|android.media.MediaExtractor.release()|
|android.media.MediaExtractor.seekTo(long,int)|
|android.media.MediaExtractor.selectTrack(int)|
|android.media.MediaExtractor.setDataSource(Context,Uri,Map<String,String>)|
|android.media.MediaExtractor.setDataSource(FileDescriptor)|
|android.media.MediaExtractor.setDataSource(FileDescriptor,long,long)|
|android.media.MediaExtractor.setDataSource(String)|
|android.media.MediaExtractor.setDataSource(String,Map<String,String>)|
|android.media.MediaExtractor.unselectTrack(int)|

*android.media.MediaExtractor_Description*





*int_android.media.MediaExtractor.SAMPLE_FLAG_ENCRYPTED*




*int_android.media.MediaExtractor.SAMPLE_FLAG_SYNC*




*int_android.media.MediaExtractor.SEEK_TO_CLOSEST_SYNC*




*int_android.media.MediaExtractor.SEEK_TO_NEXT_SYNC*




*int_android.media.MediaExtractor.SEEK_TO_PREVIOUS_SYNC*





*android.media.MediaExtractor()*

public MediaExtractor()




*android.media.MediaExtractor.advance()*

public native boolean advance()





*android.media.MediaExtractor.finalize()*

protected void finalize()





*android.media.MediaExtractor.getCachedDuration()*

public native long getCachedDuration()





*android.media.MediaExtractor.getPsshInfo()*

public |java.util.Map|<UUID,byte[]> getPsshInfo()





*android.media.MediaExtractor.getSampleCryptoInfo(MediaCodec.CryptoInfo)*

public native boolean getSampleCryptoInfo(android.media.MediaCodec.CryptoInfo info)





*android.media.MediaExtractor.getSampleFlags()*

public native int getSampleFlags()





*android.media.MediaExtractor.getSampleTime()*

public native long getSampleTime()





*android.media.MediaExtractor.getSampleTrackIndex()*

public native int getSampleTrackIndex()





*android.media.MediaExtractor.getTrackCount()*

public final native int getTrackCount()





*android.media.MediaExtractor.getTrackFormat(int)*

public |android.media.MediaFormat| getTrackFormat(int index)





*android.media.MediaExtractor.hasCacheReachedEndOfStream()*

public native boolean hasCacheReachedEndOfStream()





*android.media.MediaExtractor.readSampleData(ByteBuffer,int)*

public native int readSampleData(
  java.nio.ByteBuffer byteBuf,
  int offset)





*android.media.MediaExtractor.release()*

public final native void release()





*android.media.MediaExtractor.seekTo(long,int)*

public native void seekTo(
  long timeUs,
  int mode)





*android.media.MediaExtractor.selectTrack(int)*

public native void selectTrack(int index)





*android.media.MediaExtractor.setDataSource(Context,Uri,Map<String,String>)*

public final void setDataSource(
  android.content.Context context,
  android.net.Uri uri,
  java.util.Map<java.lang.String, java.lang.String> headers)
  throws |java.io.IOException|
         




*android.media.MediaExtractor.setDataSource(FileDescriptor)*

public final void setDataSource(java.io.FileDescriptor fd)
  throws |java.io.IOException|
         




*android.media.MediaExtractor.setDataSource(FileDescriptor,long,long)*

public final native void setDataSource(
  java.io.FileDescriptor fd,
  long offset,
  long length)
  throws |java.io.IOException|
         




*android.media.MediaExtractor.setDataSource(String)*

public final void setDataSource(java.lang.String path)
  throws |java.io.IOException|
         




*android.media.MediaExtractor.setDataSource(String,Map<String,String>)*

public final void setDataSource(
  java.lang.String path,
  java.util.Map<java.lang.String, java.lang.String> headers)
  throws |java.io.IOException|
         




*android.media.MediaExtractor.unselectTrack(int)*

public native void unselectTrack(int index)






