*android.view.ScaleGestureDetector.OnScaleGestureListener* *ScaleGestureDetector.OnScaleGestureListener* 

public static interface interface ScaleGestureDetector.OnScaleGestureListener


|android.view.ScaleGestureDetector.OnScaleGestureListener_Description|
|android.view.ScaleGestureDetector.OnScaleGestureListener_Fields|
|android.view.ScaleGestureDetector.OnScaleGestureListener_Constructors|
|android.view.ScaleGestureDetector.OnScaleGestureListener_Methods|

================================================================================

*android.view.ScaleGestureDetector.OnScaleGestureListener_Methods*
|android.view.ScaleGestureDetector.OnScaleGestureListener.onScale(ScaleGestureDetector)|
|android.view.ScaleGestureDetector.OnScaleGestureListener.onScaleBegin(ScaleGestureDetector)|
|android.view.ScaleGestureDetector.OnScaleGestureListener.onScaleEnd(ScaleGestureDetector)|

*android.view.ScaleGestureDetector.OnScaleGestureListener_Description*

The listener for receiving notifications when gestures occur. If you want to 
listen for all the different gestures then implement this interface. If you 
only want to listen for a subset it might be easier to extend 
(|android.view.ScaleGestureDetector.SimpleOnScaleGestureListener|) . 

An application will receive events in the following order: 

One (|android.view.ScaleGestureDetector.OnScaleGestureListener|) Zero or more 
(|android.view.ScaleGestureDetector.OnScaleGestureListener|) One 
(|android.view.ScaleGestureDetector.OnScaleGestureListener|) 



*android.view.ScaleGestureDetector.OnScaleGestureListener.onScale(ScaleGestureDetector)*

public boolean onScale(android.view.ScaleGestureDetector detector)

Responds to scaling events for a gesture in progress. Reported by pointer 
motion. 


    detector - The detector reporting the event - use this to retrieve extended info about 
       event state. 

    Returns: Whether or not the detector should consider this event as handled. If an event 
             was not handled, the detector will continue to accumulate movement 
             until an event is handled. This can be useful if an application, 
             for example, only wants to update scaling factors if the change is 
             greater than 0.01. 

*android.view.ScaleGestureDetector.OnScaleGestureListener.onScaleBegin(ScaleGestureDetector)*

public boolean onScaleBegin(android.view.ScaleGestureDetector detector)

Responds to the beginning of a scaling gesture. Reported by new pointers going 
down. 


    detector - The detector reporting the event - use this to retrieve extended info about 
       event state. 

    Returns: Whether or not the detector should continue recognizing this gesture. For 
             example, if a gesture is beginning with a focal point outside of a 
             region where it makes sense, onScaleBegin() may return false to 
             ignore the rest of the gesture. 

*android.view.ScaleGestureDetector.OnScaleGestureListener.onScaleEnd(ScaleGestureDetector)*

public void onScaleEnd(android.view.ScaleGestureDetector detector)

Responds to the end of a scale gesture. Reported by existing pointers going up. 

Once a scale has ended, (|android.view.ScaleGestureDetector|) and 
(|android.view.ScaleGestureDetector|) will return focal point of the pointers 
remaining on the screen. 


    detector - The detector reporting the event - use this to retrieve extended info about 
       event state. 


