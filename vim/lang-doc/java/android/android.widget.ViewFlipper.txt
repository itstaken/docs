*android.widget.ViewFlipper* *ViewFlipper* SimpleViewAnimatorthat will animate b

public class ViewFlipper
  extends    |android.widget.ViewAnimator|

|android.widget.ViewFlipper_Description|
|android.widget.ViewFlipper_Fields|
|android.widget.ViewFlipper_Constructors|
|android.widget.ViewFlipper_Methods|

================================================================================

*android.widget.ViewFlipper_Constructors*
|android.widget.ViewFlipper(Context)|
|android.widget.ViewFlipper(Context,AttributeSet)|

*android.widget.ViewFlipper_Methods*
|android.widget.ViewFlipper.isAutoStart()|Returns true if this view automatical
|android.widget.ViewFlipper.isFlipping()|Returns true if the child views are fl
|android.widget.ViewFlipper.onAttachedToWindow()|
|android.widget.ViewFlipper.onDetachedFromWindow()|
|android.widget.ViewFlipper.onInitializeAccessibilityEvent(AccessibilityEvent)|
|android.widget.ViewFlipper.onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo)|
|android.widget.ViewFlipper.onWindowVisibilityChanged(int)|
|android.widget.ViewFlipper.setAutoStart(boolean)|Set if this view automaticall
|android.widget.ViewFlipper.setFlipInterval(int)|How long to wait before flippi
|android.widget.ViewFlipper.startFlipping()|Start a timer to cycle through chil
|android.widget.ViewFlipper.stopFlipping()|No more flips

*android.widget.ViewFlipper_Description*

Simple (|android.widget.ViewAnimator|) that will animate between two or more 
views that have been added to it. Only one child is shown at a time. If 
requested, can automatically flip between each child at a regular interval. 



*android.widget.ViewFlipper(Context)*

public ViewFlipper(android.content.Context context)




*android.widget.ViewFlipper(Context,AttributeSet)*

public ViewFlipper(
  android.content.Context context,
  android.util.AttributeSet attrs)




*android.widget.ViewFlipper.isAutoStart()*

public boolean isAutoStart()

Returns true if this view automatically calls (|android.widget.ViewFlipper|) 
when it becomes attached to a window. 



*android.widget.ViewFlipper.isFlipping()*

public boolean isFlipping()

Returns true if the child views are flipping. 



*android.widget.ViewFlipper.onAttachedToWindow()*

protected void onAttachedToWindow()





*android.widget.ViewFlipper.onDetachedFromWindow()*

protected void onDetachedFromWindow()





*android.widget.ViewFlipper.onInitializeAccessibilityEvent(AccessibilityEvent)*

public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent event)





*android.widget.ViewFlipper.onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo)*

public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo info)





*android.widget.ViewFlipper.onWindowVisibilityChanged(int)*

protected void onWindowVisibilityChanged(int visibility)





*android.widget.ViewFlipper.setAutoStart(boolean)*

public void setAutoStart(boolean autoStart)

Set if this view automatically calls (|android.widget.ViewFlipper|) when it 
becomes attached to a window. 



*android.widget.ViewFlipper.setFlipInterval(int)*

public void setFlipInterval(int milliseconds)

How long to wait before flipping to the next view 


    milliseconds - time in milliseconds 

*android.widget.ViewFlipper.startFlipping()*

public void startFlipping()

Start a timer to cycle through child views 



*android.widget.ViewFlipper.stopFlipping()*

public void stopFlipping()

No more flips 




