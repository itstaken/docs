*android.widget.Filter* *Filter* A filter constrains data with a filtering patte

public abstract class Filter
  extends    |java.lang.Object|

|android.widget.Filter_Description|
|android.widget.Filter_Fields|
|android.widget.Filter_Constructors|
|android.widget.Filter_Methods|

================================================================================

*android.widget.Filter_Constructors*
|android.widget.Filter()|Creates a new asynchronous filter.

*android.widget.Filter_Methods*
|android.widget.Filter.convertResultToString(Object)|Converts a value from the 
|android.widget.Filter.filter(CharSequence)|Starts an asynchronous filtering op
|android.widget.Filter.filter(CharSequence,Filter.FilterListener)|Starts an asy
|android.widget.Filter.performFiltering(CharSequence)|Invoked in a worker threa
|android.widget.Filter.publishResults(CharSequence,Filter.FilterResults)|Invoke
|android.widget.Filter.setDelayer(Filter.Delayer)|Provide an interface that dec

*android.widget.Filter_Description*

A filter constrains data with a filtering pattern. 

Filters are usually created by (|android.widget.Filterable|) classes. 

Filtering operations performed by calling (|android.widget.Filter|) or 
(|android.widget.Filter|) are performed asynchronously. When these methods are 
called, a filtering request is posted in a request queue and processed later. 
Any call to one of these methods will cancel any previous non-executed 
filtering request. 



*android.widget.Filter()*

public Filter()

Creates a new asynchronous filter. 


*android.widget.Filter.convertResultToString(Object)*

public |java.lang.CharSequence| convertResultToString(java.lang.Object resultValue)

Converts a value from the filtered set into a CharSequence. Subclasses should 
override this method to convert their results. The default implementation 
returns an empty String for null values or the default String representation of 
the value. 


    resultValue - the value to convert to a CharSequence 

    Returns: a CharSequence representing the value 

*android.widget.Filter.filter(CharSequence)*

public final void filter(java.lang.CharSequence constraint)

Starts an asynchronous filtering operation. Calling this method cancels all 
previous non-executed filtering requests and posts a new filtering request that 
will be executed later. 


    constraint - the constraint used to filter the data 

*android.widget.Filter.filter(CharSequence,Filter.FilterListener)*

public final void filter(
  java.lang.CharSequence constraint,
  android.widget.Filter.FilterListener listener)

Starts an asynchronous filtering operation. Calling this method cancels all 
previous non-executed filtering requests and posts a new filtering request that 
will be executed later. 

Upon completion, the listener is notified. 


    constraint - the constraint used to filter the data 
    listener - a listener notified upon completion of the operation 

*android.widget.Filter.performFiltering(CharSequence)*

protected abstract |android.widget.Filter.FilterResults| performFiltering(java.lang.CharSequence constraint)

Invoked in a worker thread to filter the data according to the constraint. 
Subclasses must implement this method to perform the filtering operation. 
Results computed by the filtering operation must be returned as a 
(|android.widget.Filter.FilterResults|) that will then be published in the UI 
thread through (|android.widget.Filter|) . 

Contract: When the constraint is null, the original data must be restored. 


    constraint - the constraint used to filter the data 

    Returns: the results of the filtering operation 

*android.widget.Filter.publishResults(CharSequence,Filter.FilterResults)*

protected abstract void publishResults(
  java.lang.CharSequence constraint,
  android.widget.Filter.FilterResults results)

Invoked in the UI thread to publish the filtering results in the user 
interface. Subclasses must implement this method to display the results 
computed in (|android.widget.Filter|) . 


    constraint - the constraint used to filter the data 
    results - the results of the filtering operation 

*android.widget.Filter.setDelayer(Filter.Delayer)*

public void setDelayer(android.widget.Filter.Delayer delayer)

Provide an interface that decides how long to delay the message for a given 
query. Useful for heuristics such as posting a delay for the delete key to 
avoid doing any work while the user holds down the delete key. 


    delayer - The delayer. 


