*android.graphics.Path* *Path* 

public class Path
  extends    |java.lang.Object|

|android.graphics.Path_Description|
|android.graphics.Path_Fields|
|android.graphics.Path_Constructors|
|android.graphics.Path_Methods|

================================================================================

*android.graphics.Path_Constructors*
|android.graphics.Path()|
|android.graphics.Path(Path)|

*android.graphics.Path_Methods*
|android.graphics.Path.addArc(RectF,float,float)|
|android.graphics.Path.addCircle(float,float,float,Path.Direction)|
|android.graphics.Path.addOval(RectF,Path.Direction)|
|android.graphics.Path.addPath(Path)|
|android.graphics.Path.addPath(Path,float,float)|
|android.graphics.Path.addPath(Path,Matrix)|
|android.graphics.Path.addRect(float,float,float,float,Path.Direction)|
|android.graphics.Path.addRect(RectF,Path.Direction)|
|android.graphics.Path.addRoundRect(RectF,float[],Path.Direction)|
|android.graphics.Path.addRoundRect(RectF,float,float,Path.Direction)|
|android.graphics.Path.arcTo(RectF,float,float)|
|android.graphics.Path.arcTo(RectF,float,float,boolean)|
|android.graphics.Path.close()|
|android.graphics.Path.computeBounds(RectF,boolean)|
|android.graphics.Path.cubicTo(float,float,float,float,float,float)|
|android.graphics.Path.finalize()|
|android.graphics.Path.getFillType()|
|android.graphics.Path.incReserve(int)|
|android.graphics.Path.isEmpty()|
|android.graphics.Path.isInverseFillType()|
|android.graphics.Path.isRect(RectF)|
|android.graphics.Path.lineTo(float,float)|
|android.graphics.Path.moveTo(float,float)|
|android.graphics.Path.offset(float,float)|
|android.graphics.Path.offset(float,float,Path)|
|android.graphics.Path.op(Path,Path.Op)|
|android.graphics.Path.op(Path,Path,Path.Op)|
|android.graphics.Path.quadTo(float,float,float,float)|
|android.graphics.Path.rCubicTo(float,float,float,float,float,float)|
|android.graphics.Path.reset()|
|android.graphics.Path.rewind()|
|android.graphics.Path.rLineTo(float,float)|
|android.graphics.Path.rMoveTo(float,float)|
|android.graphics.Path.rQuadTo(float,float,float,float)|
|android.graphics.Path.set(Path)|
|android.graphics.Path.setFillType(Path.FillType)|
|android.graphics.Path.setLastPoint(float,float)|
|android.graphics.Path.toggleInverseFillType()|
|android.graphics.Path.transform(Matrix)|
|android.graphics.Path.transform(Matrix,Path)|

*android.graphics.Path_Description*





*android.graphics.Path()*

public Path()




*android.graphics.Path(Path)*

public Path(android.graphics.Path src)




*android.graphics.Path.addArc(RectF,float,float)*

public void addArc(
  android.graphics.RectF oval,
  float startAngle,
  float sweepAngle)





*android.graphics.Path.addCircle(float,float,float,Path.Direction)*

public void addCircle(
  float x,
  float y,
  float radius,
  android.graphics.Path.Direction dir)





*android.graphics.Path.addOval(RectF,Path.Direction)*

public void addOval(
  android.graphics.RectF oval,
  android.graphics.Path.Direction dir)





*android.graphics.Path.addPath(Path)*

public void addPath(android.graphics.Path src)





*android.graphics.Path.addPath(Path,float,float)*

public void addPath(
  android.graphics.Path src,
  float dx,
  float dy)





*android.graphics.Path.addPath(Path,Matrix)*

public void addPath(
  android.graphics.Path src,
  android.graphics.Matrix matrix)





*android.graphics.Path.addRect(float,float,float,float,Path.Direction)*

public void addRect(
  float left,
  float top,
  float right,
  float bottom,
  android.graphics.Path.Direction dir)





*android.graphics.Path.addRect(RectF,Path.Direction)*

public void addRect(
  android.graphics.RectF rect,
  android.graphics.Path.Direction dir)





*android.graphics.Path.addRoundRect(RectF,float[],Path.Direction)*

public void addRoundRect(
  android.graphics.RectF rect,
  float[] radii,
  android.graphics.Path.Direction dir)





*android.graphics.Path.addRoundRect(RectF,float,float,Path.Direction)*

public void addRoundRect(
  android.graphics.RectF rect,
  float rx,
  float ry,
  android.graphics.Path.Direction dir)





*android.graphics.Path.arcTo(RectF,float,float)*

public void arcTo(
  android.graphics.RectF oval,
  float startAngle,
  float sweepAngle)





*android.graphics.Path.arcTo(RectF,float,float,boolean)*

public void arcTo(
  android.graphics.RectF oval,
  float startAngle,
  float sweepAngle,
  boolean forceMoveTo)





*android.graphics.Path.close()*

public void close()





*android.graphics.Path.computeBounds(RectF,boolean)*

public void computeBounds(
  android.graphics.RectF bounds,
  boolean exact)





*android.graphics.Path.cubicTo(float,float,float,float,float,float)*

public void cubicTo(
  float x1,
  float y1,
  float x2,
  float y2,
  float x3,
  float y3)





*android.graphics.Path.finalize()*

protected void finalize()
  throws |java.lang.Throwable|
         




*android.graphics.Path.getFillType()*

public |android.graphics.Path.FillType| getFillType()





*android.graphics.Path.incReserve(int)*

public void incReserve(int extraPtCount)





*android.graphics.Path.isEmpty()*

public boolean isEmpty()





*android.graphics.Path.isInverseFillType()*

public boolean isInverseFillType()





*android.graphics.Path.isRect(RectF)*

public boolean isRect(android.graphics.RectF rect)





*android.graphics.Path.lineTo(float,float)*

public void lineTo(
  float x,
  float y)





*android.graphics.Path.moveTo(float,float)*

public void moveTo(
  float x,
  float y)





*android.graphics.Path.offset(float,float)*

public void offset(
  float dx,
  float dy)





*android.graphics.Path.offset(float,float,Path)*

public void offset(
  float dx,
  float dy,
  android.graphics.Path dst)





*android.graphics.Path.op(Path,Path.Op)*

public boolean op(
  android.graphics.Path path,
  android.graphics.Path.Op op)





*android.graphics.Path.op(Path,Path,Path.Op)*

public boolean op(
  android.graphics.Path path1,
  android.graphics.Path path2,
  android.graphics.Path.Op op)





*android.graphics.Path.quadTo(float,float,float,float)*

public void quadTo(
  float x1,
  float y1,
  float x2,
  float y2)





*android.graphics.Path.rCubicTo(float,float,float,float,float,float)*

public void rCubicTo(
  float x1,
  float y1,
  float x2,
  float y2,
  float x3,
  float y3)





*android.graphics.Path.reset()*

public void reset()





*android.graphics.Path.rewind()*

public void rewind()





*android.graphics.Path.rLineTo(float,float)*

public void rLineTo(
  float dx,
  float dy)





*android.graphics.Path.rMoveTo(float,float)*

public void rMoveTo(
  float dx,
  float dy)





*android.graphics.Path.rQuadTo(float,float,float,float)*

public void rQuadTo(
  float dx1,
  float dy1,
  float dx2,
  float dy2)





*android.graphics.Path.set(Path)*

public void set(android.graphics.Path src)





*android.graphics.Path.setFillType(Path.FillType)*

public void setFillType(android.graphics.Path.FillType ft)





*android.graphics.Path.setLastPoint(float,float)*

public void setLastPoint(
  float dx,
  float dy)





*android.graphics.Path.toggleInverseFillType()*

public void toggleInverseFillType()





*android.graphics.Path.transform(Matrix)*

public void transform(android.graphics.Matrix matrix)





*android.graphics.Path.transform(Matrix,Path)*

public void transform(
  android.graphics.Matrix matrix,
  android.graphics.Path dst)






