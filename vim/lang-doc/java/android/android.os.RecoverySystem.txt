*android.os.RecoverySystem* *RecoverySystem* RecoverySystem contains methods for

public class RecoverySystem
  extends    |java.lang.Object|

|android.os.RecoverySystem_Description|
|android.os.RecoverySystem_Fields|
|android.os.RecoverySystem_Constructors|
|android.os.RecoverySystem_Methods|

================================================================================

*android.os.RecoverySystem_Constructors*
|android.os.RecoverySystem()|

*android.os.RecoverySystem_Methods*
|android.os.RecoverySystem.handleAftermath()|Called after booting to process an
|android.os.RecoverySystem.installPackage(Context,File)|Reboots the device in o
|android.os.RecoverySystem.rebootWipeCache(Context)|Reboot into the recovery sy
|android.os.RecoverySystem.rebootWipeUserData(Context)|Reboots the device and w
|android.os.RecoverySystem.verifyPackage(File,RecoverySystem.ProgressListener,File)|

*android.os.RecoverySystem_Description*

RecoverySystem contains methods for interacting with the Android recovery 
system (the separate partition that can be used to install system updates, wipe 
user data, etc.) 



*android.os.RecoverySystem()*

public RecoverySystem()




*android.os.RecoverySystem.handleAftermath()*

public static |java.lang.String| handleAftermath()

Called after booting to process and remove recovery-related files. 



    Returns: the log file from recovery, or null if none was found. 

*android.os.RecoverySystem.installPackage(Context,File)*

public static void installPackage(
  android.content.Context context,
  java.io.File packageFile)
  throws |java.io.IOException|
         
Reboots the device in order to install the given update package. Requires the 
(|android.Manifest.permission|) permission. 


    context - the Context to use 
    packageFile - the update package to install. Must be on a partition mountable by recovery. 
       (The set of partitions known to recovery may vary from device to device. 
       Generally, /cache and /data are safe.) 

*android.os.RecoverySystem.rebootWipeCache(Context)*

public static void rebootWipeCache(android.content.Context context)
  throws |java.io.IOException|
         
Reboot into the recovery system to wipe the /cache partition. 



*android.os.RecoverySystem.rebootWipeUserData(Context)*

public static void rebootWipeUserData(android.content.Context context)
  throws |java.io.IOException|
         
Reboots the device and wipes the user data partition. This is sometimes called 
a "factory reset", which is something of a misnomer because the system 
partition is not restored to its factory state. Requires the 
(|android.Manifest.permission|) permission. 


    context - the Context to use 

*android.os.RecoverySystem.verifyPackage(File,RecoverySystem.ProgressListener,File)*

public static void verifyPackage(
  java.io.File packageFile,
  android.os.RecoverySystem.ProgressListener listener,
  java.io.File deviceCertsZipFile)
  throws |java.security.GeneralSecurityException|
         |java.io.IOException|
         
Verify the cryptographic signature of a system update package before installing 
it. Note that the package is also verified separately by the installer once the 
device is rebooted into the recovery system. This function will return only if 
the package was successfully verified; otherwise it will throw an exception. 

Verification of a package can take significant time, so this function should 
not be called from a UI thread. Interrupting the thread while this function is 
in progress will result in a SecurityException being thrown (and the thread's 
interrupt flag will be cleared). 


    packageFile - the package to be verified 
    listener - an object to receive periodic progress updates as verification proceeds. May be 
       null. 
    deviceCertsZipFile - the zip file of certificates whose public keys we will accept. Verification 
       succeeds if the package is signed by the private key corresponding to 
       any public key in this file. May be null to use the system default file 
       (currently "/system/etc/security/otacerts.zip"). 


