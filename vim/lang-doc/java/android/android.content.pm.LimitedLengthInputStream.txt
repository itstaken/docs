*android.content.pm.LimitedLengthInputStream* *LimitedLengthInputStream* A class

public class LimitedLengthInputStream
  extends    |java.io.FilterInputStream|

|android.content.pm.LimitedLengthInputStream_Description|
|android.content.pm.LimitedLengthInputStream_Fields|
|android.content.pm.LimitedLengthInputStream_Constructors|
|android.content.pm.LimitedLengthInputStream_Methods|

================================================================================

*android.content.pm.LimitedLengthInputStream_Constructors*
|android.content.pm.LimitedLengthInputStream(InputStream,long,long)|

*android.content.pm.LimitedLengthInputStream_Methods*
|android.content.pm.LimitedLengthInputStream.read()|
|android.content.pm.LimitedLengthInputStream.read(byte[])|
|android.content.pm.LimitedLengthInputStream.read(byte[],int,int)|

*android.content.pm.LimitedLengthInputStream_Description*

A class that limits the amount of data that is read from an InputStream. When 
the specified length is reached, the stream returns an EOF even if the 
underlying stream still has more data. 



*android.content.pm.LimitedLengthInputStream(InputStream,long,long)*

public LimitedLengthInputStream(
  java.io.InputStream in,
  long offset,
  long length)
  throws |java.io.IOException|
         


    in - underlying stream to wrap 
    offset - offset into stream where data starts 
    length - length of data at offset 

*android.content.pm.LimitedLengthInputStream.read()*

public synchronized int read()
  throws |java.io.IOException|
         




*android.content.pm.LimitedLengthInputStream.read(byte[])*

public int read(byte[] buffer)
  throws |java.io.IOException|
         




*android.content.pm.LimitedLengthInputStream.read(byte[],int,int)*

public int read(
  byte[] buffer,
  int offset,
  int byteCount)
  throws |java.io.IOException|
         





