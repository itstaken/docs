*android.bordeaux.services.BordeauxClassifier* *BordeauxClassifier* Classifier f

public class BordeauxClassifier
  extends    |java.lang.Object|

|android.bordeaux.services.BordeauxClassifier_Description|
|android.bordeaux.services.BordeauxClassifier_Fields|
|android.bordeaux.services.BordeauxClassifier_Constructors|
|android.bordeaux.services.BordeauxClassifier_Methods|

================================================================================

*android.bordeaux.services.BordeauxClassifier_Constructors*
|android.bordeaux.services.BordeauxClassifier(Context)|
|android.bordeaux.services.BordeauxClassifier(Context,String)|

*android.bordeaux.services.BordeauxClassifier_Methods*
|android.bordeaux.services.BordeauxClassifier.classify(HashMap<Integer,Float>)|
|android.bordeaux.services.BordeauxClassifier.update(HashMap<Integer,Float>,int)|

*android.bordeaux.services.BordeauxClassifier_Description*

Classifier for the Learning framework. For training: call trainOneSample For 
classifying: call classify Data is represented as sparse key, value pair. And 
key is an integer, value is a float. Class label(target) for the training data 
is an integer. Note: since the actual classifier is running in a remote the 
service. Sometimes the connection may be lost or not established. 



*android.bordeaux.services.BordeauxClassifier(Context)*

public BordeauxClassifier(Context context)




*android.bordeaux.services.BordeauxClassifier(Context,String)*

public BordeauxClassifier(
  Context context,
  java.lang.String name)




*android.bordeaux.services.BordeauxClassifier.classify(HashMap<Integer,Float>)*

public int classify(java.util.HashMap<java.lang.Integer, java.lang.Float> sample)





*android.bordeaux.services.BordeauxClassifier.update(HashMap<Integer,Float>,int)*

public boolean update(
  java.util.HashMap<java.lang.Integer, java.lang.Float> sample,
  int target)






