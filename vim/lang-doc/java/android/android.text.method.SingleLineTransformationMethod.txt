*android.text.method.SingleLineTransformationMethod* *SingleLineTransformationMethod* 

public class SingleLineTransformationMethod
  extends    |android.text.method.ReplacementTransformationMethod|

|android.text.method.SingleLineTransformationMethod_Description|
|android.text.method.SingleLineTransformationMethod_Fields|
|android.text.method.SingleLineTransformationMethod_Constructors|
|android.text.method.SingleLineTransformationMethod_Methods|

================================================================================

*android.text.method.SingleLineTransformationMethod_Constructors*
|android.text.method.SingleLineTransformationMethod()|

*android.text.method.SingleLineTransformationMethod_Methods*
|android.text.method.SingleLineTransformationMethod.getInstance()|
|android.text.method.SingleLineTransformationMethod.getOriginal()|The character
|android.text.method.SingleLineTransformationMethod.getReplacement()|The charac

*android.text.method.SingleLineTransformationMethod_Description*

This transformation method causes any newline characters (\n) to be displayed 
as spaces instead of causing line breaks, and causes carriage return characters 
(\r) to have no appearance. 



*android.text.method.SingleLineTransformationMethod()*

public SingleLineTransformationMethod()




*android.text.method.SingleLineTransformationMethod.getInstance()*

public static |android.text.method.SingleLineTransformationMethod| getInstance()





*android.text.method.SingleLineTransformationMethod.getOriginal()*

protected char[] getOriginal()

The characters to be replaced are \n and \r. 



*android.text.method.SingleLineTransformationMethod.getReplacement()*

protected char[] getReplacement()

The character \n is replaced with is space; the character \r is replaced with 
is FEFF (zero width space). 




