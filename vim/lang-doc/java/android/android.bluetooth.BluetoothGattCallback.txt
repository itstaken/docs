*android.bluetooth.BluetoothGattCallback* *BluetoothGattCallback* This abstract 

public abstract class BluetoothGattCallback
  extends    |java.lang.Object|

|android.bluetooth.BluetoothGattCallback_Description|
|android.bluetooth.BluetoothGattCallback_Fields|
|android.bluetooth.BluetoothGattCallback_Constructors|
|android.bluetooth.BluetoothGattCallback_Methods|

================================================================================

*android.bluetooth.BluetoothGattCallback_Constructors*
|android.bluetooth.BluetoothGattCallback()|

*android.bluetooth.BluetoothGattCallback_Methods*
|android.bluetooth.BluetoothGattCallback.onCharacteristicChanged(BluetoothGatt,BluetoothGattCharacteristic)|
|android.bluetooth.BluetoothGattCallback.onCharacteristicRead(BluetoothGatt,BluetoothGattCharacteristic,int)|
|android.bluetooth.BluetoothGattCallback.onCharacteristicWrite(BluetoothGatt,BluetoothGattCharacteristic,int)|
|android.bluetooth.BluetoothGattCallback.onConnectionStateChange(BluetoothGatt,int,int)|
|android.bluetooth.BluetoothGattCallback.onDescriptorRead(BluetoothGatt,BluetoothGattDescriptor,int)|
|android.bluetooth.BluetoothGattCallback.onDescriptorWrite(BluetoothGatt,BluetoothGattDescriptor,int)|
|android.bluetooth.BluetoothGattCallback.onReadRemoteRssi(BluetoothGatt,int,int)|
|android.bluetooth.BluetoothGattCallback.onReliableWriteCompleted(BluetoothGatt,int)|
|android.bluetooth.BluetoothGattCallback.onServicesDiscovered(BluetoothGatt,int)|

*android.bluetooth.BluetoothGattCallback_Description*

This abstract class is used to implement (|android.bluetooth.BluetoothGatt|) 
callbacks. 



*android.bluetooth.BluetoothGattCallback()*

public BluetoothGattCallback()




*android.bluetooth.BluetoothGattCallback.onCharacteristicChanged(BluetoothGatt,BluetoothGattCharacteristic)*

public void onCharacteristicChanged(
  android.bluetooth.BluetoothGatt gatt,
  android.bluetooth.BluetoothGattCharacteristic characteristic)

Callback triggered as a result of a remote characteristic notification. 


    gatt - GATT client the characteristic is associated with 
    characteristic - Characteristic that has been updated as a result of a remote notification 
       event. 

*android.bluetooth.BluetoothGattCallback.onCharacteristicRead(BluetoothGatt,BluetoothGattCharacteristic,int)*

public void onCharacteristicRead(
  android.bluetooth.BluetoothGatt gatt,
  android.bluetooth.BluetoothGattCharacteristic characteristic,
  int status)

Callback reporting the result of a characteristic read operation. 


    gatt - GATT client invoked {@link BluetoothGatt#readCharacteristic} 
    characteristic - Characteristic that was read from the associated remote device. 
    status - {@link BluetoothGatt#GATT_SUCCESS} if the read operation was completed 
       successfully. 

*android.bluetooth.BluetoothGattCallback.onCharacteristicWrite(BluetoothGatt,BluetoothGattCharacteristic,int)*

public void onCharacteristicWrite(
  android.bluetooth.BluetoothGatt gatt,
  android.bluetooth.BluetoothGattCharacteristic characteristic,
  int status)

Callback indicating the result of a characteristic write operation. 

If this callback is invoked while a reliable write transaction is in progress, 
the value of the characteristic represents the value reported by the remote 
device. An application should compare this value to the desired value to be 
written. If the values don't match, the application must abort the reliable 
write transaction. 


    gatt - GATT client invoked {@link BluetoothGatt#writeCharacteristic} 
    characteristic - Characteristic that was written to the associated remote device. 
    status - The result of the write operation {@link BluetoothGatt#GATT_SUCCESS} if the 
       operation succeeds. 

*android.bluetooth.BluetoothGattCallback.onConnectionStateChange(BluetoothGatt,int,int)*

public void onConnectionStateChange(
  android.bluetooth.BluetoothGatt gatt,
  int status,
  int newState)

Callback indicating when GATT client has connected/disconnected to/from a 
remote GATT server. 


    gatt - GATT client 
    status - Status of the connect or disconnect operation. {@link 
       BluetoothGatt#GATT_SUCCESS} if the operation succeeds. 
    newState - Returns the new connection state. Can be one of {@link 
       BluetoothProfile#STATE_DISCONNECTED} or {@link 
       BluetoothProfile#STATE_CONNECTED} 

*android.bluetooth.BluetoothGattCallback.onDescriptorRead(BluetoothGatt,BluetoothGattDescriptor,int)*

public void onDescriptorRead(
  android.bluetooth.BluetoothGatt gatt,
  android.bluetooth.BluetoothGattDescriptor descriptor,
  int status)

Callback reporting the result of a descriptor read operation. 


    gatt - GATT client invoked {@link BluetoothGatt#readDescriptor} 
    descriptor - Descriptor that was read from the associated remote device. 
    status - {@link BluetoothGatt#GATT_SUCCESS} if the read operation was completed 
       successfully 

*android.bluetooth.BluetoothGattCallback.onDescriptorWrite(BluetoothGatt,BluetoothGattDescriptor,int)*

public void onDescriptorWrite(
  android.bluetooth.BluetoothGatt gatt,
  android.bluetooth.BluetoothGattDescriptor descriptor,
  int status)

Callback indicating the result of a descriptor write operation. 


    gatt - GATT client invoked {@link BluetoothGatt#writeDescriptor} 
    descriptor - Descriptor that was writte to the associated remote device. 
    status - The result of the write operation {@link BluetoothGatt#GATT_SUCCESS} if the 
       operation succeeds. 

*android.bluetooth.BluetoothGattCallback.onReadRemoteRssi(BluetoothGatt,int,int)*

public void onReadRemoteRssi(
  android.bluetooth.BluetoothGatt gatt,
  int rssi,
  int status)

Callback reporting the RSSI for a remote device connection. 

This callback is triggered in response to the 
(|android.bluetooth.BluetoothGatt|) function. 


    gatt - GATT client invoked {@link BluetoothGatt#readRemoteRssi} 
    rssi - The RSSI value for the remote device 
    status - {@link BluetoothGatt#GATT_SUCCESS} if the RSSI was read successfully 

*android.bluetooth.BluetoothGattCallback.onReliableWriteCompleted(BluetoothGatt,int)*

public void onReliableWriteCompleted(
  android.bluetooth.BluetoothGatt gatt,
  int status)

Callback invoked when a reliable write transaction has been completed. 


    gatt - GATT client invoked {@link BluetoothGatt#executeReliableWrite} 
    status - {@link BluetoothGatt#GATT_SUCCESS} if the reliable write transaction was 
       executed successfully 

*android.bluetooth.BluetoothGattCallback.onServicesDiscovered(BluetoothGatt,int)*

public void onServicesDiscovered(
  android.bluetooth.BluetoothGatt gatt,
  int status)

Callback invoked when the list of remote services, characteristics and 
descriptors for the remote device have been updated, ie new services have been 
discovered. 


    gatt - GATT client invoked {@link BluetoothGatt#discoverServices} 
    status - {@link BluetoothGatt#GATT_SUCCESS} if the remote device has been explored 
       successfully. 


