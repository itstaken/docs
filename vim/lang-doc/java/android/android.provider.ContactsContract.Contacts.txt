*android.provider.ContactsContract.Contacts* *ContactsContract.Contacts* Constan

public static class ContactsContract.Contacts
  extends    |java.lang.Object|
  implements |android.provider.BaseColumns|
             |android.provider.ContactsContract.ContactsColumns|
             |android.provider.ContactsContract.ContactOptionsColumns|
             |android.provider.ContactsContract.ContactNameColumns|
             |android.provider.ContactsContract.ContactStatusColumns|

|android.provider.ContactsContract.Contacts_Description|
|android.provider.ContactsContract.Contacts_Fields|
|android.provider.ContactsContract.Contacts_Constructors|
|android.provider.ContactsContract.Contacts_Methods|

================================================================================

*android.provider.ContactsContract.Contacts_Fields*
|android.net.Uri_android.provider.ContactsContract.Contacts.CONTENT_FILTER_URI|
|android.net.Uri_android.provider.ContactsContract.Contacts.CONTENT_FREQUENT_URI|
|android.net.Uri_android.provider.ContactsContract.Contacts.CONTENT_GROUP_URI|
|java.lang.String_android.provider.ContactsContract.Contacts.CONTENT_ITEM_TYPE|
|android.net.Uri_android.provider.ContactsContract.Contacts.CONTENT_LOOKUP_URI|
|android.net.Uri_android.provider.ContactsContract.Contacts.CONTENT_MULTI_VCARD_URI|
|android.net.Uri_android.provider.ContactsContract.Contacts.CONTENT_STREQUENT_FILTER_URI|
|android.net.Uri_android.provider.ContactsContract.Contacts.CONTENT_STREQUENT_URI|
|java.lang.String_android.provider.ContactsContract.Contacts.CONTENT_TYPE|
|android.net.Uri_android.provider.ContactsContract.Contacts.CONTENT_URI|
|java.lang.String_android.provider.ContactsContract.Contacts.CONTENT_VCARD_TYPE|
|android.net.Uri_android.provider.ContactsContract.Contacts.CONTENT_VCARD_URI|
|java.lang.String_android.provider.ContactsContract.Contacts.QUERY_PARAMETER_VCARD_NO_PHOTO|

*android.provider.ContactsContract.Contacts_Methods*
|android.provider.ContactsContract.Contacts.getLookupUri(ContentResolver,Uri)|B
|android.provider.ContactsContract.Contacts.getLookupUri(long,String)|Build a#C
|android.provider.ContactsContract.Contacts.lookupContact(ContentResolver,Uri)|
|android.provider.ContactsContract.Contacts.markAsContacted(ContentResolver,long)|
|android.provider.ContactsContract.Contacts.openContactPhotoInputStream(ContentResolver,Uri)|
|android.provider.ContactsContract.Contacts.openContactPhotoInputStream(ContentResolver,Uri,boolean)|

*android.provider.ContactsContract.Contacts_Description*

Constants for the contacts table, which contains a record per aggregate of raw 
contacts representing the same person. Operations 

Insert A Contact cannot be created explicitly. When a raw contact is inserted, 
the provider will first try to find a Contact representing the same person. If 
one is found, the raw contact's 
(|android.provider.ContactsContract.RawContacts|) column gets the _ID of the 
aggregate Contact. If no match is found, the provider automatically inserts a 
new Contact and puts its _ID into the 
(|android.provider.ContactsContract.RawContacts|) column of the newly inserted 
raw contact. Update Only certain columns of Contact are modifiable: 
(|android.provider.ContactsContract.Contacts|) , 
(|android.provider.ContactsContract.Contacts|) , 
(|android.provider.ContactsContract.Contacts|) , 
(|android.provider.ContactsContract.Contacts|) , 
(|android.provider.ContactsContract.Contacts|) . Changing any of these columns 
on the Contact also changes them on all constituent raw contacts. Delete Be 
careful with deleting Contacts! Deleting an aggregate contact deletes all 
constituent raw contacts. The corresponding sync adapters will notice the 
deletions of their respective raw contacts and remove them from their back end 
storage. Query 

If you need to read an individual contact, consider using 
(|android.provider.ContactsContract.Contacts|) instead of 
(|android.provider.ContactsContract.Contacts|) . If you need to look up a 
contact by the phone number, use 
PhoneLookup.CONTENT_FILTER_URI(|android.provider.ContactsContract.PhoneLookup|) 
, which is optimized for this purpose. If you need to look up a contact by 
partial name, e.g. to produce filter-as-you-type suggestions, use the 
(|android.provider.ContactsContract.Contacts|) URI. If you need to look up a 
contact by some data element like email address, nickname, etc, use a query 
against the (|android.provider.ContactsContract.Data|) table. The result will 
contain contact ID, name etc. 



Columns 

Contacts 

long (|android.provider.ContactsContract.Contacts|) read-only Row ID. Consider 
using (|android.provider.ContactsContract.Contacts|) instead. 

String (|android.provider.ContactsContract.Contacts|) read-only An opaque value 
that contains hints on how to find the contact if its row id changed as a 
result of a sync or aggregation. 

long NAME_RAW_CONTACT_ID read-only The ID of the raw contact that contributes 
the display name to the aggregate contact. During aggregation one of the 
constituent raw contacts is chosen using a heuristic: a longer name or a name 
with more diacritic marks or more upper case characters is chosen. 

String DISPLAY_NAME_PRIMARY read-only The display name for the contact. It is 
the display name contributed by the raw contact referred to by the 
NAME_RAW_CONTACT_ID column. 

long (|android.provider.ContactsContract.Contacts|) read-only Reference to the 
row in the (|android.provider.ContactsContract.Data|) table holding the photo. 
That row has the mime type 
(|android.provider.ContactsContract.CommonDataKinds.Photo|) . The value of this 
field is computed automatically based on the 
(|android.provider.ContactsContract.CommonDataKinds.Photo|) field of the data 
rows of that mime type. 

long (|android.provider.ContactsContract.Contacts|) read-only A URI that can be 
used to retrieve the contact's full-size photo. This column is the preferred 
method of retrieving the contact photo. 

long (|android.provider.ContactsContract.Contacts|) read-only A URI that can be 
used to retrieve the thumbnail of contact's photo. This column is the preferred 
method of retrieving the contact photo. 

int (|android.provider.ContactsContract.Contacts|) read-only An indicator of 
whether this contact is supposed to be visible in the UI. "1" if the contact 
has at least one raw contact that belongs to a visible group; "0" otherwise. 

int (|android.provider.ContactsContract.Contacts|) read-only An indicator of 
whether this contact has at least one phone number. "1" if there is at least 
one phone number, "0" otherwise. 

int (|android.provider.ContactsContract.Contacts|) read/write The number of 
times the contact has been contacted. See 
(|android.provider.ContactsContract.Contacts|) . When raw contacts are 
aggregated, this field is computed automatically as the maximum number of times 
contacted among all constituent raw contacts. Setting this field automatically 
changes the corresponding field on all constituent raw contacts. 

long (|android.provider.ContactsContract.Contacts|) read/write The timestamp of 
the last time the contact was contacted. See 
(|android.provider.ContactsContract.Contacts|) . Setting this field also 
automatically increments (|android.provider.ContactsContract.Contacts|) . When 
raw contacts are aggregated, this field is computed automatically as the latest 
time contacted of all constituent raw contacts. Setting this field 
automatically changes the corresponding field on all constituent raw contacts. 

int (|android.provider.ContactsContract.Contacts|) read/write An indicator for 
favorite contacts: '1' if favorite, '0' otherwise. When raw contacts are 
aggregated, this field is automatically computed: if any constituent raw 
contacts are starred, then this field is set to '1'. Setting this field 
automatically changes the corresponding field on all constituent raw contacts. 

String (|android.provider.ContactsContract.Contacts|) read/write A custom 
ringtone associated with a contact. Typically this is the URI returned by an 
activity launched with the (|android.media.RingtoneManager|) intent. 

int (|android.provider.ContactsContract.Contacts|) read/write An indicator of 
whether calls from this contact should be forwarded directly to voice mail 
('1') or not ('0'). When raw contacts are aggregated, this field is 
automatically computed: if all constituent raw contacts have 
SEND_TO_VOICEMAIL=1, then this field is set to '1'. Setting this field 
automatically changes the corresponding field on all constituent raw contacts. 

int (|android.provider.ContactsContract.Contacts|) read-only Contact IM 
presence status. See (|android.provider.ContactsContract.StatusUpdates|) for 
individual status definitions. Automatically computed as the highest presence 
of all constituent raw contacts. The provider may choose not to store this 
value in persistent storage. The expectation is that presence status will be 
updated on a regular basis. 

String (|android.provider.ContactsContract.Contacts|) read-only Contact's 
latest status update. Automatically computed as the latest of all constituent 
raw contacts' status updates. 

long (|android.provider.ContactsContract.Contacts|) read-only The absolute time 
in milliseconds when the latest status was inserted/updated. 

String (|android.provider.ContactsContract.Contacts|) read-only The package 
containing resources for this status: label and icon. 

long (|android.provider.ContactsContract.Contacts|) read-only The resource ID 
of the label describing the source of contact status, e.g. "Google Talk". This 
resource is scoped by the (|android.provider.ContactsContract.Contacts|) . 

long (|android.provider.ContactsContract.Contacts|) read-only The resource ID 
of the icon for the source of contact status. This resource is scoped by the 
(|android.provider.ContactsContract.Contacts|) . 





*android.net.Uri_android.provider.ContactsContract.Contacts.CONTENT_FILTER_URI*

The content:// style URI used for "type-to-filter" functionality on the 
(|android.provider.ContactsContract.Contacts|) URI. The filter string will be 
used to match various parts of the contact name. The filter argument should be 
passed as an additional path segment after this URI. 


*android.net.Uri_android.provider.ContactsContract.Contacts.CONTENT_FREQUENT_URI*

The content:// style URI for showing frequently contacted person listing. 


*android.net.Uri_android.provider.ContactsContract.Contacts.CONTENT_GROUP_URI*




*java.lang.String_android.provider.ContactsContract.Contacts.CONTENT_ITEM_TYPE*

The MIME type of a (|android.provider.ContactsContract.Contacts|) subdirectory 
of a single person. 


*android.net.Uri_android.provider.ContactsContract.Contacts.CONTENT_LOOKUP_URI*

A content:// style URI for this table that should be used to create shortcuts 
or otherwise create long-term links to contacts. This URI should always be 
followed by a "/" and the contact's 
(|android.provider.ContactsContract.Contacts|) . It can optionally also have a 
"/" and last known contact ID appended after that. This "complete" format is an 
important optimization and is highly recommended. 

As long as the contact's row ID remains the same, this URI is equivalent to 
(|android.provider.ContactsContract.Contacts|) . If the contact's row ID 
changes as a result of a sync or aggregation, this URI will look up the contact 
using indirect information (sync IDs or constituent raw contacts). 

Lookup key should be appended unencoded - it is stored in the encoded form, 
ready for use in a URI. 


*android.net.Uri_android.provider.ContactsContract.Contacts.CONTENT_MULTI_VCARD_URI*

Base (|android.net.Uri|) for referencing multiple (|android.provider.Contacts|) 
entry, created by appending (|android.provider.ContactsContract.Contacts|) 
using (|android.net.Uri|) . The lookup keys have to be encoded and joined with 
the colon (":") separator. The resulting string has to be encoded again. 
Provides (|android.provider.OpenableColumns|) columns when queried, or returns 
the referenced contact formatted as a vCard when opened through 
(|android.content.ContentResolver|) . 

This is private API because we do not have a well-defined way to specify 
several entities yet. The format of this Uri might change in the future or the 
Uri might be completely removed. 


*android.net.Uri_android.provider.ContactsContract.Contacts.CONTENT_STREQUENT_FILTER_URI*

The content:// style URI used for "type-to-filter" functionality on the 
(|android.provider.ContactsContract.Contacts|) URI. The filter string will be 
used to match various parts of the contact name. The filter argument should be 
passed as an additional path segment after this URI. 


*android.net.Uri_android.provider.ContactsContract.Contacts.CONTENT_STREQUENT_URI*

The content:// style URI for this table joined with useful data from 
(|android.provider.ContactsContract.Data|) , filtered to include only starred 
contacts and the most frequently contacted contacts. 


*java.lang.String_android.provider.ContactsContract.Contacts.CONTENT_TYPE*

The MIME type of (|android.provider.ContactsContract.Contacts|) providing a 
directory of people. 


*android.net.Uri_android.provider.ContactsContract.Contacts.CONTENT_URI*

The content:// style URI for this table 


*java.lang.String_android.provider.ContactsContract.Contacts.CONTENT_VCARD_TYPE*

The MIME type of a (|android.provider.ContactsContract.Contacts|) subdirectory 
of a single person. 


*android.net.Uri_android.provider.ContactsContract.Contacts.CONTENT_VCARD_URI*

Base (|android.net.Uri|) for referencing a single (|android.provider.Contacts|) 
entry, created by appending (|android.provider.ContactsContract.Contacts|) 
using (|android.net.Uri|) . Provides (|android.provider.OpenableColumns|) 
columns when queried, or returns the referenced contact formatted as a vCard 
when opened through (|android.content.ContentResolver|) . 


*java.lang.String_android.provider.ContactsContract.Contacts.QUERY_PARAMETER_VCARD_NO_PHOTO*

Boolean parameter that may be used with 
(|android.provider.ContactsContract.Contacts|) and 
(|android.provider.ContactsContract.Contacts|) to indicate that the returned 
vcard should not contain a photo. 



*android.provider.ContactsContract.Contacts.getLookupUri(ContentResolver,Uri)*

public static |android.net.Uri| getLookupUri(
  android.content.ContentResolver resolver,
  android.net.Uri contactUri)

Builds a (|android.provider.ContactsContract.Contacts|) style 
(|android.net.Uri|) describing the requested (|android.provider.Contacts|) 
entry. 


    contactUri - A {@link #CONTENT_URI} row, or an existing {@link #CONTENT_LOOKUP_URI} to 
       attempt refreshing. 

*android.provider.ContactsContract.Contacts.getLookupUri(long,String)*

public static |android.net.Uri| getLookupUri(
  long contactId,
  java.lang.String lookupKey)

Build a (|android.provider.ContactsContract.Contacts|) lookup 
(|android.net.Uri|) using the given 
(|android.provider.ContactsContract.Contacts|) and 
(|android.provider.ContactsContract.Contacts|) . 



*android.provider.ContactsContract.Contacts.lookupContact(ContentResolver,Uri)*

public static |android.net.Uri| lookupContact(
  android.content.ContentResolver resolver,
  android.net.Uri lookupUri)

Computes a content URI (see (|android.provider.ContactsContract.Contacts|) ) 
given a lookup URI. 

Returns null if the contact cannot be found. 



*android.provider.ContactsContract.Contacts.markAsContacted(ContentResolver,long)*

public static void markAsContacted(
  android.content.ContentResolver resolver,
  long contactId)

Mark a contact as having been contacted. Updates two fields: 
(|android.provider.ContactsContract.Contacts|) and 
(|android.provider.ContactsContract.Contacts|) . The TIMES_CONTACTED field is 
incremented by 1 and the LAST_TIME_CONTACTED field is populated with the 
current system time. 

    Deprecated: The class DataUsageStatUpdater of the Android support library should
     be used instead.

    resolver - the ContentResolver to use 
    contactId - the person who was contacted 

*android.provider.ContactsContract.Contacts.openContactPhotoInputStream(ContentResolver,Uri)*

public static |java.io.InputStream| openContactPhotoInputStream(
  android.content.ContentResolver cr,
  android.net.Uri contactUri)

Opens an InputStream for the contacts's thumbnail photo and returns the photo 
as a byte stream. 


    cr - The content resolver to use for querying 
    contactUri - the contact whose photo should be used. This can be used with either a {@link 
       #CONTENT_URI} or a {@link #CONTENT_LOOKUP_URI} URI. 

    Returns: an InputStream of the photo, or null if no photo is present 

*android.provider.ContactsContract.Contacts.openContactPhotoInputStream(ContentResolver,Uri,boolean)*

public static |java.io.InputStream| openContactPhotoInputStream(
  android.content.ContentResolver cr,
  android.net.Uri contactUri,
  boolean preferHighres)

Opens an InputStream for the contacts's photo and returns the photo as a byte 
stream. 


    cr - The content resolver to use for querying 
    contactUri - the contact whose photo should be used. This can be used with either a {@link 
       #CONTENT_URI} or a {@link #CONTENT_LOOKUP_URI} URI. 
    preferHighres - If this is true and the contact has a higher resolution photo available, it is 
       returned. If false, this function always tries to get the thumbnail 

    Returns: an InputStream of the photo, or null if no photo is present 


