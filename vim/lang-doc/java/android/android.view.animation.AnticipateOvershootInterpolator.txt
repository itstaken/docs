*android.view.animation.AnticipateOvershootInterpolator* *AnticipateOvershootInterpolator* 

public class AnticipateOvershootInterpolator
  extends    |java.lang.Object|
  implements |android.view.animation.Interpolator|

|android.view.animation.AnticipateOvershootInterpolator_Description|
|android.view.animation.AnticipateOvershootInterpolator_Fields|
|android.view.animation.AnticipateOvershootInterpolator_Constructors|
|android.view.animation.AnticipateOvershootInterpolator_Methods|

================================================================================

*android.view.animation.AnticipateOvershootInterpolator_Constructors*
|android.view.animation.AnticipateOvershootInterpolator()|
|android.view.animation.AnticipateOvershootInterpolator(Context,AttributeSet)|
|android.view.animation.AnticipateOvershootInterpolator(float)|
|android.view.animation.AnticipateOvershootInterpolator(float,float)|

*android.view.animation.AnticipateOvershootInterpolator_Methods*
|android.view.animation.AnticipateOvershootInterpolator.getInterpolation(float)|

*android.view.animation.AnticipateOvershootInterpolator_Description*

An interpolator where the change starts backward then flings forward and 
overshoots the target value and finally goes back to the final value. 



*android.view.animation.AnticipateOvershootInterpolator()*

public AnticipateOvershootInterpolator()




*android.view.animation.AnticipateOvershootInterpolator(Context,AttributeSet)*

public AnticipateOvershootInterpolator(
  android.content.Context context,
  android.util.AttributeSet attrs)




*android.view.animation.AnticipateOvershootInterpolator(float)*

public AnticipateOvershootInterpolator(float tension)



    tension - Amount of anticipation/overshoot. When tension equals 0.0f, there is no 
       anticipation/overshoot and the interpolator becomes a simple 
       acceleration/deceleration interpolator. 

*android.view.animation.AnticipateOvershootInterpolator(float,float)*

public AnticipateOvershootInterpolator(
  float tension,
  float extraTension)



    tension - Amount of anticipation/overshoot. When tension equals 0.0f, there is no 
       anticipation/overshoot and the interpolator becomes a simple 
       acceleration/deceleration interpolator. 
    extraTension - Amount by which to multiply the tension. For instance, to get the same 
       overshoot as an OvershootInterpolator with a tension of 2.0f, you would 
       use an extraTension of 1.5f. 

*android.view.animation.AnticipateOvershootInterpolator.getInterpolation(float)*

public float getInterpolation(float t)






