*android.os.StrictMode.ThreadPolicy* *StrictMode.ThreadPolicy* StrictModepolicy 

public static final class StrictMode.ThreadPolicy
  extends    |java.lang.Object|

|android.os.StrictMode.ThreadPolicy_Description|
|android.os.StrictMode.ThreadPolicy_Fields|
|android.os.StrictMode.ThreadPolicy_Constructors|
|android.os.StrictMode.ThreadPolicy_Methods|

================================================================================

*android.os.StrictMode.ThreadPolicy_Fields*
|android.os.StrictMode.ThreadPolicy_android.os.StrictMode.ThreadPolicy.LAX|

*android.os.StrictMode.ThreadPolicy_Methods*
|android.os.StrictMode.ThreadPolicy.toString()|

*android.os.StrictMode.ThreadPolicy_Description*

(|android.os.StrictMode|) policy applied to a certain thread. 

The policy is enabled by (|android.os.StrictMode.ThreadPolicy|) . The current 
policy can be retrieved with (|android.os.StrictMode.ThreadPolicy|) . 

Note that multiple penalties may be provided and they're run in order from 
least to most severe (logging before process death, for example). There's 
currently no mechanism to choose different penalties for different detected 
actions. 



*android.os.StrictMode.ThreadPolicy_android.os.StrictMode.ThreadPolicy.LAX*

The default, lax policy which doesn't catch anything. 



*android.os.StrictMode.ThreadPolicy.toString()*

public |java.lang.String| toString()






