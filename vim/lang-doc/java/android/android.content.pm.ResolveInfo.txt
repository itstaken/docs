*android.content.pm.ResolveInfo* *ResolveInfo* Information that is returned from

public class ResolveInfo
  extends    |java.lang.Object|
  implements |android.os.Parcelable|

|android.content.pm.ResolveInfo_Description|
|android.content.pm.ResolveInfo_Fields|
|android.content.pm.ResolveInfo_Constructors|
|android.content.pm.ResolveInfo_Methods|

================================================================================

*android.content.pm.ResolveInfo_Fields*
|android.content.pm.ActivityInfo_android.content.pm.ResolveInfo.activityInfo|
|android.os.Parcelable.Creator<android.content.pm.ResolveInfo>_android.content.pm.ResolveInfo.CREATOR|
|android.content.IntentFilter_android.content.pm.ResolveInfo.filter|
|int_android.content.pm.ResolveInfo.icon|
|boolean_android.content.pm.ResolveInfo.isDefault|
|int_android.content.pm.ResolveInfo.labelRes|
|int_android.content.pm.ResolveInfo.match|
|java.lang.CharSequence_android.content.pm.ResolveInfo.nonLocalizedLabel|
|int_android.content.pm.ResolveInfo.preferredOrder|
|int_android.content.pm.ResolveInfo.priority|
|android.content.pm.ProviderInfo_android.content.pm.ResolveInfo.providerInfo|
|java.lang.String_android.content.pm.ResolveInfo.resolvePackageName|
|android.content.pm.ServiceInfo_android.content.pm.ResolveInfo.serviceInfo|
|int_android.content.pm.ResolveInfo.specificIndex|
|boolean_android.content.pm.ResolveInfo.system|

*android.content.pm.ResolveInfo_Constructors*
|android.content.pm.ResolveInfo()|
|android.content.pm.ResolveInfo(ResolveInfo)|

*android.content.pm.ResolveInfo_Methods*
|android.content.pm.ResolveInfo.describeContents()|
|android.content.pm.ResolveInfo.dump(Printer,String)|
|android.content.pm.ResolveInfo.getIconResource()|Return the icon resource iden
|android.content.pm.ResolveInfo.loadIcon(PackageManager)|Retrieve the current g
|android.content.pm.ResolveInfo.loadLabel(PackageManager)|Retrieve the current 
|android.content.pm.ResolveInfo.toString()|
|android.content.pm.ResolveInfo.writeToParcel(Parcel,int)|

*android.content.pm.ResolveInfo_Description*

Information that is returned from resolving an intent against an IntentFilter. 
This partially corresponds to information collected from the 
AndroidManifest.xml's <intent> tags. 



*android.content.pm.ActivityInfo_android.content.pm.ResolveInfo.activityInfo*

The activity or broadcast receiver that corresponds to this resolution match, 
if this resolution is for an activity or broadcast receiver. Exactly one of 
(|android.content.pm.ResolveInfo|) , (|android.content.pm.ResolveInfo|) , or 
(|android.content.pm.ResolveInfo|) will be non-null. 


*android.os.Parcelable.Creator<android.content.pm.ResolveInfo>_android.content.pm.ResolveInfo.CREATOR*




*android.content.IntentFilter_android.content.pm.ResolveInfo.filter*

The IntentFilter that was matched for this ResolveInfo. 


*int_android.content.pm.ResolveInfo.icon*

A drawable resource identifier (in the package's resources) of this match's 
icon. From the "icon" attribute or, if not set, 0. 


*boolean_android.content.pm.ResolveInfo.isDefault*

This filter has specified the Intent.CATEGORY_DEFAULT, meaning it would like to 
be considered a default action that the user can perform on this data. 


*int_android.content.pm.ResolveInfo.labelRes*

A string resource identifier (in the package's resources) of this match's 
label. From the "label" attribute or, if not set, 0. 


*int_android.content.pm.ResolveInfo.match*

The system's evaluation of how well the activity matches the IntentFilter. This 
is a match constant, a combination of 
IntentFilter.MATCH_CATEGORY_MASK(|android.content.IntentFilter|) and 
IntentFiler.MATCH_ADJUSTMENT_MASK(|android.content.IntentFilter|) . 


*java.lang.CharSequence_android.content.pm.ResolveInfo.nonLocalizedLabel*

The actual string retrieve from labelRes or null if none was provided. 


*int_android.content.pm.ResolveInfo.preferredOrder*

Order of result according to the user's preference. If the user has not set a 
preference for this result, the value is 0; higher values are a higher 
priority. 


*int_android.content.pm.ResolveInfo.priority*

The declared priority of this match. Comes from the "priority" attribute or, if 
not set, defaults to 0. Higher values are a higher priority. 


*android.content.pm.ProviderInfo_android.content.pm.ResolveInfo.providerInfo*

The provider that corresponds to this resolution match, if this resolution is 
for a provider. Exactly one of (|android.content.pm.ResolveInfo|) , 
(|android.content.pm.ResolveInfo|) , or (|android.content.pm.ResolveInfo|) will 
be non-null. 


*java.lang.String_android.content.pm.ResolveInfo.resolvePackageName*

Optional -- if non-null, the (|android.content.pm.ResolveInfo|) and 
(|android.content.pm.ResolveInfo|) resources will be loaded from this package, 
rather than the one containing the resolved component. 


*android.content.pm.ServiceInfo_android.content.pm.ResolveInfo.serviceInfo*

The service that corresponds to this resolution match, if this resolution is 
for a service. Exactly one of (|android.content.pm.ResolveInfo|) , 
(|android.content.pm.ResolveInfo|) , or (|android.content.pm.ResolveInfo|) will 
be non-null. 


*int_android.content.pm.ResolveInfo.specificIndex*

Only set when returned by (|android.content.pm.PackageManager|) , this tells 
you which of the given specific intents this result came from. 0 is the first 
in the list, < 0 means it came from the generic Intent query. 


*boolean_android.content.pm.ResolveInfo.system*





*android.content.pm.ResolveInfo()*

public ResolveInfo()




*android.content.pm.ResolveInfo(ResolveInfo)*

public ResolveInfo(android.content.pm.ResolveInfo orig)




*android.content.pm.ResolveInfo.describeContents()*

public int describeContents()





*android.content.pm.ResolveInfo.dump(Printer,String)*

public void dump(
  android.util.Printer pw,
  java.lang.String prefix)





*android.content.pm.ResolveInfo.getIconResource()*

public final int getIconResource()

Return the icon resource identifier to use for this match. If the match defines 
an icon, that is used; else if the activity defines an icon, that is used; 
else, the application icon is used. 



    Returns: The icon associated with this match. 

*android.content.pm.ResolveInfo.loadIcon(PackageManager)*

public Drawable loadIcon(android.content.pm.PackageManager pm)

Retrieve the current graphical icon associated with this resolution. This will 
call back on the given PackageManager to load the icon from the application. 


    pm - A PackageManager from which the icon can be loaded; usually the PackageManager 
       from which you originally retrieved this item. 

    Returns: Returns a Drawable containing the resolution's icon. If the item does not have 
             an icon, the default activity icon is returned. 

*android.content.pm.ResolveInfo.loadLabel(PackageManager)*

public |java.lang.CharSequence| loadLabel(android.content.pm.PackageManager pm)

Retrieve the current textual label associated with this resolution. This will 
call back on the given PackageManager to load the label from the application. 


    pm - A PackageManager from which the label can be loaded; usually the PackageManager 
       from which you originally retrieved this item. 

    Returns: Returns a CharSequence containing the resolutions's label. If the item does not 
             have a label, its name is returned. 

*android.content.pm.ResolveInfo.toString()*

public |java.lang.String| toString()





*android.content.pm.ResolveInfo.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel dest,
  int parcelableFlags)






