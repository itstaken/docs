*android.media.SoundPool* *SoundPool* 

public class SoundPool
  extends    |java.lang.Object|

|android.media.SoundPool_Description|
|android.media.SoundPool_Fields|
|android.media.SoundPool_Constructors|
|android.media.SoundPool_Methods|

================================================================================

*android.media.SoundPool_Constructors*
|android.media.SoundPool(int,int,int)|

*android.media.SoundPool_Methods*
|android.media.SoundPool.autoPause()|
|android.media.SoundPool.autoResume()|
|android.media.SoundPool.load(AssetFileDescriptor,int)|
|android.media.SoundPool.load(Context,int,int)|
|android.media.SoundPool.load(FileDescriptor,long,long,int)|
|android.media.SoundPool.load(String,int)|
|android.media.SoundPool.pause(int)|
|android.media.SoundPool.play(int,float,float,int,int,float)|
|android.media.SoundPool.release()|
|android.media.SoundPool.resume(int)|
|android.media.SoundPool.setLoop(int,int)|
|android.media.SoundPool.setOnLoadCompleteListener(SoundPool.OnLoadCompleteListener)|
|android.media.SoundPool.setPriority(int,int)|
|android.media.SoundPool.setRate(int,float)|
|android.media.SoundPool.setVolume(int,float,float)|
|android.media.SoundPool.stop(int)|
|android.media.SoundPool.unload(int)|

*android.media.SoundPool_Description*





*android.media.SoundPool(int,int,int)*

public SoundPool(
  int maxStreams,
  int streamType,
  int srcQuality)




*android.media.SoundPool.autoPause()*

public final void autoPause()





*android.media.SoundPool.autoResume()*

public final void autoResume()





*android.media.SoundPool.load(AssetFileDescriptor,int)*

public int load(
  android.content.res.AssetFileDescriptor afd,
  int priority)





*android.media.SoundPool.load(Context,int,int)*

public int load(
  android.content.Context context,
  int resId,
  int priority)





*android.media.SoundPool.load(FileDescriptor,long,long,int)*

public int load(
  java.io.FileDescriptor fd,
  long offset,
  long length,
  int priority)





*android.media.SoundPool.load(String,int)*

public int load(
  java.lang.String path,
  int priority)





*android.media.SoundPool.pause(int)*

public final void pause(int streamID)





*android.media.SoundPool.play(int,float,float,int,int,float)*

public final int play(
  int soundID,
  float leftVolume,
  float rightVolume,
  int priority,
  int loop,
  float rate)





*android.media.SoundPool.release()*

public final void release()





*android.media.SoundPool.resume(int)*

public final void resume(int streamID)





*android.media.SoundPool.setLoop(int,int)*

public final void setLoop(
  int streamID,
  int loop)





*android.media.SoundPool.setOnLoadCompleteListener(SoundPool.OnLoadCompleteListener)*

public void setOnLoadCompleteListener(android.media.SoundPool.OnLoadCompleteListener listener)





*android.media.SoundPool.setPriority(int,int)*

public final void setPriority(
  int streamID,
  int priority)





*android.media.SoundPool.setRate(int,float)*

public final void setRate(
  int streamID,
  float rate)





*android.media.SoundPool.setVolume(int,float,float)*

public final void setVolume(
  int streamID,
  float leftVolume,
  float rightVolume)





*android.media.SoundPool.stop(int)*

public final void stop(int streamID)





*android.media.SoundPool.unload(int)*

public final boolean unload(int soundID)






