*android.widget.RatingBar* *RatingBar* A RatingBar is an extension of SeekBar an

public class RatingBar
  extends    |android.widget.AbsSeekBar|

|android.widget.RatingBar_Description|
|android.widget.RatingBar_Fields|
|android.widget.RatingBar_Constructors|
|android.widget.RatingBar_Methods|

================================================================================

*android.widget.RatingBar_Constructors*
|android.widget.RatingBar(Context)|
|android.widget.RatingBar(Context,AttributeSet)|
|android.widget.RatingBar(Context,AttributeSet,int)|

*android.widget.RatingBar_Methods*
|android.widget.RatingBar.getNumStars()|Returns the number of stars shown.
|android.widget.RatingBar.getOnRatingBarChangeListener()|
|android.widget.RatingBar.getRating()|Gets the current rating (number of stars 
|android.widget.RatingBar.getStepSize()|Gets the step size of this rating bar.
|android.widget.RatingBar.isIndicator()|
|android.widget.RatingBar.onInitializeAccessibilityEvent(AccessibilityEvent)|
|android.widget.RatingBar.onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo)|
|android.widget.RatingBar.onMeasure(int,int)|
|android.widget.RatingBar.setIsIndicator(boolean)|Whether this rating bar shoul
|android.widget.RatingBar.setMax(int)|
|android.widget.RatingBar.setNumStars(int)|Sets the number of stars to show.
|android.widget.RatingBar.setOnRatingBarChangeListener(RatingBar.OnRatingBarChangeListener)|
|android.widget.RatingBar.setRating(float)|Sets the rating (the number of stars
|android.widget.RatingBar.setStepSize(float)|Sets the step size (granularity) o

*android.widget.RatingBar_Description*

A RatingBar is an extension of SeekBar and ProgressBar that shows a rating in 
stars. The user can touch/drag or use arrow keys to set the rating when using 
the default size RatingBar. The smaller RatingBar style ( (|android.R.attr|) ) 
and the larger indicator-only style ( (|android.R.attr|) ) do not support user 
interaction and should only be used as indicators. 

When using a RatingBar that supports user interaction, placing widgets to the 
left or right of the RatingBar is discouraged. 

The number of stars set (via (|android.widget.RatingBar|) or in an XML layout) 
will be shown when the layout width is set to wrap content (if another layout 
width is set, the results may be unpredictable). 

The secondary progress should not be modified by the client as it is used 
internally as the background for a fractionally filled star. 



*android.widget.RatingBar(Context)*

public RatingBar(android.content.Context context)




*android.widget.RatingBar(Context,AttributeSet)*

public RatingBar(
  android.content.Context context,
  android.util.AttributeSet attrs)




*android.widget.RatingBar(Context,AttributeSet,int)*

public RatingBar(
  android.content.Context context,
  android.util.AttributeSet attrs,
  int defStyle)




*android.widget.RatingBar.getNumStars()*

public int getNumStars()

Returns the number of stars shown. 



    Returns: The number of stars shown. 

*android.widget.RatingBar.getOnRatingBarChangeListener()*

public |android.widget.RatingBar.OnRatingBarChangeListener| getOnRatingBarChangeListener()





    Returns: The listener (may be null) that is listening for rating change events. 

*android.widget.RatingBar.getRating()*

public float getRating()

Gets the current rating (number of stars filled). 



    Returns: The current rating. 

*android.widget.RatingBar.getStepSize()*

public float getStepSize()

Gets the step size of this rating bar. 



    Returns: The step size. 

*android.widget.RatingBar.isIndicator()*

public boolean isIndicator()





    Returns: Whether this rating bar is only an indicator. 

*android.widget.RatingBar.onInitializeAccessibilityEvent(AccessibilityEvent)*

public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent event)





*android.widget.RatingBar.onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo)*

public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo info)





*android.widget.RatingBar.onMeasure(int,int)*

protected synchronized void onMeasure(
  int widthMeasureSpec,
  int heightMeasureSpec)





*android.widget.RatingBar.setIsIndicator(boolean)*

public void setIsIndicator(boolean isIndicator)

Whether this rating bar should only be an indicator (thus non-changeable by the 
user). 


    isIndicator - Whether it should be an indicator. 

*android.widget.RatingBar.setMax(int)*

public synchronized void setMax(int max)





*android.widget.RatingBar.setNumStars(int)*

public void setNumStars(int numStars)

Sets the number of stars to show. In order for these to be shown properly, it 
is recommended the layout width of this widget be wrap content. 


    numStars - The number of stars. 

*android.widget.RatingBar.setOnRatingBarChangeListener(RatingBar.OnRatingBarChangeListener)*

public void setOnRatingBarChangeListener(android.widget.RatingBar.OnRatingBarChangeListener listener)

Sets the listener to be called when the rating changes. 


    listener - The listener. 

*android.widget.RatingBar.setRating(float)*

public void setRating(float rating)

Sets the rating (the number of stars filled). 


    rating - The rating to set. 

*android.widget.RatingBar.setStepSize(float)*

public void setStepSize(float stepSize)

Sets the step size (granularity) of this rating bar. 


    stepSize - The step size of this rating bar. For example, if half-star granularity is 
       wanted, this would be 0.5. 


