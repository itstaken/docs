*android.widget.AbsSpinner* *AbsSpinner* An abstract base class for spinner widg

public abstract class AbsSpinner
  extends    |android.widget.AdapterView|

|android.widget.AbsSpinner_Description|
|android.widget.AbsSpinner_Fields|
|android.widget.AbsSpinner_Constructors|
|android.widget.AbsSpinner_Methods|

================================================================================

*android.widget.AbsSpinner_Constructors*
|android.widget.AbsSpinner(Context)|
|android.widget.AbsSpinner(Context,AttributeSet)|
|android.widget.AbsSpinner(Context,AttributeSet,int)|

*android.widget.AbsSpinner_Methods*
|android.widget.AbsSpinner.generateDefaultLayoutParams()|
|android.widget.AbsSpinner.getAdapter()|
|android.widget.AbsSpinner.getCount()|
|android.widget.AbsSpinner.getSelectedView()|
|android.widget.AbsSpinner.onInitializeAccessibilityEvent(AccessibilityEvent)|
|android.widget.AbsSpinner.onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo)|
|android.widget.AbsSpinner.onMeasure(int,int)|
|android.widget.AbsSpinner.onRestoreInstanceState(Parcelable)|
|android.widget.AbsSpinner.onSaveInstanceState()|
|android.widget.AbsSpinner.pointToPosition(int,int)|Maps a point to a position 
|android.widget.AbsSpinner.requestLayout()|Override to prevent spamming ourselv
|android.widget.AbsSpinner.setAdapter(SpinnerAdapter)|The Adapter is used to pr
|android.widget.AbsSpinner.setSelection(int)|
|android.widget.AbsSpinner.setSelection(int,boolean)|Jump directly to a specifi

*android.widget.AbsSpinner_Description*

An abstract base class for spinner widgets. SDK users will probably not need to 
use this class. 



*android.widget.AbsSpinner(Context)*

public AbsSpinner(android.content.Context context)




*android.widget.AbsSpinner(Context,AttributeSet)*

public AbsSpinner(
  android.content.Context context,
  android.util.AttributeSet attrs)




*android.widget.AbsSpinner(Context,AttributeSet,int)*

public AbsSpinner(
  android.content.Context context,
  android.util.AttributeSet attrs,
  int defStyle)




*android.widget.AbsSpinner.generateDefaultLayoutParams()*

protected |android.view.ViewGroup.LayoutParams| generateDefaultLayoutParams()





*android.widget.AbsSpinner.getAdapter()*

public |android.widget.SpinnerAdapter| getAdapter()





*android.widget.AbsSpinner.getCount()*

public int getCount()





*android.widget.AbsSpinner.getSelectedView()*

public |android.view.View| getSelectedView()





*android.widget.AbsSpinner.onInitializeAccessibilityEvent(AccessibilityEvent)*

public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent event)





*android.widget.AbsSpinner.onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo)*

public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo info)





*android.widget.AbsSpinner.onMeasure(int,int)*

protected void onMeasure(
  int widthMeasureSpec,
  int heightMeasureSpec)





*android.widget.AbsSpinner.onRestoreInstanceState(Parcelable)*

public void onRestoreInstanceState(android.os.Parcelable state)





*android.widget.AbsSpinner.onSaveInstanceState()*

public |android.os.Parcelable| onSaveInstanceState()





*android.widget.AbsSpinner.pointToPosition(int,int)*

public int pointToPosition(
  int x,
  int y)

Maps a point to a position in the list. 


    x - X in local coordinate 
    y - Y in local coordinate 

    Returns: The position of the item which contains the specified point, or {@link 
             #INVALID_POSITION} if the point does not intersect an item. 

*android.widget.AbsSpinner.requestLayout()*

public void requestLayout()

Override to prevent spamming ourselves with layout requests as we place views 



*android.widget.AbsSpinner.setAdapter(SpinnerAdapter)*

public void setAdapter(android.widget.SpinnerAdapter adapter)

The Adapter is used to provide the data which backs this Spinner. It also 
provides methods to transform spinner items based on their position relative to 
the selected item. 


    adapter - The SpinnerAdapter to use for this Spinner 

*android.widget.AbsSpinner.setSelection(int)*

public void setSelection(int position)





*android.widget.AbsSpinner.setSelection(int,boolean)*

public void setSelection(
  int position,
  boolean animate)

Jump directly to a specific item in the adapter data. 




