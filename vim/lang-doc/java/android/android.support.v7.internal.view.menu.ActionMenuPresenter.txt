*android.support.v7.internal.view.menu.ActionMenuPresenter* *ActionMenuPresenter* 

public class ActionMenuPresenter
  extends    |android.support.v7.internal.view.menu.BaseMenuPresenter|

|android.support.v7.internal.view.menu.ActionMenuPresenter_Description|
|android.support.v7.internal.view.menu.ActionMenuPresenter_Fields|
|android.support.v7.internal.view.menu.ActionMenuPresenter_Constructors|
|android.support.v7.internal.view.menu.ActionMenuPresenter_Methods|

================================================================================

*android.support.v7.internal.view.menu.ActionMenuPresenter_Constructors*
|android.support.v7.internal.view.menu.ActionMenuPresenter(Context)|

*android.support.v7.internal.view.menu.ActionMenuPresenter_Methods*
|android.support.v7.internal.view.menu.ActionMenuPresenter.bindItemView(MenuItemImpl,MenuView.ItemView)|
|android.support.v7.internal.view.menu.ActionMenuPresenter.dismissPopupMenus()|
|android.support.v7.internal.view.menu.ActionMenuPresenter.filterLeftoverView(ViewGroup,int)|
|android.support.v7.internal.view.menu.ActionMenuPresenter.flagActionItems()|
|android.support.v7.internal.view.menu.ActionMenuPresenter.getItemView(MenuItemImpl,View,ViewGroup)|
|android.support.v7.internal.view.menu.ActionMenuPresenter.getMenuView(ViewGroup)|
|android.support.v7.internal.view.menu.ActionMenuPresenter.hideOverflowMenu()|H
|android.support.v7.internal.view.menu.ActionMenuPresenter.hideSubMenus()|Dismi
|android.support.v7.internal.view.menu.ActionMenuPresenter.initForMenu(Context,MenuBuilder)|
|android.support.v7.internal.view.menu.ActionMenuPresenter.isOverflowMenuShowing()|
|android.support.v7.internal.view.menu.ActionMenuPresenter.isOverflowReserved()|
|android.support.v7.internal.view.menu.ActionMenuPresenter.onCloseMenu(MenuBuilder,boolean)|
|android.support.v7.internal.view.menu.ActionMenuPresenter.onConfigurationChanged(Configuration)|
|android.support.v7.internal.view.menu.ActionMenuPresenter.onRestoreInstanceState(Parcelable)|
|android.support.v7.internal.view.menu.ActionMenuPresenter.onSaveInstanceState()|
|android.support.v7.internal.view.menu.ActionMenuPresenter.onSubMenuSelected(SubMenuBuilder)|
|android.support.v7.internal.view.menu.ActionMenuPresenter.onSubUiVisibilityChanged(boolean)|
|android.support.v7.internal.view.menu.ActionMenuPresenter.setExpandedActionViewsExclusive(boolean)|
|android.support.v7.internal.view.menu.ActionMenuPresenter.setItemLimit(int)|
|android.support.v7.internal.view.menu.ActionMenuPresenter.setReserveOverflow(boolean)|
|android.support.v7.internal.view.menu.ActionMenuPresenter.setWidthLimit(int,boolean)|
|android.support.v7.internal.view.menu.ActionMenuPresenter.shouldIncludeItem(int,MenuItemImpl)|
|android.support.v7.internal.view.menu.ActionMenuPresenter.showOverflowMenu()|D
|android.support.v7.internal.view.menu.ActionMenuPresenter.updateMenuView(boolean)|

*android.support.v7.internal.view.menu.ActionMenuPresenter_Description*

MenuPresenter for building action menus as seen in the action bar and action 
modes. 



*android.support.v7.internal.view.menu.ActionMenuPresenter(Context)*

public ActionMenuPresenter(Context context)




*android.support.v7.internal.view.menu.ActionMenuPresenter.bindItemView(MenuItemImpl,MenuView.ItemView)*

public void bindItemView(
  android.support.v7.internal.view.menu.MenuItemImpl item,
  android.support.v7.internal.view.menu.MenuView.ItemView itemView)





*android.support.v7.internal.view.menu.ActionMenuPresenter.dismissPopupMenus()*

public boolean dismissPopupMenus()

Dismiss all popup menus - overflow and submenus. 



    Returns: true if popups were dismissed, false otherwise. (This can be because none were 
             open.) 

*android.support.v7.internal.view.menu.ActionMenuPresenter.filterLeftoverView(ViewGroup,int)*

public boolean filterLeftoverView(
  ViewGroup parent,
  int childIndex)





*android.support.v7.internal.view.menu.ActionMenuPresenter.flagActionItems()*

public boolean flagActionItems()





*android.support.v7.internal.view.menu.ActionMenuPresenter.getItemView(MenuItemImpl,View,ViewGroup)*

public View getItemView(
  android.support.v7.internal.view.menu.MenuItemImpl item,
  View convertView,
  ViewGroup parent)





*android.support.v7.internal.view.menu.ActionMenuPresenter.getMenuView(ViewGroup)*

public |android.support.v7.internal.view.menu.MenuView| getMenuView(ViewGroup root)





*android.support.v7.internal.view.menu.ActionMenuPresenter.hideOverflowMenu()*

public boolean hideOverflowMenu()

Hide the overflow menu if it is currently showing. 



    Returns: true if the overflow menu was hidden, false otherwise. 

*android.support.v7.internal.view.menu.ActionMenuPresenter.hideSubMenus()*

public boolean hideSubMenus()

Dismiss all submenu popups. 



    Returns: true if popups were dismissed, false otherwise. (This can be because none were 
             open.) 

*android.support.v7.internal.view.menu.ActionMenuPresenter.initForMenu(Context,MenuBuilder)*

public void initForMenu(
  Context context,
  android.support.v7.internal.view.menu.MenuBuilder menu)





*android.support.v7.internal.view.menu.ActionMenuPresenter.isOverflowMenuShowing()*

public boolean isOverflowMenuShowing()





    Returns: true if the overflow menu is currently showing 

*android.support.v7.internal.view.menu.ActionMenuPresenter.isOverflowReserved()*

public boolean isOverflowReserved()





    Returns: true if space has been reserved in the action menu for an overflow item. 

*android.support.v7.internal.view.menu.ActionMenuPresenter.onCloseMenu(MenuBuilder,boolean)*

public void onCloseMenu(
  android.support.v7.internal.view.menu.MenuBuilder menu,
  boolean allMenusAreClosing)





*android.support.v7.internal.view.menu.ActionMenuPresenter.onConfigurationChanged(Configuration)*

public void onConfigurationChanged(Configuration newConfig)





*android.support.v7.internal.view.menu.ActionMenuPresenter.onRestoreInstanceState(Parcelable)*

public void onRestoreInstanceState(Parcelable state)





*android.support.v7.internal.view.menu.ActionMenuPresenter.onSaveInstanceState()*

public Parcelable onSaveInstanceState()





*android.support.v7.internal.view.menu.ActionMenuPresenter.onSubMenuSelected(SubMenuBuilder)*

public boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder subMenu)





*android.support.v7.internal.view.menu.ActionMenuPresenter.onSubUiVisibilityChanged(boolean)*

public void onSubUiVisibilityChanged(boolean isVisible)





*android.support.v7.internal.view.menu.ActionMenuPresenter.setExpandedActionViewsExclusive(boolean)*

public void setExpandedActionViewsExclusive(boolean isExclusive)





*android.support.v7.internal.view.menu.ActionMenuPresenter.setItemLimit(int)*

public void setItemLimit(int itemCount)





*android.support.v7.internal.view.menu.ActionMenuPresenter.setReserveOverflow(boolean)*

public void setReserveOverflow(boolean reserveOverflow)





*android.support.v7.internal.view.menu.ActionMenuPresenter.setWidthLimit(int,boolean)*

public void setWidthLimit(
  int width,
  boolean strict)





*android.support.v7.internal.view.menu.ActionMenuPresenter.shouldIncludeItem(int,MenuItemImpl)*

public boolean shouldIncludeItem(
  int childIndex,
  android.support.v7.internal.view.menu.MenuItemImpl item)





*android.support.v7.internal.view.menu.ActionMenuPresenter.showOverflowMenu()*

public boolean showOverflowMenu()

Display the overflow menu if one is present. 



    Returns: true if the overflow menu was shown, false otherwise. 

*android.support.v7.internal.view.menu.ActionMenuPresenter.updateMenuView(boolean)*

public void updateMenuView(boolean cleared)






