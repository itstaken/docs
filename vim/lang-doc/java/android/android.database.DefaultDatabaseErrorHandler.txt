*android.database.DefaultDatabaseErrorHandler* *DefaultDatabaseErrorHandler* Def

public final class DefaultDatabaseErrorHandler
  extends    |java.lang.Object|
  implements |android.database.DatabaseErrorHandler|

|android.database.DefaultDatabaseErrorHandler_Description|
|android.database.DefaultDatabaseErrorHandler_Fields|
|android.database.DefaultDatabaseErrorHandler_Constructors|
|android.database.DefaultDatabaseErrorHandler_Methods|

================================================================================

*android.database.DefaultDatabaseErrorHandler_Constructors*
|android.database.DefaultDatabaseErrorHandler()|

*android.database.DefaultDatabaseErrorHandler_Methods*
|android.database.DefaultDatabaseErrorHandler.onCorruption(SQLiteDatabase)|defi

*android.database.DefaultDatabaseErrorHandler_Description*

Default class used to define the actions to take when the database corruption 
is reported by sqlite. 

An application can specify an implementation of 
(|android.database.DatabaseErrorHandler|) on the following: 

(|android.database.sqlite.SQLiteDatabase|) 
(|android.database.sqlite.SQLiteDatabase|) 

The specified (|android.database.DatabaseErrorHandler|) is used to handle 
database corruption errors, if they occur. 

If null is specified for DatabaeErrorHandler param in the above calls, then 
this class is used as the default (|android.database.DatabaseErrorHandler|) . 



*android.database.DefaultDatabaseErrorHandler()*

public DefaultDatabaseErrorHandler()




*android.database.DefaultDatabaseErrorHandler.onCorruption(SQLiteDatabase)*

public void onCorruption(android.database.sqlite.SQLiteDatabase dbObj)

defines the default method to be invoked when database corruption is detected. 


    dbObj - the {@link SQLiteDatabase} object representing the database on which corruption 
       is detected. 


