*android.hardware.display.VirtualDisplay* *VirtualDisplay* Represents a virtual 

public final class VirtualDisplay
  extends    |java.lang.Object|

|android.hardware.display.VirtualDisplay_Description|
|android.hardware.display.VirtualDisplay_Fields|
|android.hardware.display.VirtualDisplay_Constructors|
|android.hardware.display.VirtualDisplay_Methods|

================================================================================

*android.hardware.display.VirtualDisplay_Methods*
|android.hardware.display.VirtualDisplay.getDisplay()|Gets the virtual display.
|android.hardware.display.VirtualDisplay.release()|Releases the virtual display
|android.hardware.display.VirtualDisplay.toString()|

*android.hardware.display.VirtualDisplay_Description*

Represents a virtual display. The content of a virtual display is rendered to a 
(|android.view.Surface|) that you must provide to 
createVirtualDisplay()(|android.hardware.display.DisplayManager|) . Because a 
virtual display renders to a surface provided by the application, it will be 
released automatically when the process terminates and all remaining windows on 
it will be forcibly removed. However, you should also explicitly call 
(|android.hardware.display.VirtualDisplay|) when you're done with it. 



*android.hardware.display.VirtualDisplay.getDisplay()*

public |android.view.Display| getDisplay()

Gets the virtual display. 



*android.hardware.display.VirtualDisplay.release()*

public void release()

Releases the virtual display and destroys its underlying surface. 

All remaining windows on the virtual display will be forcibly removed as part 
of releasing the virtual display. 



*android.hardware.display.VirtualDisplay.toString()*

public |java.lang.String| toString()






