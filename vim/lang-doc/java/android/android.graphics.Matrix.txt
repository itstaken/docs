*android.graphics.Matrix* *Matrix* 

public class Matrix
  extends    |java.lang.Object|

|android.graphics.Matrix_Description|
|android.graphics.Matrix_Fields|
|android.graphics.Matrix_Constructors|
|android.graphics.Matrix_Methods|

================================================================================

*android.graphics.Matrix_Fields*
|int_android.graphics.Matrix.MPERSP_0|
|int_android.graphics.Matrix.MPERSP_1|
|int_android.graphics.Matrix.MPERSP_2|
|int_android.graphics.Matrix.MSCALE_X|
|int_android.graphics.Matrix.MSCALE_Y|
|int_android.graphics.Matrix.MSKEW_X|
|int_android.graphics.Matrix.MSKEW_Y|
|int_android.graphics.Matrix.MTRANS_X|
|int_android.graphics.Matrix.MTRANS_Y|

*android.graphics.Matrix_Constructors*
|android.graphics.Matrix()|
|android.graphics.Matrix(Matrix)|

*android.graphics.Matrix_Methods*
|android.graphics.Matrix.equals(Object)|
|android.graphics.Matrix.finalize()|
|android.graphics.Matrix.getValues(float[])|
|android.graphics.Matrix.hashCode()|
|android.graphics.Matrix.invert(Matrix)|
|android.graphics.Matrix.isIdentity()|
|android.graphics.Matrix.mapPoints(float[])|
|android.graphics.Matrix.mapPoints(float[],float[])|
|android.graphics.Matrix.mapPoints(float[],int,float[],int,int)|
|android.graphics.Matrix.mapRadius(float)|
|android.graphics.Matrix.mapRect(RectF)|
|android.graphics.Matrix.mapRect(RectF,RectF)|
|android.graphics.Matrix.mapVectors(float[])|
|android.graphics.Matrix.mapVectors(float[],float[])|
|android.graphics.Matrix.mapVectors(float[],int,float[],int,int)|
|android.graphics.Matrix.postConcat(Matrix)|
|android.graphics.Matrix.postRotate(float)|
|android.graphics.Matrix.postRotate(float,float,float)|
|android.graphics.Matrix.postScale(float,float)|
|android.graphics.Matrix.postScale(float,float,float,float)|
|android.graphics.Matrix.postSkew(float,float)|
|android.graphics.Matrix.postSkew(float,float,float,float)|
|android.graphics.Matrix.postTranslate(float,float)|
|android.graphics.Matrix.preConcat(Matrix)|
|android.graphics.Matrix.preRotate(float)|
|android.graphics.Matrix.preRotate(float,float,float)|
|android.graphics.Matrix.preScale(float,float)|
|android.graphics.Matrix.preScale(float,float,float,float)|
|android.graphics.Matrix.preSkew(float,float)|
|android.graphics.Matrix.preSkew(float,float,float,float)|
|android.graphics.Matrix.preTranslate(float,float)|
|android.graphics.Matrix.rectStaysRect()|
|android.graphics.Matrix.reset()|
|android.graphics.Matrix.set(Matrix)|
|android.graphics.Matrix.setConcat(Matrix,Matrix)|
|android.graphics.Matrix.setPolyToPoly(float[],int,float[],int,int)|
|android.graphics.Matrix.setRectToRect(RectF,RectF,Matrix.ScaleToFit)|
|android.graphics.Matrix.setRotate(float)|
|android.graphics.Matrix.setRotate(float,float,float)|
|android.graphics.Matrix.setScale(float,float)|
|android.graphics.Matrix.setScale(float,float,float,float)|
|android.graphics.Matrix.setSinCos(float,float)|
|android.graphics.Matrix.setSinCos(float,float,float,float)|
|android.graphics.Matrix.setSkew(float,float)|
|android.graphics.Matrix.setSkew(float,float,float,float)|
|android.graphics.Matrix.setTranslate(float,float)|
|android.graphics.Matrix.setValues(float[])|
|android.graphics.Matrix.toShortString()|
|android.graphics.Matrix.toString()|

*android.graphics.Matrix_Description*





*int_android.graphics.Matrix.MPERSP_0*




*int_android.graphics.Matrix.MPERSP_1*




*int_android.graphics.Matrix.MPERSP_2*




*int_android.graphics.Matrix.MSCALE_X*




*int_android.graphics.Matrix.MSCALE_Y*




*int_android.graphics.Matrix.MSKEW_X*




*int_android.graphics.Matrix.MSKEW_Y*




*int_android.graphics.Matrix.MTRANS_X*




*int_android.graphics.Matrix.MTRANS_Y*





*android.graphics.Matrix()*

public Matrix()




*android.graphics.Matrix(Matrix)*

public Matrix(android.graphics.Matrix src)




*android.graphics.Matrix.equals(Object)*

public boolean equals(java.lang.Object obj)





*android.graphics.Matrix.finalize()*

protected void finalize()
  throws |java.lang.Throwable|
         




*android.graphics.Matrix.getValues(float[])*

public void getValues(float[] values)





*android.graphics.Matrix.hashCode()*

public int hashCode()





*android.graphics.Matrix.invert(Matrix)*

public boolean invert(android.graphics.Matrix inverse)





*android.graphics.Matrix.isIdentity()*

public boolean isIdentity()





*android.graphics.Matrix.mapPoints(float[])*

public void mapPoints(float[] pts)





*android.graphics.Matrix.mapPoints(float[],float[])*

public void mapPoints(
  float[] dst,
  float[] src)





*android.graphics.Matrix.mapPoints(float[],int,float[],int,int)*

public void mapPoints(
  float[] dst,
  int dstIndex,
  float[] src,
  int srcIndex,
  int pointCount)





*android.graphics.Matrix.mapRadius(float)*

public float mapRadius(float radius)





*android.graphics.Matrix.mapRect(RectF)*

public boolean mapRect(android.graphics.RectF rect)





*android.graphics.Matrix.mapRect(RectF,RectF)*

public boolean mapRect(
  android.graphics.RectF dst,
  android.graphics.RectF src)





*android.graphics.Matrix.mapVectors(float[])*

public void mapVectors(float[] vecs)





*android.graphics.Matrix.mapVectors(float[],float[])*

public void mapVectors(
  float[] dst,
  float[] src)





*android.graphics.Matrix.mapVectors(float[],int,float[],int,int)*

public void mapVectors(
  float[] dst,
  int dstIndex,
  float[] src,
  int srcIndex,
  int vectorCount)





*android.graphics.Matrix.postConcat(Matrix)*

public boolean postConcat(android.graphics.Matrix other)





*android.graphics.Matrix.postRotate(float)*

public boolean postRotate(float degrees)





*android.graphics.Matrix.postRotate(float,float,float)*

public boolean postRotate(
  float degrees,
  float px,
  float py)





*android.graphics.Matrix.postScale(float,float)*

public boolean postScale(
  float sx,
  float sy)





*android.graphics.Matrix.postScale(float,float,float,float)*

public boolean postScale(
  float sx,
  float sy,
  float px,
  float py)





*android.graphics.Matrix.postSkew(float,float)*

public boolean postSkew(
  float kx,
  float ky)





*android.graphics.Matrix.postSkew(float,float,float,float)*

public boolean postSkew(
  float kx,
  float ky,
  float px,
  float py)





*android.graphics.Matrix.postTranslate(float,float)*

public boolean postTranslate(
  float dx,
  float dy)





*android.graphics.Matrix.preConcat(Matrix)*

public boolean preConcat(android.graphics.Matrix other)





*android.graphics.Matrix.preRotate(float)*

public boolean preRotate(float degrees)





*android.graphics.Matrix.preRotate(float,float,float)*

public boolean preRotate(
  float degrees,
  float px,
  float py)





*android.graphics.Matrix.preScale(float,float)*

public boolean preScale(
  float sx,
  float sy)





*android.graphics.Matrix.preScale(float,float,float,float)*

public boolean preScale(
  float sx,
  float sy,
  float px,
  float py)





*android.graphics.Matrix.preSkew(float,float)*

public boolean preSkew(
  float kx,
  float ky)





*android.graphics.Matrix.preSkew(float,float,float,float)*

public boolean preSkew(
  float kx,
  float ky,
  float px,
  float py)





*android.graphics.Matrix.preTranslate(float,float)*

public boolean preTranslate(
  float dx,
  float dy)





*android.graphics.Matrix.rectStaysRect()*

public boolean rectStaysRect()





*android.graphics.Matrix.reset()*

public void reset()





*android.graphics.Matrix.set(Matrix)*

public void set(android.graphics.Matrix src)





*android.graphics.Matrix.setConcat(Matrix,Matrix)*

public boolean setConcat(
  android.graphics.Matrix a,
  android.graphics.Matrix b)





*android.graphics.Matrix.setPolyToPoly(float[],int,float[],int,int)*

public boolean setPolyToPoly(
  float[] src,
  int srcIndex,
  float[] dst,
  int dstIndex,
  int pointCount)





*android.graphics.Matrix.setRectToRect(RectF,RectF,Matrix.ScaleToFit)*

public boolean setRectToRect(
  android.graphics.RectF src,
  android.graphics.RectF dst,
  android.graphics.Matrix.ScaleToFit stf)





*android.graphics.Matrix.setRotate(float)*

public void setRotate(float degrees)





*android.graphics.Matrix.setRotate(float,float,float)*

public void setRotate(
  float degrees,
  float px,
  float py)





*android.graphics.Matrix.setScale(float,float)*

public void setScale(
  float sx,
  float sy)





*android.graphics.Matrix.setScale(float,float,float,float)*

public void setScale(
  float sx,
  float sy,
  float px,
  float py)





*android.graphics.Matrix.setSinCos(float,float)*

public void setSinCos(
  float sinValue,
  float cosValue)





*android.graphics.Matrix.setSinCos(float,float,float,float)*

public void setSinCos(
  float sinValue,
  float cosValue,
  float px,
  float py)





*android.graphics.Matrix.setSkew(float,float)*

public void setSkew(
  float kx,
  float ky)





*android.graphics.Matrix.setSkew(float,float,float,float)*

public void setSkew(
  float kx,
  float ky,
  float px,
  float py)





*android.graphics.Matrix.setTranslate(float,float)*

public void setTranslate(
  float dx,
  float dy)





*android.graphics.Matrix.setValues(float[])*

public void setValues(float[] values)





*android.graphics.Matrix.toShortString()*

public |java.lang.String| toShortString()





*android.graphics.Matrix.toString()*

public |java.lang.String| toString()






