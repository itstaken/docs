*android.widget.TableRow* *TableRow* A layout that arranges its children horizon

public class TableRow
  extends    |android.widget.LinearLayout|

|android.widget.TableRow_Description|
|android.widget.TableRow_Fields|
|android.widget.TableRow_Constructors|
|android.widget.TableRow_Methods|

================================================================================

*android.widget.TableRow_Constructors*
|android.widget.TableRow(Context)|Creates a new TableRow for the given context.
|android.widget.TableRow(Context,AttributeSet)|Creates a new TableRow for the g

*android.widget.TableRow_Methods*
|android.widget.TableRow.checkLayoutParams(ViewGroup.LayoutParams)|
|android.widget.TableRow.generateDefaultLayoutParams()|Returns a set of layout 
|android.widget.TableRow.generateLayoutParams(AttributeSet)|
|android.widget.TableRow.generateLayoutParams(ViewGroup.LayoutParams)|
|android.widget.TableRow.getVirtualChildAt(int)|
|android.widget.TableRow.getVirtualChildCount()|
|android.widget.TableRow.onInitializeAccessibilityEvent(AccessibilityEvent)|
|android.widget.TableRow.onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo)|
|android.widget.TableRow.onLayout(boolean,int,int,int,int)|
|android.widget.TableRow.onMeasure(int,int)|
|android.widget.TableRow.setOnHierarchyChangeListener(ViewGroup.OnHierarchyChangeListener)|

*android.widget.TableRow_Description*

A layout that arranges its children horizontally. A TableRow should always be 
used as a child of a (|android.widget.TableLayout|) . If a TableRow's parent is 
not a TableLayout, the TableRow will behave as an horizontal 
(|android.widget.LinearLayout|) . 

The children of a TableRow do not need to specify the layout_width and 
layout_height attributes in the XML file. TableRow always enforces those values 
to be respectively (|android.widget.TableLayout.LayoutParams|) and 
(|android.widget.TableLayout.LayoutParams|) . 

Also see 
android.widget.TableRow.LayoutParams(|android.widget.TableRow.LayoutParams|) 
for layout attributes 



*android.widget.TableRow(Context)*

public TableRow(android.content.Context context)

Creates a new TableRow for the given context. 

    context - the application environment 

*android.widget.TableRow(Context,AttributeSet)*

public TableRow(
  android.content.Context context,
  android.util.AttributeSet attrs)

Creates a new TableRow for the given context and with the specified set 
attributes. 

    context - the application environment 
    attrs - a collection of attributes 

*android.widget.TableRow.checkLayoutParams(ViewGroup.LayoutParams)*

protected boolean checkLayoutParams(android.view.ViewGroup.LayoutParams p)





*android.widget.TableRow.generateDefaultLayoutParams()*

protected |android.widget.LinearLayout.LayoutParams| generateDefaultLayoutParams()

Returns a set of layout parameters with a width of 
(|android.view.ViewGroup.LayoutParams|) , a height of 
(|android.view.ViewGroup.LayoutParams|) and no spanning. 



*android.widget.TableRow.generateLayoutParams(AttributeSet)*

public |android.widget.TableRow.LayoutParams| generateLayoutParams(android.util.AttributeSet attrs)





*android.widget.TableRow.generateLayoutParams(ViewGroup.LayoutParams)*

protected |android.widget.LinearLayout.LayoutParams| generateLayoutParams(android.view.ViewGroup.LayoutParams p)





*android.widget.TableRow.getVirtualChildAt(int)*

public |android.view.View| getVirtualChildAt(int i)





*android.widget.TableRow.getVirtualChildCount()*

public int getVirtualChildCount()





*android.widget.TableRow.onInitializeAccessibilityEvent(AccessibilityEvent)*

public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent event)





*android.widget.TableRow.onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo)*

public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo info)





*android.widget.TableRow.onLayout(boolean,int,int,int,int)*

protected void onLayout(
  boolean changed,
  int l,
  int t,
  int r,
  int b)





*android.widget.TableRow.onMeasure(int,int)*

protected void onMeasure(
  int widthMeasureSpec,
  int heightMeasureSpec)





*android.widget.TableRow.setOnHierarchyChangeListener(ViewGroup.OnHierarchyChangeListener)*

public void setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener listener)






