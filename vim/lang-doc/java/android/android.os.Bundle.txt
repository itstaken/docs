*android.os.Bundle* *Bundle* A mapping from String values to various Parcelable 

public final class Bundle
  extends    |java.lang.Object|
  implements |android.os.Parcelable|
             |java.lang.Cloneable|

|android.os.Bundle_Description|
|android.os.Bundle_Fields|
|android.os.Bundle_Constructors|
|android.os.Bundle_Methods|

================================================================================

*android.os.Bundle_Fields*
|android.os.Parcelable.Creator<android.os.Bundle>_android.os.Bundle.CREATOR|
|android.os.Bundle_android.os.Bundle.EMPTY|

*android.os.Bundle_Constructors*
|android.os.Bundle()|Constructs a new, empty Bundle.
|android.os.Bundle(Bundle)|Constructs a Bundle containing a copy of the mapping
|android.os.Bundle(ClassLoader)|Constructs a new, empty Bundle that uses a spec
|android.os.Bundle(int)|Constructs a new, empty Bundle sized to hold the given 

*android.os.Bundle_Methods*
|android.os.Bundle.clear()|Removes all elements from the mapping of this Bundle
|android.os.Bundle.clone()|Clones the current Bundle.
|android.os.Bundle.containsKey(String)|Returns true if the given key is contain
|android.os.Bundle.describeContents()|Report the nature of this Parcelable's co
|android.os.Bundle.forPair(String,String)|Make a Bundle for a single key/value 
|android.os.Bundle.get(String)|Returns the entry with the given key as an objec
|android.os.Bundle.getBinder(String)|Returns the value associated with the give
|android.os.Bundle.getBoolean(String)|Returns the value associated with the giv
|android.os.Bundle.getBoolean(String,boolean)|Returns the value associated with
|android.os.Bundle.getBooleanArray(String)|Returns the value associated with th
|android.os.Bundle.getBundle(String)|Returns the value associated with the give
|android.os.Bundle.getByte(String)|Returns the value associated with the given 
|android.os.Bundle.getByte(String,byte)|Returns the value associated with the g
|android.os.Bundle.getByteArray(String)|Returns the value associated with the g
|android.os.Bundle.getChar(String)|Returns the value associated with the given 
|android.os.Bundle.getChar(String,char)|Returns the value associated with the g
|android.os.Bundle.getCharArray(String)|Returns the value associated with the g
|android.os.Bundle.getCharSequence(String)|Returns the value associated with th
|android.os.Bundle.getCharSequence(String,CharSequence)|Returns the value assoc
|android.os.Bundle.getCharSequenceArray(String)|Returns the value associated wi
|android.os.Bundle.getCharSequenceArrayList(String)|Returns the value associate
|android.os.Bundle.getClassLoader()|Return the ClassLoader currently associated
|android.os.Bundle.getDouble(String)|Returns the value associated with the give
|android.os.Bundle.getDouble(String,double)|Returns the value associated with t
|android.os.Bundle.getDoubleArray(String)|Returns the value associated with the
|android.os.Bundle.getFloat(String)|Returns the value associated with the given
|android.os.Bundle.getFloat(String,float)|Returns the value associated with the
|android.os.Bundle.getFloatArray(String)|Returns the value associated with the 
|android.os.Bundle.getIBinder(String)|Returns the value associated with the giv
|android.os.Bundle.getInt(String)|Returns the value associated with the given k
|android.os.Bundle.getInt(String,int)|Returns the value associated with the giv
|android.os.Bundle.getIntArray(String)|Returns the value associated with the gi
|android.os.Bundle.getIntegerArrayList(String)|Returns the value associated wit
|android.os.Bundle.getLong(String)|Returns the value associated with the given 
|android.os.Bundle.getLong(String,long)|Returns the value associated with the g
|android.os.Bundle.getLongArray(String)|Returns the value associated with the g
|android.os.Bundle.getPairValue()|TODO: optimize this later (getting just the v
|android.os.Bundle.getParcelable(String)|Returns the value associated with the 
|android.os.Bundle.getParcelableArray(String)|Returns the value associated with
|android.os.Bundle.getParcelableArrayList(String)|Returns the value associated 
|android.os.Bundle.getSerializable(String)|Returns the value associated with th
|android.os.Bundle.getShort(String)|Returns the value associated with the given
|android.os.Bundle.getShort(String,short)|Returns the value associated with the
|android.os.Bundle.getShortArray(String)|Returns the value associated with the 
|android.os.Bundle.getSparseParcelableArray(String)|Returns the value associate
|android.os.Bundle.getString(String)|Returns the value associated with the give
|android.os.Bundle.getString(String,String)|Returns the value associated with t
|android.os.Bundle.getStringArray(String)|Returns the value associated with the
|android.os.Bundle.getStringArrayList(String)|Returns the value associated with
|android.os.Bundle.hasFileDescriptors()|Reports whether the bundle contains any
|android.os.Bundle.isEmpty()|Returns true if the mapping of this Bundle is empt
|android.os.Bundle.isParcelled()|
|android.os.Bundle.keySet()|Returns a Set containing the Strings used as keys i
|android.os.Bundle.putAll(Bundle)|Inserts all mappings from the given Bundle in
|android.os.Bundle.putBinder(String,IBinder)|Inserts anIBindervalue into the ma
|android.os.Bundle.putBoolean(String,boolean)|Inserts a Boolean value into the 
|android.os.Bundle.putBooleanArray(String,boolean[])|Inserts a boolean array va
|android.os.Bundle.putBundle(String,Bundle)|Inserts a Bundle value into the map
|android.os.Bundle.putByte(String,byte)|Inserts a byte value into the mapping o
|android.os.Bundle.putByteArray(String,byte[])|Inserts a byte array value into 
|android.os.Bundle.putChar(String,char)|Inserts a char value into the mapping o
|android.os.Bundle.putCharArray(String,char[])|Inserts a char array value into 
|android.os.Bundle.putCharSequence(String,CharSequence)|Inserts a CharSequence 
|android.os.Bundle.putCharSequenceArray(String,CharSequence[])|Inserts a CharSe
|android.os.Bundle.putCharSequenceArrayList(String,ArrayList<CharSequence>)|Ins
|android.os.Bundle.putDouble(String,double)|Inserts a double value into the map
|android.os.Bundle.putDoubleArray(String,double[])|Inserts a double array value
|android.os.Bundle.putFloat(String,float)|Inserts a float value into the mappin
|android.os.Bundle.putFloatArray(String,float[])|Inserts a float array value in
|android.os.Bundle.putIBinder(String,IBinder)|Inserts an IBinder value into the
|android.os.Bundle.putInt(String,int)|Inserts an int value into the mapping of 
|android.os.Bundle.putIntArray(String,int[])|Inserts an int array value into th
|android.os.Bundle.putIntegerArrayList(String,ArrayList<Integer>)|Inserts an Ar
|android.os.Bundle.putLong(String,long)|Inserts a long value into the mapping o
|android.os.Bundle.putLongArray(String,long[])|Inserts a long array value into 
|android.os.Bundle.putParcelable(String,Parcelable)|Inserts a Parcelable value 
|android.os.Bundle.putParcelableArray(String,Parcelable[])|Inserts an array of 
|android.os.Bundle.putParcelableArrayList(String,ArrayList<?extendsParcelable>)|
|android.os.Bundle.putParcelableList(String,List<?extendsParcelable>)|
|android.os.Bundle.putSerializable(String,Serializable)|Inserts a Serializable 
|android.os.Bundle.putShort(String,short)|Inserts a short value into the mappin
|android.os.Bundle.putShortArray(String,short[])|Inserts a short array value in
|android.os.Bundle.putSparseParcelableArray(String,SparseArray<?extendsParcelable>)|
|android.os.Bundle.putString(String,String)|Inserts a String value into the map
|android.os.Bundle.putStringArray(String,String[])|Inserts a String array value
|android.os.Bundle.putStringArrayList(String,ArrayList<String>)|Inserts an Arra
|android.os.Bundle.readFromParcel(Parcel)|Reads the Parcel contents into this B
|android.os.Bundle.remove(String)|Removes any entry with the given key from the
|android.os.Bundle.setAllowFds(boolean)|
|android.os.Bundle.setClassLoader(ClassLoader)|Changes the ClassLoader this Bun
|android.os.Bundle.size()|Returns the number of mappings contained in this Bund
|android.os.Bundle.toString()|
|android.os.Bundle.writeToParcel(Parcel,int)|Writes the Bundle contents to a Pa

*android.os.Bundle_Description*

A mapping from String values to various Parcelable types. 



*android.os.Parcelable.Creator<android.os.Bundle>_android.os.Bundle.CREATOR*




*android.os.Bundle_android.os.Bundle.EMPTY*





*android.os.Bundle()*

public Bundle()

Constructs a new, empty Bundle. 


*android.os.Bundle(Bundle)*

public Bundle(android.os.Bundle b)

Constructs a Bundle containing a copy of the mappings from the given Bundle. 

    b - a Bundle to be copied. 

*android.os.Bundle(ClassLoader)*

public Bundle(java.lang.ClassLoader loader)

Constructs a new, empty Bundle that uses a specific ClassLoader for 
instantiating Parcelable and Serializable objects. 

    loader - An explicit ClassLoader to use when instantiating objects inside of the Bundle. 

*android.os.Bundle(int)*

public Bundle(int capacity)

Constructs a new, empty Bundle sized to hold the given number of elements. The 
Bundle will grow as needed. 

    capacity - the initial capacity of the Bundle 

*android.os.Bundle.clear()*

public void clear()

Removes all elements from the mapping of this Bundle. 



*android.os.Bundle.clone()*

public |java.lang.Object| clone()

Clones the current Bundle. The internal map is cloned, but the keys and values 
to which it refers are copied by reference. 



*android.os.Bundle.containsKey(String)*

public boolean containsKey(java.lang.String key)

Returns true if the given key is contained in the mapping of this Bundle. 


    key - a String key 

    Returns: true if the key is part of the mapping, false otherwise 

*android.os.Bundle.describeContents()*

public int describeContents()

Report the nature of this Parcelable's contents 



*android.os.Bundle.forPair(String,String)*

public static |android.os.Bundle| forPair(
  java.lang.String key,
  java.lang.String value)

Make a Bundle for a single key/value pair. 



*android.os.Bundle.get(String)*

public |java.lang.Object| get(java.lang.String key)

Returns the entry with the given key as an object. 


    key - a String key 

    Returns: an Object, or null 

*android.os.Bundle.getBinder(String)*

public |android.os.IBinder| getBinder(java.lang.String key)

Returns the value associated with the given key, or null if no mapping of the 
desired type exists for the given key or a null value is explicitly associated 
with the key. 


    key - a String, or null 

    Returns: an IBinder value, or null 

*android.os.Bundle.getBoolean(String)*

public boolean getBoolean(java.lang.String key)

Returns the value associated with the given key, or false if no mapping of the 
desired type exists for the given key. 


    key - a String 

    Returns: a boolean value 

*android.os.Bundle.getBoolean(String,boolean)*

public boolean getBoolean(
  java.lang.String key,
  boolean defaultValue)

Returns the value associated with the given key, or defaultValue if no mapping 
of the desired type exists for the given key. 


    key - a String 
    defaultValue - Value to return if key does not exist 

    Returns: a boolean value 

*android.os.Bundle.getBooleanArray(String)*

public boolean[] getBooleanArray(java.lang.String key)

Returns the value associated with the given key, or null if no mapping of the 
desired type exists for the given key or a null value is explicitly associated 
with the key. 


    key - a String, or null 

    Returns: a boolean[] value, or null 

*android.os.Bundle.getBundle(String)*

public |android.os.Bundle| getBundle(java.lang.String key)

Returns the value associated with the given key, or null if no mapping of the 
desired type exists for the given key or a null value is explicitly associated 
with the key. 


    key - a String, or null 

    Returns: a Bundle value, or null 

*android.os.Bundle.getByte(String)*

public byte getByte(java.lang.String key)

Returns the value associated with the given key, or (byte) 0 if no mapping of 
the desired type exists for the given key. 


    key - a String 

    Returns: 

*android.os.Bundle.getByte(String,byte)*

public |java.lang.Byte| getByte(
  java.lang.String key,
  byte defaultValue)

Returns the value associated with the given key, or defaultValue if no mapping 
of the desired type exists for the given key. 


    key - a String 
    defaultValue - Value to return if key does not exist 

    Returns: 

*android.os.Bundle.getByteArray(String)*

public byte[] getByteArray(java.lang.String key)

Returns the value associated with the given key, or null if no mapping of the 
desired type exists for the given key or a null value is explicitly associated 
with the key. 


    key - a String, or null 

    Returns: a byte[] value, or null 

*android.os.Bundle.getChar(String)*

public char getChar(java.lang.String key)

Returns the value associated with the given key, or (char) 0 if no mapping of 
the desired type exists for the given key. 


    key - a String 

    Returns: 

*android.os.Bundle.getChar(String,char)*

public char getChar(
  java.lang.String key,
  char defaultValue)

Returns the value associated with the given key, or defaultValue if no mapping 
of the desired type exists for the given key. 


    key - a String 
    defaultValue - Value to return if key does not exist 

    Returns: 

*android.os.Bundle.getCharArray(String)*

public char[] getCharArray(java.lang.String key)

Returns the value associated with the given key, or null if no mapping of the 
desired type exists for the given key or a null value is explicitly associated 
with the key. 


    key - a String, or null 

    Returns: a char[] value, or null 

*android.os.Bundle.getCharSequence(String)*

public |java.lang.CharSequence| getCharSequence(java.lang.String key)

Returns the value associated with the given key, or null if no mapping of the 
desired type exists for the given key or a null value is explicitly associated 
with the key. 


    key - a String, or null 

    Returns: a CharSequence value, or null 

*android.os.Bundle.getCharSequence(String,CharSequence)*

public |java.lang.CharSequence| getCharSequence(
  java.lang.String key,
  java.lang.CharSequence defaultValue)

Returns the value associated with the given key, or defaultValue if no mapping 
of the desired type exists for the given key. 


    key - a String, or null 
    defaultValue - Value to return if key does not exist 

    Returns: the CharSequence value associated with the given key, or defaultValue if no 
             valid CharSequence object is currently mapped to that key. 

*android.os.Bundle.getCharSequenceArray(String)*

public |java.lang.CharSequence|[] getCharSequenceArray(java.lang.String key)

Returns the value associated with the given key, or null if no mapping of the 
desired type exists for the given key or a null value is explicitly associated 
with the key. 


    key - a String, or null 

    Returns: a CharSequence[] value, or null 

*android.os.Bundle.getCharSequenceArrayList(String)*

public |java.util.ArrayList|<CharSequence> getCharSequenceArrayList(java.lang.String key)

Returns the value associated with the given key, or null if no mapping of the 
desired type exists for the given key or a null value is explicitly associated 
with the key. 


    key - a String, or null 

    Returns: an ArrayList value, or null 

*android.os.Bundle.getClassLoader()*

public |java.lang.ClassLoader| getClassLoader()

Return the ClassLoader currently associated with this Bundle. 



*android.os.Bundle.getDouble(String)*

public double getDouble(java.lang.String key)

Returns the value associated with the given key, or 0.0 if no mapping of the 
desired type exists for the given key. 


    key - a String 

    Returns: a double value 

*android.os.Bundle.getDouble(String,double)*

public double getDouble(
  java.lang.String key,
  double defaultValue)

Returns the value associated with the given key, or defaultValue if no mapping 
of the desired type exists for the given key. 


    key - a String 
    defaultValue - Value to return if key does not exist 

    Returns: a double value 

*android.os.Bundle.getDoubleArray(String)*

public double[] getDoubleArray(java.lang.String key)

Returns the value associated with the given key, or null if no mapping of the 
desired type exists for the given key or a null value is explicitly associated 
with the key. 


    key - a String, or null 

    Returns: a double[] value, or null 

*android.os.Bundle.getFloat(String)*

public float getFloat(java.lang.String key)

Returns the value associated with the given key, or 0.0f if no mapping of the 
desired type exists for the given key. 


    key - a String 

    Returns: a float value 

*android.os.Bundle.getFloat(String,float)*

public float getFloat(
  java.lang.String key,
  float defaultValue)

Returns the value associated with the given key, or defaultValue if no mapping 
of the desired type exists for the given key. 


    key - a String 
    defaultValue - Value to return if key does not exist 

    Returns: a float value 

*android.os.Bundle.getFloatArray(String)*

public float[] getFloatArray(java.lang.String key)

Returns the value associated with the given key, or null if no mapping of the 
desired type exists for the given key or a null value is explicitly associated 
with the key. 


    key - a String, or null 

    Returns: a float[] value, or null 

*android.os.Bundle.getIBinder(String)*

public |android.os.IBinder| getIBinder(java.lang.String key)

Returns the value associated with the given key, or null if no mapping of the 
desired type exists for the given key or a null value is explicitly associated 
with the key. 

    Deprecated

    key - a String, or null 

    Returns: an IBinder value, or null 

*android.os.Bundle.getInt(String)*

public int getInt(java.lang.String key)

Returns the value associated with the given key, or 0 if no mapping of the 
desired type exists for the given key. 


    key - a String 

    Returns: 

*android.os.Bundle.getInt(String,int)*

public int getInt(
  java.lang.String key,
  int defaultValue)

Returns the value associated with the given key, or defaultValue if no mapping 
of the desired type exists for the given key. 


    key - a String 
    defaultValue - Value to return if key does not exist 

    Returns: 

*android.os.Bundle.getIntArray(String)*

public int[] getIntArray(java.lang.String key)

Returns the value associated with the given key, or null if no mapping of the 
desired type exists for the given key or a null value is explicitly associated 
with the key. 


    key - a String, or null 

    Returns: an int[] value, or null 

*android.os.Bundle.getIntegerArrayList(String)*

public |java.util.ArrayList|<Integer> getIntegerArrayList(java.lang.String key)

Returns the value associated with the given key, or null if no mapping of the 
desired type exists for the given key or a null value is explicitly associated 
with the key. 


    key - a String, or null 

    Returns: an ArrayList value, or null 

*android.os.Bundle.getLong(String)*

public long getLong(java.lang.String key)

Returns the value associated with the given key, or 0L if no mapping of the 
desired type exists for the given key. 


    key - a String 

    Returns: 

*android.os.Bundle.getLong(String,long)*

public long getLong(
  java.lang.String key,
  long defaultValue)

Returns the value associated with the given key, or defaultValue if no mapping 
of the desired type exists for the given key. 


    key - a String 
    defaultValue - Value to return if key does not exist 

    Returns: 

*android.os.Bundle.getLongArray(String)*

public long[] getLongArray(java.lang.String key)

Returns the value associated with the given key, or null if no mapping of the 
desired type exists for the given key or a null value is explicitly associated 
with the key. 


    key - a String, or null 

    Returns: a long[] value, or null 

*android.os.Bundle.getPairValue()*

public |java.lang.String| getPairValue()

TODO: optimize this later (getting just the value part of a Bundle with a 
single pair) once Bundle.forPair() above is implemented with a special 
single-value Map implementation/serialization. 

Note: value in single-pair Bundle may be null. 



*android.os.Bundle.getParcelable(String)*

public |T| getParcelable(java.lang.String key)

Returns the value associated with the given key, or null if no mapping of the 
desired type exists for the given key or a null value is explicitly associated 
with the key. 


    key - a String, or null 

    Returns: a Parcelable value, or null 

*android.os.Bundle.getParcelableArray(String)*

public |android.os.Parcelable|[] getParcelableArray(java.lang.String key)

Returns the value associated with the given key, or null if no mapping of the 
desired type exists for the given key or a null value is explicitly associated 
with the key. 


    key - a String, or null 

    Returns: a Parcelable[] value, or null 

*android.os.Bundle.getParcelableArrayList(String)*

public |java.util.ArrayList|<T extends android.os.Parcelable> getParcelableArrayList(java.lang.String key)

Returns the value associated with the given key, or null if no mapping of the 
desired type exists for the given key or a null value is explicitly associated 
with the key. 


    key - a String, or null 

    Returns: an ArrayList value, or null 

*android.os.Bundle.getSerializable(String)*

public |java.io.Serializable| getSerializable(java.lang.String key)

Returns the value associated with the given key, or null if no mapping of the 
desired type exists for the given key or a null value is explicitly associated 
with the key. 


    key - a String, or null 

    Returns: a Serializable value, or null 

*android.os.Bundle.getShort(String)*

public short getShort(java.lang.String key)

Returns the value associated with the given key, or (short) 0 if no mapping of 
the desired type exists for the given key. 


    key - a String 

    Returns: a short value 

*android.os.Bundle.getShort(String,short)*

public short getShort(
  java.lang.String key,
  short defaultValue)

Returns the value associated with the given key, or defaultValue if no mapping 
of the desired type exists for the given key. 


    key - a String 
    defaultValue - Value to return if key does not exist 

    Returns: a short value 

*android.os.Bundle.getShortArray(String)*

public short[] getShortArray(java.lang.String key)

Returns the value associated with the given key, or null if no mapping of the 
desired type exists for the given key or a null value is explicitly associated 
with the key. 


    key - a String, or null 

    Returns: a short[] value, or null 

*android.os.Bundle.getSparseParcelableArray(String)*

public |android.util.SparseArray|<T extends android.os.Parcelable> getSparseParcelableArray(java.lang.String key)

Returns the value associated with the given key, or null if no mapping of the 
desired type exists for the given key or a null value is explicitly associated 
with the key. 


    key - a String, or null 

    Returns: a SparseArray of T values, or null 

*android.os.Bundle.getString(String)*

public |java.lang.String| getString(java.lang.String key)

Returns the value associated with the given key, or null if no mapping of the 
desired type exists for the given key or a null value is explicitly associated 
with the key. 


    key - a String, or null 

    Returns: a String value, or null 

*android.os.Bundle.getString(String,String)*

public |java.lang.String| getString(
  java.lang.String key,
  java.lang.String defaultValue)

Returns the value associated with the given key, or defaultValue if no mapping 
of the desired type exists for the given key. 


    key - a String, or null 
    defaultValue - Value to return if key does not exist 

    Returns: the String value associated with the given key, or defaultValue if no valid 
             String object is currently mapped to that key. 

*android.os.Bundle.getStringArray(String)*

public |java.lang.String|[] getStringArray(java.lang.String key)

Returns the value associated with the given key, or null if no mapping of the 
desired type exists for the given key or a null value is explicitly associated 
with the key. 


    key - a String, or null 

    Returns: a String[] value, or null 

*android.os.Bundle.getStringArrayList(String)*

public |java.util.ArrayList|<String> getStringArrayList(java.lang.String key)

Returns the value associated with the given key, or null if no mapping of the 
desired type exists for the given key or a null value is explicitly associated 
with the key. 


    key - a String, or null 

    Returns: an ArrayList value, or null 

*android.os.Bundle.hasFileDescriptors()*

public boolean hasFileDescriptors()

Reports whether the bundle contains any parcelled file descriptors. 



*android.os.Bundle.isEmpty()*

public boolean isEmpty()

Returns true if the mapping of this Bundle is empty, false otherwise. 



*android.os.Bundle.isParcelled()*

public boolean isParcelled()





*android.os.Bundle.keySet()*

public |java.util.Set|<String> keySet()

Returns a Set containing the Strings used as keys in this Bundle. 



    Returns: a Set of String keys 

*android.os.Bundle.putAll(Bundle)*

public void putAll(android.os.Bundle map)

Inserts all mappings from the given Bundle into this Bundle. 


    map - a Bundle 

*android.os.Bundle.putBinder(String,IBinder)*

public void putBinder(
  java.lang.String key,
  android.os.IBinder value)

Inserts an (|android.os.IBinder|) value into the mapping of this Bundle, 
replacing any existing value for the given key. Either key or value may be 
null. 

You should be very careful when using this function. In many places where 
Bundles are used (such as inside of Intent objects), the Bundle can live longer 
inside of another process than the process that had originally created it. In 
that case, the IBinder you supply here will become invalid when your process 
goes away, and no longer usable, even if a new process is created for you later 
on. 


    key - a String, or null 
    value - an IBinder object, or null 

*android.os.Bundle.putBoolean(String,boolean)*

public void putBoolean(
  java.lang.String key,
  boolean value)

Inserts a Boolean value into the mapping of this Bundle, replacing any existing 
value for the given key. Either key or value may be null. 


    key - a String, or null 
    value - a Boolean, or null 

*android.os.Bundle.putBooleanArray(String,boolean[])*

public void putBooleanArray(
  java.lang.String key,
  boolean[] value)

Inserts a boolean array value into the mapping of this Bundle, replacing any 
existing value for the given key. Either key or value may be null. 


    key - a String, or null 
    value - a boolean array object, or null 

*android.os.Bundle.putBundle(String,Bundle)*

public void putBundle(
  java.lang.String key,
  android.os.Bundle value)

Inserts a Bundle value into the mapping of this Bundle, replacing any existing 
value for the given key. Either key or value may be null. 


    key - a String, or null 
    value - a Bundle object, or null 

*android.os.Bundle.putByte(String,byte)*

public void putByte(
  java.lang.String key,
  byte value)

Inserts a byte value into the mapping of this Bundle, replacing any existing 
value for the given key. 


    key - a String, or null 
    value - 

*android.os.Bundle.putByteArray(String,byte[])*

public void putByteArray(
  java.lang.String key,
  byte[] value)

Inserts a byte array value into the mapping of this Bundle, replacing any 
existing value for the given key. Either key or value may be null. 


    key - a String, or null 
    value - a byte array object, or null 

*android.os.Bundle.putChar(String,char)*

public void putChar(
  java.lang.String key,
  char value)

Inserts a char value into the mapping of this Bundle, replacing any existing 
value for the given key. 


    key - a String, or null 
    value - a char, or null 

*android.os.Bundle.putCharArray(String,char[])*

public void putCharArray(
  java.lang.String key,
  char[] value)

Inserts a char array value into the mapping of this Bundle, replacing any 
existing value for the given key. Either key or value may be null. 


    key - a String, or null 
    value - a char array object, or null 

*android.os.Bundle.putCharSequence(String,CharSequence)*

public void putCharSequence(
  java.lang.String key,
  java.lang.CharSequence value)

Inserts a CharSequence value into the mapping of this Bundle, replacing any 
existing value for the given key. Either key or value may be null. 


    key - a String, or null 
    value - a CharSequence, or null 

*android.os.Bundle.putCharSequenceArray(String,CharSequence[])*

public void putCharSequenceArray(
  java.lang.String key,
  java.lang.CharSequence[] value)

Inserts a CharSequence array value into the mapping of this Bundle, replacing 
any existing value for the given key. Either key or value may be null. 


    key - a String, or null 
    value - a CharSequence array object, or null 

*android.os.Bundle.putCharSequenceArrayList(String,ArrayList<CharSequence>)*

public void putCharSequenceArrayList(
  java.lang.String key,
  java.util.ArrayList<java.lang.CharSequence> value)

Inserts an ArrayList value into the mapping of this Bundle, replacing any 
existing value for the given key. Either key or value may be null. 


    key - a String, or null 
    value - an ArrayList object, or null 

*android.os.Bundle.putDouble(String,double)*

public void putDouble(
  java.lang.String key,
  double value)

Inserts a double value into the mapping of this Bundle, replacing any existing 
value for the given key. 


    key - a String, or null 
    value - a double 

*android.os.Bundle.putDoubleArray(String,double[])*

public void putDoubleArray(
  java.lang.String key,
  double[] value)

Inserts a double array value into the mapping of this Bundle, replacing any 
existing value for the given key. Either key or value may be null. 


    key - a String, or null 
    value - a double array object, or null 

*android.os.Bundle.putFloat(String,float)*

public void putFloat(
  java.lang.String key,
  float value)

Inserts a float value into the mapping of this Bundle, replacing any existing 
value for the given key. 


    key - a String, or null 
    value - a float 

*android.os.Bundle.putFloatArray(String,float[])*

public void putFloatArray(
  java.lang.String key,
  float[] value)

Inserts a float array value into the mapping of this Bundle, replacing any 
existing value for the given key. Either key or value may be null. 


    key - a String, or null 
    value - a float array object, or null 

*android.os.Bundle.putIBinder(String,IBinder)*

public void putIBinder(
  java.lang.String key,
  android.os.IBinder value)

Inserts an IBinder value into the mapping of this Bundle, replacing any 
existing value for the given key. Either key or value may be null. 

    Deprecated

    key - a String, or null 
    value - an IBinder object, or null 

*android.os.Bundle.putInt(String,int)*

public void putInt(
  java.lang.String key,
  int value)

Inserts an int value into the mapping of this Bundle, replacing any existing 
value for the given key. 


    key - a String, or null 
    value - an int, or null 

*android.os.Bundle.putIntArray(String,int[])*

public void putIntArray(
  java.lang.String key,
  int[] value)

Inserts an int array value into the mapping of this Bundle, replacing any 
existing value for the given key. Either key or value may be null. 


    key - a String, or null 
    value - an int array object, or null 

*android.os.Bundle.putIntegerArrayList(String,ArrayList<Integer>)*

public void putIntegerArrayList(
  java.lang.String key,
  java.util.ArrayList<java.lang.Integer> value)

Inserts an ArrayList value into the mapping of this Bundle, replacing any 
existing value for the given key. Either key or value may be null. 


    key - a String, or null 
    value - an ArrayList object, or null 

*android.os.Bundle.putLong(String,long)*

public void putLong(
  java.lang.String key,
  long value)

Inserts a long value into the mapping of this Bundle, replacing any existing 
value for the given key. 


    key - a String, or null 
    value - 

*android.os.Bundle.putLongArray(String,long[])*

public void putLongArray(
  java.lang.String key,
  long[] value)

Inserts a long array value into the mapping of this Bundle, replacing any 
existing value for the given key. Either key or value may be null. 


    key - a String, or null 
    value - a long array object, or null 

*android.os.Bundle.putParcelable(String,Parcelable)*

public void putParcelable(
  java.lang.String key,
  android.os.Parcelable value)

Inserts a Parcelable value into the mapping of this Bundle, replacing any 
existing value for the given key. Either key or value may be null. 


    key - a String, or null 
    value - a Parcelable object, or null 

*android.os.Bundle.putParcelableArray(String,Parcelable[])*

public void putParcelableArray(
  java.lang.String key,
  android.os.Parcelable[] value)

Inserts an array of Parcelable values into the mapping of this Bundle, 
replacing any existing value for the given key. Either key or value may be 
null. 


    key - a String, or null 
    value - an array of Parcelable objects, or null 

*android.os.Bundle.putParcelableArrayList(String,ArrayList<?extendsParcelable>)*

public void putParcelableArrayList(
  java.lang.String key,
  java.util.ArrayList<? extends android.os.Parcelable> value)

Inserts a List of Parcelable values into the mapping of this Bundle, replacing 
any existing value for the given key. Either key or value may be null. 


    key - a String, or null 
    value - an ArrayList of Parcelable objects, or null 

*android.os.Bundle.putParcelableList(String,List<?extendsParcelable>)*

public void putParcelableList(
  java.lang.String key,
  java.util.List<? extends android.os.Parcelable> value)





*android.os.Bundle.putSerializable(String,Serializable)*

public void putSerializable(
  java.lang.String key,
  java.io.Serializable value)

Inserts a Serializable value into the mapping of this Bundle, replacing any 
existing value for the given key. Either key or value may be null. 


    key - a String, or null 
    value - a Serializable object, or null 

*android.os.Bundle.putShort(String,short)*

public void putShort(
  java.lang.String key,
  short value)

Inserts a short value into the mapping of this Bundle, replacing any existing 
value for the given key. 


    key - a String, or null 
    value - a short 

*android.os.Bundle.putShortArray(String,short[])*

public void putShortArray(
  java.lang.String key,
  short[] value)

Inserts a short array value into the mapping of this Bundle, replacing any 
existing value for the given key. Either key or value may be null. 


    key - a String, or null 
    value - a short array object, or null 

*android.os.Bundle.putSparseParcelableArray(String,SparseArray<?extendsParcelable>)*

public void putSparseParcelableArray(
  java.lang.String key,
  android.util.SparseArray<? extends android.os.Parcelable> value)

Inserts a SparceArray of Parcelable values into the mapping of this Bundle, 
replacing any existing value for the given key. Either key or value may be 
null. 


    key - a String, or null 
    value - a SparseArray of Parcelable objects, or null 

*android.os.Bundle.putString(String,String)*

public void putString(
  java.lang.String key,
  java.lang.String value)

Inserts a String value into the mapping of this Bundle, replacing any existing 
value for the given key. Either key or value may be null. 


    key - a String, or null 
    value - a String, or null 

*android.os.Bundle.putStringArray(String,String[])*

public void putStringArray(
  java.lang.String key,
  java.lang.String[] value)

Inserts a String array value into the mapping of this Bundle, replacing any 
existing value for the given key. Either key or value may be null. 


    key - a String, or null 
    value - a String array object, or null 

*android.os.Bundle.putStringArrayList(String,ArrayList<String>)*

public void putStringArrayList(
  java.lang.String key,
  java.util.ArrayList<java.lang.String> value)

Inserts an ArrayList value into the mapping of this Bundle, replacing any 
existing value for the given key. Either key or value may be null. 


    key - a String, or null 
    value - an ArrayList object, or null 

*android.os.Bundle.readFromParcel(Parcel)*

public void readFromParcel(android.os.Parcel parcel)

Reads the Parcel contents into this Bundle, typically in order for it to be 
passed through an IBinder connection. 


    parcel - The parcel to overwrite this bundle from. 

*android.os.Bundle.remove(String)*

public void remove(java.lang.String key)

Removes any entry with the given key from the mapping of this Bundle. 


    key - a String key 

*android.os.Bundle.setAllowFds(boolean)*

public boolean setAllowFds(boolean allowFds)





*android.os.Bundle.setClassLoader(ClassLoader)*

public void setClassLoader(java.lang.ClassLoader loader)

Changes the ClassLoader this Bundle uses when instantiating objects. 


    loader - An explicit ClassLoader to use when instantiating objects inside of the Bundle. 

*android.os.Bundle.size()*

public int size()

Returns the number of mappings contained in this Bundle. 



    Returns: the number of mappings as an int. 

*android.os.Bundle.toString()*

public synchronized |java.lang.String| toString()





*android.os.Bundle.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel parcel,
  int flags)

Writes the Bundle contents to a Parcel, typically in order for it to be passed 
through an IBinder connection. 


    parcel - The parcel to copy this bundle to. 


