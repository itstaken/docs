*android.os.BatteryStats* *BatteryStats* A class providing access to battery usa

public abstract class BatteryStats
  extends    |java.lang.Object|
  implements |android.os.Parcelable|

|android.os.BatteryStats_Description|
|android.os.BatteryStats_Fields|
|android.os.BatteryStats_Constructors|
|android.os.BatteryStats_Methods|

================================================================================

*android.os.BatteryStats_Fields*
|int_android.os.BatteryStats.AUDIO_TURNED_ON|
|int_android.os.BatteryStats.DATA_CONNECTION_1xRTT|
|int_android.os.BatteryStats.DATA_CONNECTION_CDMA|
|int_android.os.BatteryStats.DATA_CONNECTION_EDGE|
|int_android.os.BatteryStats.DATA_CONNECTION_EHRPD|
|int_android.os.BatteryStats.DATA_CONNECTION_EVDO_0|
|int_android.os.BatteryStats.DATA_CONNECTION_EVDO_A|
|int_android.os.BatteryStats.DATA_CONNECTION_EVDO_B|
|int_android.os.BatteryStats.DATA_CONNECTION_GPRS|
|int_android.os.BatteryStats.DATA_CONNECTION_HSDPA|
|int_android.os.BatteryStats.DATA_CONNECTION_HSPA|
|int_android.os.BatteryStats.DATA_CONNECTION_HSPAP|
|int_android.os.BatteryStats.DATA_CONNECTION_HSUPA|
|int_android.os.BatteryStats.DATA_CONNECTION_IDEN|
|int_android.os.BatteryStats.DATA_CONNECTION_LTE|
|int_android.os.BatteryStats.DATA_CONNECTION_NONE|
|int_android.os.BatteryStats.DATA_CONNECTION_OTHER|
|int_android.os.BatteryStats.DATA_CONNECTION_UMTS|
|int_android.os.BatteryStats.FOREGROUND_ACTIVITY|
|int_android.os.BatteryStats.FULL_WIFI_LOCK|
|android.os.BatteryStats.BitDescription[]_android.os.BatteryStats.HISTORY_STATE_DESCRIPTIONS|
|int_android.os.BatteryStats.NETWORK_MOBILE_RX_BYTES|
|int_android.os.BatteryStats.NETWORK_MOBILE_TX_BYTES|
|int_android.os.BatteryStats.NETWORK_WIFI_RX_BYTES|
|int_android.os.BatteryStats.NETWORK_WIFI_TX_BYTES|
|int_android.os.BatteryStats.NUM_DATA_CONNECTION_TYPES|
|int_android.os.BatteryStats.NUM_NETWORK_ACTIVITY_TYPES|
|int_android.os.BatteryStats.NUM_SCREEN_BRIGHTNESS_BINS|
|int_android.os.BatteryStats.SCREEN_BRIGHTNESS_BRIGHT|
|int_android.os.BatteryStats.SCREEN_BRIGHTNESS_DARK|
|int_android.os.BatteryStats.SCREEN_BRIGHTNESS_DIM|
|int_android.os.BatteryStats.SCREEN_BRIGHTNESS_LIGHT|
|int_android.os.BatteryStats.SCREEN_BRIGHTNESS_MEDIUM|
|int_android.os.BatteryStats.SENSOR|
|java.lang.String_android.os.BatteryStats.SERVICE_NAME|
|int_android.os.BatteryStats.STATS_CURRENT|
|int_android.os.BatteryStats.STATS_LAST|
|int_android.os.BatteryStats.STATS_SINCE_CHARGED|
|int_android.os.BatteryStats.STATS_SINCE_UNPLUGGED|
|int_android.os.BatteryStats.VIBRATOR_ON|
|int_android.os.BatteryStats.VIDEO_TURNED_ON|
|int_android.os.BatteryStats.WAKE_TYPE_FULL|
|int_android.os.BatteryStats.WAKE_TYPE_PARTIAL|
|int_android.os.BatteryStats.WAKE_TYPE_WINDOW|
|int_android.os.BatteryStats.WIFI_BATCHED_SCAN|
|int_android.os.BatteryStats.WIFI_MULTICAST_ENABLED|
|int_android.os.BatteryStats.WIFI_RUNNING|
|int_android.os.BatteryStats.WIFI_SCAN|

*android.os.BatteryStats_Constructors*
|android.os.BatteryStats()|

*android.os.BatteryStats_Methods*
|android.os.BatteryStats.computeBatteryRealtime(long,int)|Returns the total, la
|android.os.BatteryStats.computeBatteryUptime(long,int)|Returns the total, last
|android.os.BatteryStats.computeRealtime(long,int)|Returns the total, last, or 
|android.os.BatteryStats.computeUptime(long,int)|Returns the total, last, or cu
|android.os.BatteryStats.dumpCheckinLocked(PrintWriter,int,int)|Checkin server 
|android.os.BatteryStats.dumpCheckinLocked(PrintWriter,List<ApplicationInfo>,boolean,boolean)|
|android.os.BatteryStats.dumpLocked(PrintWriter,boolean,int)|Dumps a human-read
|android.os.BatteryStats.dumpLocked(PrintWriter,String,int,int)|
|android.os.BatteryStats.finishIteratingHistoryLocked()|
|android.os.BatteryStats.finishIteratingOldHistoryLocked()|
|android.os.BatteryStats.getBatteryRealtime(long)|Returns the current battery r
|android.os.BatteryStats.getBatteryUptime(long)|Returns the current battery upt
|android.os.BatteryStats.getBluetoothOnTime(long,int)|Returns the time in micro
|android.os.BatteryStats.getCpuSpeedSteps()|Returns the number of different spe
|android.os.BatteryStats.getDischargeAmountScreenOff()|Get the amount the batte
|android.os.BatteryStats.getDischargeAmountScreenOffSinceCharge()|Get the amoun
|android.os.BatteryStats.getDischargeAmountScreenOn()|Get the amount the batter
|android.os.BatteryStats.getDischargeAmountScreenOnSinceCharge()|Get the amount
|android.os.BatteryStats.getDischargeCurrentLevel()|Returns the current battery
|android.os.BatteryStats.getDischargeStartLevel()|Returns the battery percentag
|android.os.BatteryStats.getGlobalWifiRunningTime(long,int)|Returns the time in
|android.os.BatteryStats.getHighDischargeAmountSinceCharge()|Get the amount the
|android.os.BatteryStats.getHistoryBaseTime()|Return the base time offset for t
|android.os.BatteryStats.getInputEventCount(int)|
|android.os.BatteryStats.getIsOnBattery()|Return whether we are currently runni
|android.os.BatteryStats.getKernelWakelockStats()|
|android.os.BatteryStats.getLowDischargeAmountSinceCharge()|Get the amount the 
|android.os.BatteryStats.getNetworkActivityCount(int,int)|
|android.os.BatteryStats.getNextHistoryLocked(BatteryStats.HistoryItem)|
|android.os.BatteryStats.getNextOldHistoryLocked(BatteryStats.HistoryItem)|
|android.os.BatteryStats.getPhoneDataConnectionCount(int,int)|Returns the numbe
|android.os.BatteryStats.getPhoneDataConnectionTime(int,long,int)|Returns the t
|android.os.BatteryStats.getPhoneOnTime(long,int)|Returns the time in microseco
|android.os.BatteryStats.getPhoneSignalScanningTime(long,int)|Returns the time 
|android.os.BatteryStats.getPhoneSignalStrengthCount(int,int)|Returns the numbe
|android.os.BatteryStats.getPhoneSignalStrengthTime(int,long,int)|Returns the t
|android.os.BatteryStats.getRadioDataUptime()|Returns the time that the radio w
|android.os.BatteryStats.getRadioDataUptimeMs()|
|android.os.BatteryStats.getScreenBrightnessTime(int,long,int)|Returns the time
|android.os.BatteryStats.getScreenOnTime(long,int)|Returns the time in microsec
|android.os.BatteryStats.getStartCount()|Returns the number of times the device
|android.os.BatteryStats.getUidStats()|Returns a SparseArray containing the sta
|android.os.BatteryStats.getWifiOnTime(long,int)|Returns the time in microsecon
|android.os.BatteryStats.prepareForDumpLocked()|
|android.os.BatteryStats.startIteratingHistoryLocked()|
|android.os.BatteryStats.startIteratingOldHistoryLocked()|

*android.os.BatteryStats_Description*

A class providing access to battery usage statistics, including information on 
wakelocks, processes, packages, and services. All times are represented in 
microseconds except where indicated otherwise. 



*int_android.os.BatteryStats.AUDIO_TURNED_ON*

A constant indicating an audio turn on timer 


*int_android.os.BatteryStats.DATA_CONNECTION_1xRTT*




*int_android.os.BatteryStats.DATA_CONNECTION_CDMA*




*int_android.os.BatteryStats.DATA_CONNECTION_EDGE*




*int_android.os.BatteryStats.DATA_CONNECTION_EHRPD*




*int_android.os.BatteryStats.DATA_CONNECTION_EVDO_0*




*int_android.os.BatteryStats.DATA_CONNECTION_EVDO_A*




*int_android.os.BatteryStats.DATA_CONNECTION_EVDO_B*




*int_android.os.BatteryStats.DATA_CONNECTION_GPRS*




*int_android.os.BatteryStats.DATA_CONNECTION_HSDPA*




*int_android.os.BatteryStats.DATA_CONNECTION_HSPA*




*int_android.os.BatteryStats.DATA_CONNECTION_HSPAP*




*int_android.os.BatteryStats.DATA_CONNECTION_HSUPA*




*int_android.os.BatteryStats.DATA_CONNECTION_IDEN*




*int_android.os.BatteryStats.DATA_CONNECTION_LTE*




*int_android.os.BatteryStats.DATA_CONNECTION_NONE*




*int_android.os.BatteryStats.DATA_CONNECTION_OTHER*




*int_android.os.BatteryStats.DATA_CONNECTION_UMTS*




*int_android.os.BatteryStats.FOREGROUND_ACTIVITY*

A constant indicating a foreground activity timer 


*int_android.os.BatteryStats.FULL_WIFI_LOCK*

A constant indicating a full wifi lock timer 


*android.os.BatteryStats.BitDescription[]_android.os.BatteryStats.HISTORY_STATE_DESCRIPTIONS*




*int_android.os.BatteryStats.NETWORK_MOBILE_RX_BYTES*




*int_android.os.BatteryStats.NETWORK_MOBILE_TX_BYTES*




*int_android.os.BatteryStats.NETWORK_WIFI_RX_BYTES*




*int_android.os.BatteryStats.NETWORK_WIFI_TX_BYTES*




*int_android.os.BatteryStats.NUM_DATA_CONNECTION_TYPES*




*int_android.os.BatteryStats.NUM_NETWORK_ACTIVITY_TYPES*




*int_android.os.BatteryStats.NUM_SCREEN_BRIGHTNESS_BINS*




*int_android.os.BatteryStats.SCREEN_BRIGHTNESS_BRIGHT*




*int_android.os.BatteryStats.SCREEN_BRIGHTNESS_DARK*




*int_android.os.BatteryStats.SCREEN_BRIGHTNESS_DIM*




*int_android.os.BatteryStats.SCREEN_BRIGHTNESS_LIGHT*




*int_android.os.BatteryStats.SCREEN_BRIGHTNESS_MEDIUM*




*int_android.os.BatteryStats.SENSOR*

A constant indicating a sensor timer. 


*java.lang.String_android.os.BatteryStats.SERVICE_NAME*




*int_android.os.BatteryStats.STATS_CURRENT*

Include only the current run in the stats. 


*int_android.os.BatteryStats.STATS_LAST*

Include only the last run in the stats. 


*int_android.os.BatteryStats.STATS_SINCE_CHARGED*

Include all of the data in the stats, including previously saved data. 


*int_android.os.BatteryStats.STATS_SINCE_UNPLUGGED*

Include only the run since the last time the device was unplugged in the stats. 


*int_android.os.BatteryStats.VIBRATOR_ON*

A constant indicating a vibrator on timer 


*int_android.os.BatteryStats.VIDEO_TURNED_ON*

A constant indicating a video turn on timer 


*int_android.os.BatteryStats.WAKE_TYPE_FULL*

A constant indicating a full wake lock timer. 


*int_android.os.BatteryStats.WAKE_TYPE_PARTIAL*

A constant indicating a partial wake lock timer. 


*int_android.os.BatteryStats.WAKE_TYPE_WINDOW*

A constant indicating a window wake lock timer. 


*int_android.os.BatteryStats.WIFI_BATCHED_SCAN*

A constant indicating a wifi batched scan is active 


*int_android.os.BatteryStats.WIFI_MULTICAST_ENABLED*

A constant indicating a wifi multicast timer 


*int_android.os.BatteryStats.WIFI_RUNNING*

A constant indicating a a wifi running timer 


*int_android.os.BatteryStats.WIFI_SCAN*

A constant indicating a wifi scan 



*android.os.BatteryStats()*

public BatteryStats()




*android.os.BatteryStats.computeBatteryRealtime(long,int)*

public abstract long computeBatteryRealtime(
  long curTime,
  int which)

Returns the total, last, or current battery realtime in microseconds. 


    curTime - the current elapsed realtime in microseconds. 
    which - one of STATS_TOTAL, STATS_LAST, or STATS_CURRENT. 

*android.os.BatteryStats.computeBatteryUptime(long,int)*

public abstract long computeBatteryUptime(
  long curTime,
  int which)

Returns the total, last, or current battery uptime in microseconds. 


    curTime - the elapsed realtime in microseconds. 
    which - one of STATS_TOTAL, STATS_LAST, or STATS_CURRENT. 

*android.os.BatteryStats.computeRealtime(long,int)*

public abstract long computeRealtime(
  long curTime,
  int which)

Returns the total, last, or current realtime in microseconds. * 


    curTime - the current elapsed realtime in microseconds. 
    which - one of STATS_TOTAL, STATS_LAST, or STATS_CURRENT. 

*android.os.BatteryStats.computeUptime(long,int)*

public abstract long computeUptime(
  long curTime,
  int which)

Returns the total, last, or current uptime in microseconds. 


    curTime - the current elapsed realtime in microseconds. 
    which - one of STATS_TOTAL, STATS_LAST, or STATS_CURRENT. 

*android.os.BatteryStats.dumpCheckinLocked(PrintWriter,int,int)*

public final void dumpCheckinLocked(
  java.io.PrintWriter pw,
  int which,
  int reqUid)

Checkin server version of dump to produce more compact, computer-readable log. 

NOTE: all times are expressed in 'ms'. 



*android.os.BatteryStats.dumpCheckinLocked(PrintWriter,List<ApplicationInfo>,boolean,boolean)*

public void dumpCheckinLocked(
  java.io.PrintWriter pw,
  java.util.List<android.content.pm.ApplicationInfo> apps,
  boolean isUnpluggedOnly,
  boolean includeHistory)





*android.os.BatteryStats.dumpLocked(PrintWriter,boolean,int)*

public void dumpLocked(
  java.io.PrintWriter pw,
  boolean isUnpluggedOnly,
  int reqUid)

Dumps a human-readable summary of the battery statistics to the given 
PrintWriter. 


    pw - a Printer to receive the dump output. 

*android.os.BatteryStats.dumpLocked(PrintWriter,String,int,int)*

public final void dumpLocked(
  java.io.PrintWriter pw,
  java.lang.String prefix,
  int which,
  int reqUid)





*android.os.BatteryStats.finishIteratingHistoryLocked()*

public abstract void finishIteratingHistoryLocked()





*android.os.BatteryStats.finishIteratingOldHistoryLocked()*

public abstract void finishIteratingOldHistoryLocked()





*android.os.BatteryStats.getBatteryRealtime(long)*

public abstract long getBatteryRealtime(long curTime)

Returns the current battery realtime in microseconds. 


    curTime - the amount of elapsed realtime in microseconds. 

*android.os.BatteryStats.getBatteryUptime(long)*

public abstract long getBatteryUptime(long curTime)

Returns the current battery uptime in microseconds. 


    curTime - the amount of elapsed realtime in microseconds. 

*android.os.BatteryStats.getBluetoothOnTime(long,int)*

public abstract long getBluetoothOnTime(
  long batteryRealtime,
  int which)

Returns the time in microseconds that bluetooth has been on while the device 
was running on battery. 



*android.os.BatteryStats.getCpuSpeedSteps()*

public abstract int getCpuSpeedSteps()

Returns the number of different speeds that the CPU can run at 



*android.os.BatteryStats.getDischargeAmountScreenOff()*

public abstract int getDischargeAmountScreenOff()

Get the amount the battery has discharged while the screen was off, since the 
last time power was unplugged. 



*android.os.BatteryStats.getDischargeAmountScreenOffSinceCharge()*

public abstract int getDischargeAmountScreenOffSinceCharge()

Get the amount the battery has discharged while the screen was off, since the 
last time the device was charged. 



*android.os.BatteryStats.getDischargeAmountScreenOn()*

public abstract int getDischargeAmountScreenOn()

Get the amount the battery has discharged while the screen was on, since the 
last time power was unplugged. 



*android.os.BatteryStats.getDischargeAmountScreenOnSinceCharge()*

public abstract int getDischargeAmountScreenOnSinceCharge()

Get the amount the battery has discharged while the screen was on, since the 
last time the device was charged. 



*android.os.BatteryStats.getDischargeCurrentLevel()*

public abstract int getDischargeCurrentLevel()

Returns the current battery percentage level if we are in a discharge cycle, 
otherwise returns the level at the last plug event. 



*android.os.BatteryStats.getDischargeStartLevel()*

public abstract int getDischargeStartLevel()

Returns the battery percentage level at the last time the device was unplugged 
from power, or the last time it booted on battery power. 



*android.os.BatteryStats.getGlobalWifiRunningTime(long,int)*

public abstract long getGlobalWifiRunningTime(
  long batteryRealtime,
  int which)

Returns the time in microseconds that wifi has been on and the driver has been 
in the running state while the device was running on battery. 



*android.os.BatteryStats.getHighDischargeAmountSinceCharge()*

public abstract int getHighDischargeAmountSinceCharge()

Get the amount the battery has discharged since the stats were last reset after 
charging, as an upper-end approximation. 



*android.os.BatteryStats.getHistoryBaseTime()*

public abstract long getHistoryBaseTime()

Return the base time offset for the battery history. 



*android.os.BatteryStats.getInputEventCount(int)*

public abstract int getInputEventCount(int which)





*android.os.BatteryStats.getIsOnBattery()*

public abstract boolean getIsOnBattery()

Return whether we are currently running on battery. 



*android.os.BatteryStats.getKernelWakelockStats()*

public abstract |java.util.Map|<String,? extends android.os.BatteryStats.Timer> getKernelWakelockStats()





*android.os.BatteryStats.getLowDischargeAmountSinceCharge()*

public abstract int getLowDischargeAmountSinceCharge()

Get the amount the battery has discharged since the stats were last reset after 
charging, as a lower-end approximation. 



*android.os.BatteryStats.getNetworkActivityCount(int,int)*

public abstract long getNetworkActivityCount(
  int type,
  int which)





*android.os.BatteryStats.getNextHistoryLocked(BatteryStats.HistoryItem)*

public abstract boolean getNextHistoryLocked(android.os.BatteryStats.HistoryItem out)





*android.os.BatteryStats.getNextOldHistoryLocked(BatteryStats.HistoryItem)*

public abstract boolean getNextOldHistoryLocked(android.os.BatteryStats.HistoryItem out)





*android.os.BatteryStats.getPhoneDataConnectionCount(int,int)*

public abstract int getPhoneDataConnectionCount(
  int dataType,
  int which)

Returns the number of times the phone has entered the given data connection 
type. 



*android.os.BatteryStats.getPhoneDataConnectionTime(int,long,int)*

public abstract long getPhoneDataConnectionTime(
  int dataType,
  long batteryRealtime,
  int which)

Returns the time in microseconds that the phone has been running with the given 
data connection. 



*android.os.BatteryStats.getPhoneOnTime(long,int)*

public abstract long getPhoneOnTime(
  long batteryRealtime,
  int which)

Returns the time in microseconds that the phone has been on while the device 
was running on battery. 



*android.os.BatteryStats.getPhoneSignalScanningTime(long,int)*

public abstract long getPhoneSignalScanningTime(
  long batteryRealtime,
  int which)

Returns the time in microseconds that the phone has been trying to acquire a 
signal. 



*android.os.BatteryStats.getPhoneSignalStrengthCount(int,int)*

public abstract int getPhoneSignalStrengthCount(
  int strengthBin,
  int which)

Returns the number of times the phone has entered the given signal strength. 



*android.os.BatteryStats.getPhoneSignalStrengthTime(int,long,int)*

public abstract long getPhoneSignalStrengthTime(
  int strengthBin,
  long batteryRealtime,
  int which)

Returns the time in microseconds that the phone has been running with the given 
signal strength. 



*android.os.BatteryStats.getRadioDataUptime()*

public abstract long getRadioDataUptime()

Returns the time that the radio was on for data transfers. 



    Returns: the uptime in microseconds while unplugged 

*android.os.BatteryStats.getRadioDataUptimeMs()*

public long getRadioDataUptimeMs()



    Deprecated: use getRadioDataUptime


*android.os.BatteryStats.getScreenBrightnessTime(int,long,int)*

public abstract long getScreenBrightnessTime(
  int brightnessBin,
  long batteryRealtime,
  int which)

Returns the time in microseconds that the screen has been on with the given 
brightness 



*android.os.BatteryStats.getScreenOnTime(long,int)*

public abstract long getScreenOnTime(
  long batteryRealtime,
  int which)

Returns the time in microseconds that the screen has been on while the device 
was running on battery. 



*android.os.BatteryStats.getStartCount()*

public abstract int getStartCount()

Returns the number of times the device has been started. 



*android.os.BatteryStats.getUidStats()*

public abstract |android.util.SparseArray|<? extends android.os.BatteryStats.Uid> getUidStats()

Returns a SparseArray containing the statistics for each uid. 



*android.os.BatteryStats.getWifiOnTime(long,int)*

public abstract long getWifiOnTime(
  long batteryRealtime,
  int which)

Returns the time in microseconds that wifi has been on while the device was 
running on battery. 



*android.os.BatteryStats.prepareForDumpLocked()*

public void prepareForDumpLocked()





*android.os.BatteryStats.startIteratingHistoryLocked()*

public abstract boolean startIteratingHistoryLocked()





*android.os.BatteryStats.startIteratingOldHistoryLocked()*

public abstract boolean startIteratingOldHistoryLocked()






