*android.net.InterfaceConfiguration* *InterfaceConfiguration* Configuration deta

public class InterfaceConfiguration
  extends    |java.lang.Object|
  implements |android.os.Parcelable|

|android.net.InterfaceConfiguration_Description|
|android.net.InterfaceConfiguration_Fields|
|android.net.InterfaceConfiguration_Constructors|
|android.net.InterfaceConfiguration_Methods|

================================================================================

*android.net.InterfaceConfiguration_Fields*
|android.os.Parcelable.Creator<android.net.InterfaceConfiguration>_android.net.InterfaceConfiguration.CREATOR|

*android.net.InterfaceConfiguration_Constructors*
|android.net.InterfaceConfiguration()|

*android.net.InterfaceConfiguration_Methods*
|android.net.InterfaceConfiguration.clearFlag(String)|
|android.net.InterfaceConfiguration.describeContents()|
|android.net.InterfaceConfiguration.getFlags()|
|android.net.InterfaceConfiguration.getHardwareAddress()|
|android.net.InterfaceConfiguration.getLinkAddress()|
|android.net.InterfaceConfiguration.hasFlag(String)|
|android.net.InterfaceConfiguration.isActive()|This function determines if the 
|android.net.InterfaceConfiguration.setFlag(String)|
|android.net.InterfaceConfiguration.setHardwareAddress(String)|
|android.net.InterfaceConfiguration.setInterfaceDown()|Set flags to mark interf
|android.net.InterfaceConfiguration.setInterfaceUp()|Set flags to mark interfac
|android.net.InterfaceConfiguration.setLinkAddress(LinkAddress)|
|android.net.InterfaceConfiguration.toString()|
|android.net.InterfaceConfiguration.writeToParcel(Parcel,int)|

*android.net.InterfaceConfiguration_Description*

Configuration details for a network interface. 



*android.os.Parcelable.Creator<android.net.InterfaceConfiguration>_android.net.InterfaceConfiguration.CREATOR*





*android.net.InterfaceConfiguration()*

public InterfaceConfiguration()




*android.net.InterfaceConfiguration.clearFlag(String)*

public void clearFlag(java.lang.String flag)





*android.net.InterfaceConfiguration.describeContents()*

public int describeContents()





*android.net.InterfaceConfiguration.getFlags()*

public |java.lang.Iterable|<String> getFlags()





*android.net.InterfaceConfiguration.getHardwareAddress()*

public |java.lang.String| getHardwareAddress()





*android.net.InterfaceConfiguration.getLinkAddress()*

public |android.net.LinkAddress| getLinkAddress()





*android.net.InterfaceConfiguration.hasFlag(String)*

public boolean hasFlag(java.lang.String flag)





*android.net.InterfaceConfiguration.isActive()*

public boolean isActive()

This function determines if the interface is up and has a valid IP 
configuration (IP address has a non zero octet). 

Note: It is supposed to be quick and hence should not initiate any network 
activity 



*android.net.InterfaceConfiguration.setFlag(String)*

public void setFlag(java.lang.String flag)





*android.net.InterfaceConfiguration.setHardwareAddress(String)*

public void setHardwareAddress(java.lang.String hwAddr)





*android.net.InterfaceConfiguration.setInterfaceDown()*

public void setInterfaceDown()

Set flags to mark interface as down. 



*android.net.InterfaceConfiguration.setInterfaceUp()*

public void setInterfaceUp()

Set flags to mark interface as up. 



*android.net.InterfaceConfiguration.setLinkAddress(LinkAddress)*

public void setLinkAddress(android.net.LinkAddress addr)





*android.net.InterfaceConfiguration.toString()*

public |java.lang.String| toString()





*android.net.InterfaceConfiguration.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel dest,
  int flags)






