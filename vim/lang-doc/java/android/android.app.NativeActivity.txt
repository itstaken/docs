*android.app.NativeActivity* *NativeActivity* Convenience for implementing an ac

public class NativeActivity
  extends    |android.app.Activity|
  implements |android.view.SurfaceHolder.Callback2|
             |android.view.InputQueue.Callback|
             |android.view.ViewTreeObserver.OnGlobalLayoutListener|

|android.app.NativeActivity_Description|
|android.app.NativeActivity_Fields|
|android.app.NativeActivity_Constructors|
|android.app.NativeActivity_Methods|

================================================================================

*android.app.NativeActivity_Fields*
|java.lang.String_android.app.NativeActivity.META_DATA_FUNC_NAME|
|java.lang.String_android.app.NativeActivity.META_DATA_LIB_NAME|

*android.app.NativeActivity_Constructors*
|android.app.NativeActivity()|

*android.app.NativeActivity_Methods*
|android.app.NativeActivity.onConfigurationChanged(Configuration)|
|android.app.NativeActivity.onCreate(Bundle)|
|android.app.NativeActivity.onDestroy()|
|android.app.NativeActivity.onGlobalLayout()|
|android.app.NativeActivity.onInputQueueCreated(InputQueue)|
|android.app.NativeActivity.onInputQueueDestroyed(InputQueue)|
|android.app.NativeActivity.onLowMemory()|
|android.app.NativeActivity.onPause()|
|android.app.NativeActivity.onResume()|
|android.app.NativeActivity.onSaveInstanceState(Bundle)|
|android.app.NativeActivity.onStart()|
|android.app.NativeActivity.onStop()|
|android.app.NativeActivity.onWindowFocusChanged(boolean)|
|android.app.NativeActivity.surfaceChanged(SurfaceHolder,int,int,int)|
|android.app.NativeActivity.surfaceCreated(SurfaceHolder)|
|android.app.NativeActivity.surfaceDestroyed(SurfaceHolder)|
|android.app.NativeActivity.surfaceRedrawNeeded(SurfaceHolder)|

*android.app.NativeActivity_Description*

Convenience for implementing an activity that will be implemented purely in 
native code. That is, a game (or game-like thing). There is no need to derive 
from this class; you can simply declare it in your manifest, and use the NDK 
APIs from there. 

A typical manifest would look 
like:development/ndk/platforms/android-9/samples/native-activity/AndroidManifest.xml
manifestA very simple example of native code that is run by NativeActivity 
follows. This reads input events from the user and uses OpenGLES to draw into 
the native activity's 
window.development/ndk/platforms/android-9/samples/native-activity/jni/main.c 
all 



*java.lang.String_android.app.NativeActivity.META_DATA_FUNC_NAME*

Optional meta-that can be in the manifest for this component, specifying the 
name of the main entry point for this native activity in the 
(|android.app.NativeActivity|) native code. If not specified, 
"ANativeActivity_onCreate" is used. 


*java.lang.String_android.app.NativeActivity.META_DATA_LIB_NAME*

Optional meta-that can be in the manifest for this component, specifying the 
name of the native shared library to load. If not specified, "main" is used. 



*android.app.NativeActivity()*

public NativeActivity()




*android.app.NativeActivity.onConfigurationChanged(Configuration)*

public void onConfigurationChanged(android.content.res.Configuration newConfig)





*android.app.NativeActivity.onCreate(Bundle)*

protected void onCreate(android.os.Bundle savedInstanceState)





*android.app.NativeActivity.onDestroy()*

protected void onDestroy()





*android.app.NativeActivity.onGlobalLayout()*

public void onGlobalLayout()





*android.app.NativeActivity.onInputQueueCreated(InputQueue)*

public void onInputQueueCreated(android.view.InputQueue queue)





*android.app.NativeActivity.onInputQueueDestroyed(InputQueue)*

public void onInputQueueDestroyed(android.view.InputQueue queue)





*android.app.NativeActivity.onLowMemory()*

public void onLowMemory()





*android.app.NativeActivity.onPause()*

protected void onPause()





*android.app.NativeActivity.onResume()*

protected void onResume()





*android.app.NativeActivity.onSaveInstanceState(Bundle)*

protected void onSaveInstanceState(android.os.Bundle outState)





*android.app.NativeActivity.onStart()*

protected void onStart()





*android.app.NativeActivity.onStop()*

protected void onStop()





*android.app.NativeActivity.onWindowFocusChanged(boolean)*

public void onWindowFocusChanged(boolean hasFocus)





*android.app.NativeActivity.surfaceChanged(SurfaceHolder,int,int,int)*

public void surfaceChanged(
  android.view.SurfaceHolder holder,
  int format,
  int width,
  int height)





*android.app.NativeActivity.surfaceCreated(SurfaceHolder)*

public void surfaceCreated(android.view.SurfaceHolder holder)





*android.app.NativeActivity.surfaceDestroyed(SurfaceHolder)*

public void surfaceDestroyed(android.view.SurfaceHolder holder)





*android.app.NativeActivity.surfaceRedrawNeeded(SurfaceHolder)*

public void surfaceRedrawNeeded(android.view.SurfaceHolder holder)






