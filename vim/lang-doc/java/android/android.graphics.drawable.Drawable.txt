*android.graphics.drawable.Drawable* *Drawable* 

public abstract class Drawable
  extends    |java.lang.Object|

|android.graphics.drawable.Drawable_Description|
|android.graphics.drawable.Drawable_Fields|
|android.graphics.drawable.Drawable_Constructors|
|android.graphics.drawable.Drawable_Methods|

================================================================================

*android.graphics.drawable.Drawable_Constructors*
|android.graphics.drawable.Drawable()|

*android.graphics.drawable.Drawable_Methods*
|android.graphics.drawable.Drawable.clearColorFilter()|
|android.graphics.drawable.Drawable.copyBounds()|
|android.graphics.drawable.Drawable.copyBounds(Rect)|
|android.graphics.drawable.Drawable.createFromPath(String)|
|android.graphics.drawable.Drawable.createFromResourceStream(Resources,TypedValue,InputStream,String)|
|android.graphics.drawable.Drawable.createFromResourceStream(Resources,TypedValue,InputStream,String,BitmapFactory.Options)|
|android.graphics.drawable.Drawable.createFromStream(InputStream,String)|
|android.graphics.drawable.Drawable.createFromXml(Resources,org.xmlpull.v1.XmlPullParser)|
|android.graphics.drawable.Drawable.createFromXmlInner(Resources,org.xmlpull.v1.XmlPullParser,AttributeSet)|
|android.graphics.drawable.Drawable.draw(Canvas)|
|android.graphics.drawable.Drawable.getAlpha()|
|android.graphics.drawable.Drawable.getBounds()|
|android.graphics.drawable.Drawable.getCallback()|
|android.graphics.drawable.Drawable.getChangingConfigurations()|
|android.graphics.drawable.Drawable.getConstantState()|
|android.graphics.drawable.Drawable.getCurrent()|
|android.graphics.drawable.Drawable.getIntrinsicHeight()|
|android.graphics.drawable.Drawable.getIntrinsicWidth()|
|android.graphics.drawable.Drawable.getLevel()|
|android.graphics.drawable.Drawable.getMinimumHeight()|
|android.graphics.drawable.Drawable.getMinimumWidth()|
|android.graphics.drawable.Drawable.getOpacity()|
|android.graphics.drawable.Drawable.getPadding(Rect)|
|android.graphics.drawable.Drawable.getState()|
|android.graphics.drawable.Drawable.getTransparentRegion()|
|android.graphics.drawable.Drawable.inflate(Resources,org.xmlpull.v1.XmlPullParser,AttributeSet)|
|android.graphics.drawable.Drawable.invalidateSelf()|
|android.graphics.drawable.Drawable.isAutoMirrored()|
|android.graphics.drawable.Drawable.isStateful()|
|android.graphics.drawable.Drawable.isVisible()|
|android.graphics.drawable.Drawable.jumpToCurrentState()|
|android.graphics.drawable.Drawable.mutate()|
|android.graphics.drawable.Drawable.onBoundsChange(Rect)|
|android.graphics.drawable.Drawable.onLevelChange(int)|
|android.graphics.drawable.Drawable.onStateChange(int[])|
|android.graphics.drawable.Drawable.resolveOpacity(int,int)|
|android.graphics.drawable.Drawable.scheduleSelf(Runnable,long)|
|android.graphics.drawable.Drawable.setAlpha(int)|
|android.graphics.drawable.Drawable.setAutoMirrored(boolean)|
|android.graphics.drawable.Drawable.setBounds(int,int,int,int)|
|android.graphics.drawable.Drawable.setBounds(Rect)|
|android.graphics.drawable.Drawable.setCallback(Drawable.Callback)|
|android.graphics.drawable.Drawable.setChangingConfigurations(int)|
|android.graphics.drawable.Drawable.setColorFilter(ColorFilter)|
|android.graphics.drawable.Drawable.setColorFilter(int,PorterDuff.Mode)|
|android.graphics.drawable.Drawable.setDither(boolean)|
|android.graphics.drawable.Drawable.setFilterBitmap(boolean)|
|android.graphics.drawable.Drawable.setLevel(int)|
|android.graphics.drawable.Drawable.setState(int[])|
|android.graphics.drawable.Drawable.setVisible(boolean,boolean)|
|android.graphics.drawable.Drawable.unscheduleSelf(Runnable)|

*android.graphics.drawable.Drawable_Description*





*android.graphics.drawable.Drawable()*

public Drawable()




*android.graphics.drawable.Drawable.clearColorFilter()*

public void clearColorFilter()





*android.graphics.drawable.Drawable.copyBounds()*

public final |android.graphics.Rect| copyBounds()





*android.graphics.drawable.Drawable.copyBounds(Rect)*

public final void copyBounds(android.graphics.Rect bounds)





*android.graphics.drawable.Drawable.createFromPath(String)*

public static |android.graphics.drawable.Drawable| createFromPath(java.lang.String pathName)





*android.graphics.drawable.Drawable.createFromResourceStream(Resources,TypedValue,InputStream,String)*

public static |android.graphics.drawable.Drawable| createFromResourceStream(
  android.content.res.Resources res,
  android.util.TypedValue value,
  java.io.InputStream is,
  java.lang.String srcName)





*android.graphics.drawable.Drawable.createFromResourceStream(Resources,TypedValue,InputStream,String,BitmapFactory.Options)*

public static |android.graphics.drawable.Drawable| createFromResourceStream(
  android.content.res.Resources res,
  android.util.TypedValue value,
  java.io.InputStream is,
  java.lang.String srcName,
  android.graphics.BitmapFactory.Options opts)





*android.graphics.drawable.Drawable.createFromStream(InputStream,String)*

public static |android.graphics.drawable.Drawable| createFromStream(
  java.io.InputStream is,
  java.lang.String srcName)





*android.graphics.drawable.Drawable.createFromXml(Resources,org.xmlpull.v1.XmlPullParser)*

public static |android.graphics.drawable.Drawable| createFromXml(
  android.content.res.Resources r,
  org.xmlpull.v1.XmlPullParser parser)
  throws |java.io.IOException|
         |org.xmlpull.v1.XmlPullParserException|
         




*android.graphics.drawable.Drawable.createFromXmlInner(Resources,org.xmlpull.v1.XmlPullParser,AttributeSet)*

public static |android.graphics.drawable.Drawable| createFromXmlInner(
  android.content.res.Resources r,
  org.xmlpull.v1.XmlPullParser parser,
  android.util.AttributeSet attrs)
  throws |java.io.IOException|
         |org.xmlpull.v1.XmlPullParserException|
         




*android.graphics.drawable.Drawable.draw(Canvas)*

public abstract void draw(android.graphics.Canvas canvas)





*android.graphics.drawable.Drawable.getAlpha()*

public int getAlpha()





*android.graphics.drawable.Drawable.getBounds()*

public final |android.graphics.Rect| getBounds()





*android.graphics.drawable.Drawable.getCallback()*

public |android.graphics.drawable.Drawable.Callback| getCallback()





*android.graphics.drawable.Drawable.getChangingConfigurations()*

public int getChangingConfigurations()





*android.graphics.drawable.Drawable.getConstantState()*

public |android.graphics.drawable.Drawable.ConstantState| getConstantState()





*android.graphics.drawable.Drawable.getCurrent()*

public |android.graphics.drawable.Drawable| getCurrent()





*android.graphics.drawable.Drawable.getIntrinsicHeight()*

public int getIntrinsicHeight()





*android.graphics.drawable.Drawable.getIntrinsicWidth()*

public int getIntrinsicWidth()





*android.graphics.drawable.Drawable.getLevel()*

public final int getLevel()





*android.graphics.drawable.Drawable.getMinimumHeight()*

public int getMinimumHeight()





*android.graphics.drawable.Drawable.getMinimumWidth()*

public int getMinimumWidth()





*android.graphics.drawable.Drawable.getOpacity()*

public abstract int getOpacity()





*android.graphics.drawable.Drawable.getPadding(Rect)*

public boolean getPadding(android.graphics.Rect padding)





*android.graphics.drawable.Drawable.getState()*

public int[] getState()





*android.graphics.drawable.Drawable.getTransparentRegion()*

public |android.graphics.Region| getTransparentRegion()





*android.graphics.drawable.Drawable.inflate(Resources,org.xmlpull.v1.XmlPullParser,AttributeSet)*

public void inflate(
  android.content.res.Resources r,
  org.xmlpull.v1.XmlPullParser parser,
  android.util.AttributeSet attrs)
  throws |java.io.IOException|
         |org.xmlpull.v1.XmlPullParserException|
         




*android.graphics.drawable.Drawable.invalidateSelf()*

public void invalidateSelf()





*android.graphics.drawable.Drawable.isAutoMirrored()*

public boolean isAutoMirrored()





*android.graphics.drawable.Drawable.isStateful()*

public boolean isStateful()





*android.graphics.drawable.Drawable.isVisible()*

public final boolean isVisible()





*android.graphics.drawable.Drawable.jumpToCurrentState()*

public void jumpToCurrentState()





*android.graphics.drawable.Drawable.mutate()*

public |android.graphics.drawable.Drawable| mutate()





*android.graphics.drawable.Drawable.onBoundsChange(Rect)*

protected void onBoundsChange(android.graphics.Rect bounds)





*android.graphics.drawable.Drawable.onLevelChange(int)*

protected boolean onLevelChange(int level)





*android.graphics.drawable.Drawable.onStateChange(int[])*

protected boolean onStateChange(int[] state)





*android.graphics.drawable.Drawable.resolveOpacity(int,int)*

public static int resolveOpacity(
  int op1,
  int op2)





*android.graphics.drawable.Drawable.scheduleSelf(Runnable,long)*

public void scheduleSelf(
  java.lang.Runnable what,
  long when)





*android.graphics.drawable.Drawable.setAlpha(int)*

public abstract void setAlpha(int alpha)





*android.graphics.drawable.Drawable.setAutoMirrored(boolean)*

public void setAutoMirrored(boolean mirrored)





*android.graphics.drawable.Drawable.setBounds(int,int,int,int)*

public void setBounds(
  int left,
  int top,
  int right,
  int bottom)





*android.graphics.drawable.Drawable.setBounds(Rect)*

public void setBounds(android.graphics.Rect bounds)





*android.graphics.drawable.Drawable.setCallback(Drawable.Callback)*

public final void setCallback(android.graphics.drawable.Drawable.Callback cb)





*android.graphics.drawable.Drawable.setChangingConfigurations(int)*

public void setChangingConfigurations(int configs)





*android.graphics.drawable.Drawable.setColorFilter(ColorFilter)*

public abstract void setColorFilter(android.graphics.ColorFilter cf)





*android.graphics.drawable.Drawable.setColorFilter(int,PorterDuff.Mode)*

public void setColorFilter(
  int color,
  android.graphics.PorterDuff.Mode mode)





*android.graphics.drawable.Drawable.setDither(boolean)*

public void setDither(boolean dither)





*android.graphics.drawable.Drawable.setFilterBitmap(boolean)*

public void setFilterBitmap(boolean filter)





*android.graphics.drawable.Drawable.setLevel(int)*

public final boolean setLevel(int level)





*android.graphics.drawable.Drawable.setState(int[])*

public boolean setState(int[] stateSet)





*android.graphics.drawable.Drawable.setVisible(boolean,boolean)*

public boolean setVisible(
  boolean visible,
  boolean restart)





*android.graphics.drawable.Drawable.unscheduleSelf(Runnable)*

public void unscheduleSelf(java.lang.Runnable what)






