*android.content.ClipDescription* *ClipDescription* Meta-data describing the con

public class ClipDescription
  extends    |java.lang.Object|
  implements |android.os.Parcelable|

|android.content.ClipDescription_Description|
|android.content.ClipDescription_Fields|
|android.content.ClipDescription_Constructors|
|android.content.ClipDescription_Methods|

================================================================================

*android.content.ClipDescription_Fields*
|android.os.Parcelable.Creator<android.content.ClipDescription>_android.content.ClipDescription.CREATOR|
|java.lang.String_android.content.ClipDescription.MIMETYPE_TEXT_HTML|
|java.lang.String_android.content.ClipDescription.MIMETYPE_TEXT_INTENT|
|java.lang.String_android.content.ClipDescription.MIMETYPE_TEXT_PLAIN|
|java.lang.String_android.content.ClipDescription.MIMETYPE_TEXT_URILIST|

*android.content.ClipDescription_Constructors*
|android.content.ClipDescription(CharSequence,String[])|Create a new clip.
|android.content.ClipDescription(ClipDescription)|Create a copy of a ClipDescri

*android.content.ClipDescription_Methods*
|android.content.ClipDescription.compareMimeTypes(String,String)|Helper to comp
|android.content.ClipDescription.describeContents()|
|android.content.ClipDescription.filterMimeTypes(String)|Filter the clip descri
|android.content.ClipDescription.getLabel()|Return the label for this clip.
|android.content.ClipDescription.getMimeType(int)|Return one of the possible cl
|android.content.ClipDescription.getMimeTypeCount()|Return the number of MIME t
|android.content.ClipDescription.hasMimeType(String)|Check whether the clip des
|android.content.ClipDescription.toShortString(StringBuilder)|
|android.content.ClipDescription.toString()|
|android.content.ClipDescription.validate()|
|android.content.ClipDescription.writeToParcel(Parcel,int)|

*android.content.ClipDescription_Description*

Meta-data describing the contents of a (|android.content.ClipData|) . Provides 
enough information to know if you can handle the ClipData, but not the data 
itself. 

Developer Guides For more information about using the clipboard framework, read 
the <a href="guide/topics/clipboard/copy-paste.html">Copy and Paste developer 
guide. 



*android.os.Parcelable.Creator<android.content.ClipDescription>_android.content.ClipDescription.CREATOR*




*java.lang.String_android.content.ClipDescription.MIMETYPE_TEXT_HTML*

The MIME type for a clip holding HTML text. 


*java.lang.String_android.content.ClipDescription.MIMETYPE_TEXT_INTENT*

The MIME type for a clip holding an Intent. 


*java.lang.String_android.content.ClipDescription.MIMETYPE_TEXT_PLAIN*

The MIME type for a clip holding plain text. 


*java.lang.String_android.content.ClipDescription.MIMETYPE_TEXT_URILIST*

The MIME type for a clip holding one or more URIs. This should be used for URIs 
that are meaningful to a user (such as an http: URI). It should not be used for 
a content: URI that references some other piece of data; in that case the MIME 
type should be the type of the referenced data. 



*android.content.ClipDescription(CharSequence,String[])*

public ClipDescription(
  java.lang.CharSequence label,
  java.lang.String[] mimeTypes)

Create a new clip. 

    label - Label to show to the user describing this clip. 
    mimeTypes - An array of MIME types this data is available as. 

*android.content.ClipDescription(ClipDescription)*

public ClipDescription(android.content.ClipDescription o)

Create a copy of a ClipDescription. 


*android.content.ClipDescription.compareMimeTypes(String,String)*

public static boolean compareMimeTypes(
  java.lang.String concreteType,
  java.lang.String desiredType)

Helper to compare two MIME types, where one may be a pattern. 


    concreteType - A fully-specified MIME type. 
    desiredType - A desired MIME type that may be a pattern such as *\/*. 

    Returns: Returns true if the two MIME types match. 

*android.content.ClipDescription.describeContents()*

public int describeContents()





*android.content.ClipDescription.filterMimeTypes(String)*

public |java.lang.String|[] filterMimeTypes(java.lang.String mimeType)

Filter the clip description MIME types by the given MIME type. Returns all MIME 
types in the clip that match the given MIME type. 


    mimeType - The desired MIME type. May be a pattern. 

    Returns: Returns an array of all matching MIME types. If there are no matching MIME 
             types, null is returned. 

*android.content.ClipDescription.getLabel()*

public |java.lang.CharSequence| getLabel()

Return the label for this clip. 



*android.content.ClipDescription.getMimeType(int)*

public |java.lang.String| getMimeType(int index)

Return one of the possible clip MIME types. 



*android.content.ClipDescription.getMimeTypeCount()*

public int getMimeTypeCount()

Return the number of MIME types the clip is available in. 



*android.content.ClipDescription.hasMimeType(String)*

public boolean hasMimeType(java.lang.String mimeType)

Check whether the clip description contains the given MIME type. 


    mimeType - The desired MIME type. May be a pattern. 

    Returns: Returns true if one of the MIME types in the clip description matches the 
             desired MIME type, else false. 

*android.content.ClipDescription.toShortString(StringBuilder)*

public boolean toShortString(java.lang.StringBuilder b)





*android.content.ClipDescription.toString()*

public |java.lang.String| toString()





*android.content.ClipDescription.validate()*

public void validate()





*android.content.ClipDescription.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel dest,
  int flags)






