*android.content.PeriodicSync* *PeriodicSync* Value type that contains informati

public class PeriodicSync
  extends    |java.lang.Object|
  implements |android.os.Parcelable|

|android.content.PeriodicSync_Description|
|android.content.PeriodicSync_Fields|
|android.content.PeriodicSync_Constructors|
|android.content.PeriodicSync_Methods|

================================================================================

*android.content.PeriodicSync_Fields*
|android.accounts.Account_android.content.PeriodicSync.account|
|java.lang.String_android.content.PeriodicSync.authority|
|android.os.Parcelable.Creator<android.content.PeriodicSync>_android.content.PeriodicSync.CREATOR|
|android.os.Bundle_android.content.PeriodicSync.extras|
|long_android.content.PeriodicSync.flexTime|
|long_android.content.PeriodicSync.period|

*android.content.PeriodicSync_Constructors*
|android.content.PeriodicSync(Account,String,Bundle,long)|Creates a new Periodi
|android.content.PeriodicSync(Account,String,Bundle,long,long)|A PeriodicSync f
|android.content.PeriodicSync(PeriodicSync)|Create a copy of a periodic sync.

*android.content.PeriodicSync_Methods*
|android.content.PeriodicSync.describeContents()|
|android.content.PeriodicSync.equals(Object)|
|android.content.PeriodicSync.syncExtrasEquals(Bundle,Bundle)|Periodic sync ext
|android.content.PeriodicSync.toString()|
|android.content.PeriodicSync.writeToParcel(Parcel,int)|

*android.content.PeriodicSync_Description*

Value type that contains information about a periodic sync. 



*android.accounts.Account_android.content.PeriodicSync.account*

The account to be synced. Can be null. 


*java.lang.String_android.content.PeriodicSync.authority*

The authority of the sync. Can be null. 


*android.os.Parcelable.Creator<android.content.PeriodicSync>_android.content.PeriodicSync.CREATOR*




*android.os.Bundle_android.content.PeriodicSync.extras*

Any extras that parameters that are to be passed to the sync adapter. 


*long_android.content.PeriodicSync.flexTime*

How much flexibility can be taken in scheduling the sync, in seconds. 


*long_android.content.PeriodicSync.period*

How frequently the sync should be scheduled, in seconds. Kept around for API 
purposes. 



*android.content.PeriodicSync(Account,String,Bundle,long)*

public PeriodicSync(
  android.accounts.Account account,
  java.lang.String authority,
  android.os.Bundle extras,
  long periodInSeconds)

Creates a new PeriodicSync, copying the Bundle. SM no longer uses this ctor - 
kept around becuse it is part of the API. Note - even calls to the old API will 
not use this ctor, as they are given a default flex time. 


*android.content.PeriodicSync(Account,String,Bundle,long,long)*

public PeriodicSync(
  android.accounts.Account account,
  java.lang.String authority,
  android.os.Bundle extras,
  long period,
  long flexTime)

A PeriodicSync for a sync with a specified provider. 


*android.content.PeriodicSync(PeriodicSync)*

public PeriodicSync(android.content.PeriodicSync other)

Create a copy of a periodic sync. 


*android.content.PeriodicSync.describeContents()*

public int describeContents()





*android.content.PeriodicSync.equals(Object)*

public boolean equals(java.lang.Object o)





*android.content.PeriodicSync.syncExtrasEquals(Bundle,Bundle)*

public static boolean syncExtrasEquals(
  android.os.Bundle b1,
  android.os.Bundle b2)

Periodic sync extra comparison function. 



*android.content.PeriodicSync.toString()*

public |java.lang.String| toString()





*android.content.PeriodicSync.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel dest,
  int flags)






