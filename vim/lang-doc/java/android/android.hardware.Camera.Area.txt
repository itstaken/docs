*android.hardware.Camera.Area* *Camera.Area* The Area class is used for choosing

public static class Camera.Area
  extends    |java.lang.Object|

|android.hardware.Camera.Area_Description|
|android.hardware.Camera.Area_Fields|
|android.hardware.Camera.Area_Constructors|
|android.hardware.Camera.Area_Methods|

================================================================================

*android.hardware.Camera.Area_Fields*
|Rect_android.hardware.Camera.Area.rect|
|int_android.hardware.Camera.Area.weight|

*android.hardware.Camera.Area_Constructors*
|android.hardware.Camera.Area(Rect,int)|Create an area with specified rectangle

*android.hardware.Camera.Area_Methods*
|android.hardware.Camera.Area.equals(Object)|Comparesobjto this area.

*android.hardware.Camera.Area_Description*

The Area class is used for choosing specific metering and focus areas for the 
camera to use when calculating auto-exposure, auto-white balance, and 
auto-focus. 

To find out how many simultaneous areas a given camera supports, use 
(|android.hardware.Camera.Parameters|) and 
(|android.hardware.Camera.Parameters|) . If metering or focusing area selection 
is unsupported, these methods will return 0. 

Each Area consists of a rectangle specifying its bounds, and a weight that 
determines its importance. The bounds are relative to the camera's current 
field of view. The coordinates are mapped so that (-1000, -1000) is always the 
top-left corner of the current field of view, and (1000, 1000) is always the 
bottom-right corner of the current field of view. Setting Areas with bounds 
outside that range is not allowed. Areas with zero or negative width or height 
are not allowed. 

The weight must range from 1 to 1000, and represents a weight for every pixel 
in the area. This means that a large metering area with the same weight as a 
smaller area will have more effect in the metering result. Metering areas can 
overlap and the driver will add the weights in the overlap region. 



*Rect_android.hardware.Camera.Area.rect*

Bounds of the area. (-1000, -1000) represents the top-left of the camera field 
of view, and (1000, 1000) represents the bottom-right of the field of view. 
Setting bounds outside that range is not allowed. Bounds with zero or negative 
width or height are not allowed. 


*int_android.hardware.Camera.Area.weight*

Weight of the area. The weight must range from 1 to 1000, and represents a 
weight for every pixel in the area. This means that a large metering area with 
the same weight as a smaller area will have more effect in the metering result. 
Metering areas can overlap and the driver will add the weights in the overlap 
region. 



*android.hardware.Camera.Area(Rect,int)*

public Camera.Area(
  Rect rect,
  int weight)

Create an area with specified rectangle and weight. 

    rect - the bounds of the area. 
    weight - the weight of the area. 

*android.hardware.Camera.Area.equals(Object)*

public boolean equals(java.lang.Object obj)

Comparesobjto this area. 


    obj - the object to compare this area with. 

    Returns: {@code true} if the rectangle and weight of {@code obj} is the same as those of 
             this area. {@code false} otherwise. 


