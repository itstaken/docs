*android.speech.srec.UlawEncoderInputStream* *UlawEncoderInputStream* InputStrea

public final class UlawEncoderInputStream
  extends    |java.io.InputStream|

|android.speech.srec.UlawEncoderInputStream_Description|
|android.speech.srec.UlawEncoderInputStream_Fields|
|android.speech.srec.UlawEncoderInputStream_Constructors|
|android.speech.srec.UlawEncoderInputStream_Methods|

================================================================================

*android.speech.srec.UlawEncoderInputStream_Constructors*
|android.speech.srec.UlawEncoderInputStream(InputStream,int)|Create an InputStr

*android.speech.srec.UlawEncoderInputStream_Methods*
|android.speech.srec.UlawEncoderInputStream.available()|
|android.speech.srec.UlawEncoderInputStream.close()|
|android.speech.srec.UlawEncoderInputStream.encode(byte[],int,byte[],int,int,int)|
|android.speech.srec.UlawEncoderInputStream.maxAbsPcm(byte[],int,int)|Compute t
|android.speech.srec.UlawEncoderInputStream.read()|
|android.speech.srec.UlawEncoderInputStream.read(byte[])|
|android.speech.srec.UlawEncoderInputStream.read(byte[],int,int)|

*android.speech.srec.UlawEncoderInputStream_Description*

InputStream which transforms 16 bit pcm data to ulaw data. 

Not yet ready to be supported, so 



*android.speech.srec.UlawEncoderInputStream(InputStream,int)*

public UlawEncoderInputStream(
  java.io.InputStream in,
  int max)

Create an InputStream which takes 16 bit pcm data and produces ulaw data. 

    in - InputStream containing 16 bit pcm data. 
    max - pcm value corresponding to maximum ulaw value. 

*android.speech.srec.UlawEncoderInputStream.available()*

public int available()
  throws |java.io.IOException|
         




*android.speech.srec.UlawEncoderInputStream.close()*

public void close()
  throws |java.io.IOException|
         




*android.speech.srec.UlawEncoderInputStream.encode(byte[],int,byte[],int,int,int)*

public static void encode(
  byte[] pcmBuf,
  int pcmOffset,
  byte[] ulawBuf,
  int ulawOffset,
  int length,
  int max)





*android.speech.srec.UlawEncoderInputStream.maxAbsPcm(byte[],int,int)*

public static int maxAbsPcm(
  byte[] pcmBuf,
  int offset,
  int length)

Compute the maximum of the absolute value of the pcm samples. The return value 
can be used to set ulaw encoder scaling. 


    pcmBuf - array containing 16 bit pcm data. 
    offset - offset of start of 16 bit pcm data. 
    length - number of pcm samples (not number of input bytes) 

    Returns: maximum abs of pcm data values 

*android.speech.srec.UlawEncoderInputStream.read()*

public int read()
  throws |java.io.IOException|
         




*android.speech.srec.UlawEncoderInputStream.read(byte[])*

public int read(byte[] buf)
  throws |java.io.IOException|
         




*android.speech.srec.UlawEncoderInputStream.read(byte[],int,int)*

public int read(
  byte[] buf,
  int offset,
  int length)
  throws |java.io.IOException|
         





