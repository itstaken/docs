*android.graphics.ColorMatrixColorFilter_Delegate* *ColorMatrixColorFilter_Delegate* 

public class ColorMatrixColorFilter_Delegate
  extends    |android.graphics.ColorFilter_Delegate|

|android.graphics.ColorMatrixColorFilter_Delegate_Description|
|android.graphics.ColorMatrixColorFilter_Delegate_Fields|
|android.graphics.ColorMatrixColorFilter_Delegate_Constructors|
|android.graphics.ColorMatrixColorFilter_Delegate_Methods|

================================================================================

*android.graphics.ColorMatrixColorFilter_Delegate_Constructors*
|android.graphics.ColorMatrixColorFilter_Delegate()|

*android.graphics.ColorMatrixColorFilter_Delegate_Methods*
|android.graphics.ColorMatrixColorFilter_Delegate.getSupportMessage()|
|android.graphics.ColorMatrixColorFilter_Delegate.isSupported()|

*android.graphics.ColorMatrixColorFilter_Delegate_Description*

Delegate implementing the native methods of 
android.graphics.ColorMatrixColorFilter 

Through the layoutlib_create tool, the original native methods of 
ColorMatrixColorFilter have been replaced by calls to methods of the same name 
in this delegate class. 

This class behaves like the original native implementation, but in Java, 
keeping previously native data into its own objects and mapping them to int 
that are sent back and forth between it and the original ColorMatrixColorFilter 
class. 

Because this extends (|android.graphics.ColorFilter_Delegate|) , there's no 
need to use a (|com.android.layoutlib.bridge.impl.DelegateManager|) , as all 
the Shader classes will be added to the manager owned by 
(|android.graphics.ColorFilter_Delegate|) . 



*android.graphics.ColorMatrixColorFilter_Delegate()*

public ColorMatrixColorFilter_Delegate()




*android.graphics.ColorMatrixColorFilter_Delegate.getSupportMessage()*

public |java.lang.String| getSupportMessage()





*android.graphics.ColorMatrixColorFilter_Delegate.isSupported()*

public boolean isSupported()






