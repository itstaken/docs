*android.widget.CompoundButton* *CompoundButton* 
 A button with two states, che

public abstract class CompoundButton
  extends    |android.widget.Button|
  implements |android.widget.Checkable|

|android.widget.CompoundButton_Description|
|android.widget.CompoundButton_Fields|
|android.widget.CompoundButton_Constructors|
|android.widget.CompoundButton_Methods|

================================================================================

*android.widget.CompoundButton_Constructors*
|android.widget.CompoundButton(Context)|
|android.widget.CompoundButton(Context,AttributeSet)|
|android.widget.CompoundButton(Context,AttributeSet,int)|

*android.widget.CompoundButton_Methods*
|android.widget.CompoundButton.drawableStateChanged()|
|android.widget.CompoundButton.getCompoundPaddingLeft()|
|android.widget.CompoundButton.getCompoundPaddingRight()|
|android.widget.CompoundButton.getHorizontalOffsetForDrawables()|
|android.widget.CompoundButton.isChecked()|
|android.widget.CompoundButton.jumpDrawablesToCurrentState()|
|android.widget.CompoundButton.onCreateDrawableState(int)|
|android.widget.CompoundButton.onDraw(Canvas)|
|android.widget.CompoundButton.onInitializeAccessibilityEvent(AccessibilityEvent)|
|android.widget.CompoundButton.onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo)|
|android.widget.CompoundButton.onRestoreInstanceState(Parcelable)|
|android.widget.CompoundButton.onSaveInstanceState()|
|android.widget.CompoundButton.performClick()|
|android.widget.CompoundButton.setButtonDrawable(Drawable)|Set the background t
|android.widget.CompoundButton.setButtonDrawable(int)|Set the background to a g
|android.widget.CompoundButton.setChecked(boolean)|Changes the checked state of
|android.widget.CompoundButton.setOnCheckedChangeListener(CompoundButton.OnCheckedChangeListener)|
|android.widget.CompoundButton.toggle()|
|android.widget.CompoundButton.verifyDrawable(Drawable)|

*android.widget.CompoundButton_Description*

A button with two states, checked and unchecked. When the button is pressed or 
clicked, the state changes automatically. 

XML attributes 

See CompoundButton Attributes(|android.R.styleable|) , Button 
Attributes(|android.R.styleable|) , TextView Attributes(|android.R.styleable|) 
, View Attributes(|android.R.styleable|) 



*android.widget.CompoundButton(Context)*

public CompoundButton(android.content.Context context)




*android.widget.CompoundButton(Context,AttributeSet)*

public CompoundButton(
  android.content.Context context,
  android.util.AttributeSet attrs)




*android.widget.CompoundButton(Context,AttributeSet,int)*

public CompoundButton(
  android.content.Context context,
  android.util.AttributeSet attrs,
  int defStyle)




*android.widget.CompoundButton.drawableStateChanged()*

protected void drawableStateChanged()





*android.widget.CompoundButton.getCompoundPaddingLeft()*

public int getCompoundPaddingLeft()





*android.widget.CompoundButton.getCompoundPaddingRight()*

public int getCompoundPaddingRight()





*android.widget.CompoundButton.getHorizontalOffsetForDrawables()*

public int getHorizontalOffsetForDrawables()





*android.widget.CompoundButton.isChecked()*

public boolean isChecked()





*android.widget.CompoundButton.jumpDrawablesToCurrentState()*

public void jumpDrawablesToCurrentState()





*android.widget.CompoundButton.onCreateDrawableState(int)*

protected int[] onCreateDrawableState(int extraSpace)





*android.widget.CompoundButton.onDraw(Canvas)*

protected void onDraw(Canvas canvas)





*android.widget.CompoundButton.onInitializeAccessibilityEvent(AccessibilityEvent)*

public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent event)





*android.widget.CompoundButton.onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo)*

public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo info)





*android.widget.CompoundButton.onRestoreInstanceState(Parcelable)*

public void onRestoreInstanceState(android.os.Parcelable state)





*android.widget.CompoundButton.onSaveInstanceState()*

public |android.os.Parcelable| onSaveInstanceState()





*android.widget.CompoundButton.performClick()*

public boolean performClick()





*android.widget.CompoundButton.setButtonDrawable(Drawable)*

public void setButtonDrawable(Drawable d)

Set the background to a given Drawable 


    d - The Drawable to use as the background 

*android.widget.CompoundButton.setButtonDrawable(int)*

public void setButtonDrawable(int resid)

Set the background to a given Drawable, identified by its resource id. 


    resid - the resource id of the drawable to use as the background 

*android.widget.CompoundButton.setChecked(boolean)*

public void setChecked(boolean checked)

Changes the checked state of this button. 


    checked - true to check the button, false to uncheck it 

*android.widget.CompoundButton.setOnCheckedChangeListener(CompoundButton.OnCheckedChangeListener)*

public void setOnCheckedChangeListener(android.widget.CompoundButton.OnCheckedChangeListener listener)

Register a callback to be invoked when the checked state of this button 
changes. 


    listener - the callback to call on checked state change 

*android.widget.CompoundButton.toggle()*

public void toggle()





*android.widget.CompoundButton.verifyDrawable(Drawable)*

protected boolean verifyDrawable(Drawable who)






