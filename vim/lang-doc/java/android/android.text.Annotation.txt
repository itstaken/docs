*android.text.Annotation* *Annotation* Annotations are simple key-value pairs th

public class Annotation
  extends    |java.lang.Object|
  implements |android.text.ParcelableSpan|

|android.text.Annotation_Description|
|android.text.Annotation_Fields|
|android.text.Annotation_Constructors|
|android.text.Annotation_Methods|

================================================================================

*android.text.Annotation_Constructors*
|android.text.Annotation(Parcel)|
|android.text.Annotation(String,String)|

*android.text.Annotation_Methods*
|android.text.Annotation.describeContents()|
|android.text.Annotation.getKey()|
|android.text.Annotation.getSpanTypeId()|
|android.text.Annotation.getValue()|
|android.text.Annotation.writeToParcel(Parcel,int)|

*android.text.Annotation_Description*

Annotations are simple key-value pairs that are preserved across TextView 
save/restore cycles and can be used to keep application-specific data that 
needs to be maintained for regions of text. 



*android.text.Annotation(Parcel)*

public Annotation(android.os.Parcel src)




*android.text.Annotation(String,String)*

public Annotation(
  java.lang.String key,
  java.lang.String value)




*android.text.Annotation.describeContents()*

public int describeContents()





*android.text.Annotation.getKey()*

public |java.lang.String| getKey()





*android.text.Annotation.getSpanTypeId()*

public int getSpanTypeId()





*android.text.Annotation.getValue()*

public |java.lang.String| getValue()





*android.text.Annotation.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel dest,
  int flags)






