*android.nfc.NfcActivityManager* *NfcActivityManager* Manages NFC API's that are

public final class NfcActivityManager
  extends    |IAppCallback.Stub|
  implements |android.app.Application.ActivityLifecycleCallbacks|

|android.nfc.NfcActivityManager_Description|
|android.nfc.NfcActivityManager_Fields|
|android.nfc.NfcActivityManager_Constructors|
|android.nfc.NfcActivityManager_Methods|

================================================================================

*android.nfc.NfcActivityManager_Constructors*
|android.nfc.NfcActivityManager(NfcAdapter)|

*android.nfc.NfcActivityManager_Methods*
|android.nfc.NfcActivityManager.createBeamShareData()|Callback from NFC service
|android.nfc.NfcActivityManager.disableReaderMode(Activity)|
|android.nfc.NfcActivityManager.enableReaderMode(Activity,NfcAdapter.ReaderCallback,int,Bundle)|
|android.nfc.NfcActivityManager.onActivityCreated(Activity,Bundle)|Callback fro
|android.nfc.NfcActivityManager.onActivityDestroyed(Activity)|Callback from Act
|android.nfc.NfcActivityManager.onActivityPaused(Activity)|Callback from Activi
|android.nfc.NfcActivityManager.onActivityResumed(Activity)|Callback from Activ
|android.nfc.NfcActivityManager.onActivitySaveInstanceState(Activity,Bundle)|Ca
|android.nfc.NfcActivityManager.onActivityStarted(Activity)|Callback from Activ
|android.nfc.NfcActivityManager.onActivityStopped(Activity)|Callback from Activ
|android.nfc.NfcActivityManager.onNdefPushComplete()|Callback from NFC service,
|android.nfc.NfcActivityManager.onTagDiscovered(Tag)|
|android.nfc.NfcActivityManager.setNdefPushContentUri(Activity,Uri[])|
|android.nfc.NfcActivityManager.setNdefPushContentUriCallback(Activity,NfcAdapter.CreateBeamUrisCallback)|
|android.nfc.NfcActivityManager.setNdefPushMessage(Activity,NdefMessage,int)|
|android.nfc.NfcActivityManager.setNdefPushMessageCallback(Activity,NfcAdapter.CreateNdefMessageCallback,int)|
|android.nfc.NfcActivityManager.setOnNdefPushCompleteCallback(Activity,NfcAdapter.OnNdefPushCompleteCallback)|
|android.nfc.NfcActivityManager.setReaderMode(Binder,int,Bundle)|

*android.nfc.NfcActivityManager_Description*

Manages NFC API's that are coupled to the life-cycle of an Activity. 

Uses (|android.app.Application|) to hook into activity life-cycle events such 
as onPause() and onResume(). 



*android.nfc.NfcActivityManager(NfcAdapter)*

public NfcActivityManager(android.nfc.NfcAdapter adapter)




*android.nfc.NfcActivityManager.createBeamShareData()*

public |android.nfc.BeamShareData| createBeamShareData()

Callback from NFC service, usually on binder thread 



*android.nfc.NfcActivityManager.disableReaderMode(Activity)*

public void disableReaderMode(android.app.Activity activity)





*android.nfc.NfcActivityManager.enableReaderMode(Activity,NfcAdapter.ReaderCallback,int,Bundle)*

public void enableReaderMode(
  android.app.Activity activity,
  android.nfc.NfcAdapter.ReaderCallback callback,
  int flags,
  android.os.Bundle extras)





*android.nfc.NfcActivityManager.onActivityCreated(Activity,Bundle)*

public void onActivityCreated(
  android.app.Activity activity,
  android.os.Bundle savedInstanceState)

Callback from Activity life-cycle, on main thread 



*android.nfc.NfcActivityManager.onActivityDestroyed(Activity)*

public void onActivityDestroyed(android.app.Activity activity)

Callback from Activity life-cycle, on main thread 



*android.nfc.NfcActivityManager.onActivityPaused(Activity)*

public void onActivityPaused(android.app.Activity activity)

Callback from Activity life-cycle, on main thread 



*android.nfc.NfcActivityManager.onActivityResumed(Activity)*

public void onActivityResumed(android.app.Activity activity)

Callback from Activity life-cycle, on main thread 



*android.nfc.NfcActivityManager.onActivitySaveInstanceState(Activity,Bundle)*

public void onActivitySaveInstanceState(
  android.app.Activity activity,
  android.os.Bundle outState)

Callback from Activity life-cycle, on main thread 



*android.nfc.NfcActivityManager.onActivityStarted(Activity)*

public void onActivityStarted(android.app.Activity activity)

Callback from Activity life-cycle, on main thread 



*android.nfc.NfcActivityManager.onActivityStopped(Activity)*

public void onActivityStopped(android.app.Activity activity)

Callback from Activity life-cycle, on main thread 



*android.nfc.NfcActivityManager.onNdefPushComplete()*

public void onNdefPushComplete()

Callback from NFC service, usually on binder thread 



*android.nfc.NfcActivityManager.onTagDiscovered(Tag)*

public void onTagDiscovered(android.nfc.Tag tag)
  throws |android.os.RemoteException|
         




*android.nfc.NfcActivityManager.setNdefPushContentUri(Activity,Uri[])*

public void setNdefPushContentUri(
  android.app.Activity activity,
  android.net.Uri[] uris)





*android.nfc.NfcActivityManager.setNdefPushContentUriCallback(Activity,NfcAdapter.CreateBeamUrisCallback)*

public void setNdefPushContentUriCallback(
  android.app.Activity activity,
  android.nfc.NfcAdapter.CreateBeamUrisCallback callback)





*android.nfc.NfcActivityManager.setNdefPushMessage(Activity,NdefMessage,int)*

public void setNdefPushMessage(
  android.app.Activity activity,
  android.nfc.NdefMessage message,
  int flags)





*android.nfc.NfcActivityManager.setNdefPushMessageCallback(Activity,NfcAdapter.CreateNdefMessageCallback,int)*

public void setNdefPushMessageCallback(
  android.app.Activity activity,
  android.nfc.NfcAdapter.CreateNdefMessageCallback callback,
  int flags)





*android.nfc.NfcActivityManager.setOnNdefPushCompleteCallback(Activity,NfcAdapter.OnNdefPushCompleteCallback)*

public void setOnNdefPushCompleteCallback(
  android.app.Activity activity,
  android.nfc.NfcAdapter.OnNdefPushCompleteCallback callback)





*android.nfc.NfcActivityManager.setReaderMode(Binder,int,Bundle)*

public void setReaderMode(
  android.os.Binder token,
  int flags,
  android.os.Bundle extras)






