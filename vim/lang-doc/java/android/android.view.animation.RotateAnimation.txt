*android.view.animation.RotateAnimation* *RotateAnimation* An animation that con

public class RotateAnimation
  extends    |android.view.animation.Animation|

|android.view.animation.RotateAnimation_Description|
|android.view.animation.RotateAnimation_Fields|
|android.view.animation.RotateAnimation_Constructors|
|android.view.animation.RotateAnimation_Methods|

================================================================================

*android.view.animation.RotateAnimation_Constructors*
|android.view.animation.RotateAnimation(Context,AttributeSet)|Constructor used 
|android.view.animation.RotateAnimation(float,float)|Constructor to use when bu
|android.view.animation.RotateAnimation(float,float,float,float)|Constructor to
|android.view.animation.RotateAnimation(float,float,int,float,int,float)|Constr

*android.view.animation.RotateAnimation_Methods*
|android.view.animation.RotateAnimation.applyTransformation(float,Transformation)|
|android.view.animation.RotateAnimation.initialize(int,int,int,int)|

*android.view.animation.RotateAnimation_Description*

An animation that controls the rotation of an object. This rotation takes place 
in the X-Y plane. You can specify the point to use for the center of the 
rotation, where (0,0) is the top left point. If not specified, (0,0) is the 
default rotation point. 



*android.view.animation.RotateAnimation(Context,AttributeSet)*

public RotateAnimation(
  android.content.Context context,
  android.util.AttributeSet attrs)

Constructor used when a RotateAnimation is loaded from a resource. 

    context - Application context to use 
    attrs - Attribute set from which to read values 

*android.view.animation.RotateAnimation(float,float)*

public RotateAnimation(
  float fromDegrees,
  float toDegrees)

Constructor to use when building a RotateAnimation from code. Default 
pivotX/pivotY point is (0,0). 

    fromDegrees - Rotation offset to apply at the start of the animation. 
    toDegrees - Rotation offset to apply at the end of the animation. 

*android.view.animation.RotateAnimation(float,float,float,float)*

public RotateAnimation(
  float fromDegrees,
  float toDegrees,
  float pivotX,
  float pivotY)

Constructor to use when building a RotateAnimation from code 

    fromDegrees - Rotation offset to apply at the start of the animation. 
    toDegrees - Rotation offset to apply at the end of the animation. 
    pivotX - The X coordinate of the point about which the object is being rotated, 
       specified as an absolute number where 0 is the left edge. 
    pivotY - The Y coordinate of the point about which the object is being rotated, 
       specified as an absolute number where 0 is the top edge. 

*android.view.animation.RotateAnimation(float,float,int,float,int,float)*

public RotateAnimation(
  float fromDegrees,
  float toDegrees,
  int pivotXType,
  float pivotXValue,
  int pivotYType,
  float pivotYValue)

Constructor to use when building a RotateAnimation from code 

    fromDegrees - Rotation offset to apply at the start of the animation. 
    toDegrees - Rotation offset to apply at the end of the animation. 
    pivotXType - Specifies how pivotXValue should be interpreted. One of Animation.ABSOLUTE, 
       Animation.RELATIVE_TO_SELF, or Animation.RELATIVE_TO_PARENT. 
    pivotXValue - The X coordinate of the point about which the object is being rotated, 
       specified as an absolute number where 0 is the left edge. This value can 
       either be an absolute number if pivotXType is ABSOLUTE, or a percentage 
       (where 1.0 is 100%) otherwise. 
    pivotYType - Specifies how pivotYValue should be interpreted. One of Animation.ABSOLUTE, 
       Animation.RELATIVE_TO_SELF, or Animation.RELATIVE_TO_PARENT. 
    pivotYValue - The Y coordinate of the point about which the object is being rotated, 
       specified as an absolute number where 0 is the top edge. This value can 
       either be an absolute number if pivotYType is ABSOLUTE, or a percentage 
       (where 1.0 is 100%) otherwise. 

*android.view.animation.RotateAnimation.applyTransformation(float,Transformation)*

protected void applyTransformation(
  float interpolatedTime,
  android.view.animation.Transformation t)





*android.view.animation.RotateAnimation.initialize(int,int,int,int)*

public void initialize(
  int width,
  int height,
  int parentWidth,
  int parentHeight)






