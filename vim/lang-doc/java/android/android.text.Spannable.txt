*android.text.Spannable* *Spannable* This is the interface for text to which mar

public interface interface Spannable

  implements |android.text.Spanned|

|android.text.Spannable_Description|
|android.text.Spannable_Fields|
|android.text.Spannable_Constructors|
|android.text.Spannable_Methods|

================================================================================

*android.text.Spannable_Methods*
|android.text.Spannable.removeSpan(Object)|Remove the specified object from the
|android.text.Spannable.setSpan(Object,int,int,int)|Attach the specified markup

*android.text.Spannable_Description*

This is the interface for text to which markup objects can be attached and 
detached. Not all Spannable classes have mutable text; see 
(|android.text.Editable|) for that. 



*android.text.Spannable.removeSpan(Object)*

public void removeSpan(java.lang.Object what)

Remove the specified object from the range of text to which it was attached, if 
any. It is OK to remove an object that was never attached in the first place. 



*android.text.Spannable.setSpan(Object,int,int,int)*

public void setSpan(
  java.lang.Object what,
  int start,
  int end,
  int flags)

Attach the specified markup object to the range startend of the text, or move 
the object to that range if it was already attached elsewhere. See 
(|android.text.Spanned|) for an explanation of what the flags mean. The object 
can be one that has meaning only within your application, or it can be one that 
the text system will use to affect text display or behavior. Some noteworthy 
ones are the subclasses of (|android.text.style.CharacterStyle|) and 
(|android.text.style.ParagraphStyle|) , and (|android.text.TextWatcher|) and 
(|android.text.SpanWatcher|) . 




