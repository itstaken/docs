*android.hardware.Camera.CameraInfo* *Camera.CameraInfo* Information about a cam

public static class Camera.CameraInfo
  extends    |java.lang.Object|

|android.hardware.Camera.CameraInfo_Description|
|android.hardware.Camera.CameraInfo_Fields|
|android.hardware.Camera.CameraInfo_Constructors|
|android.hardware.Camera.CameraInfo_Methods|

================================================================================

*android.hardware.Camera.CameraInfo_Fields*
|int_android.hardware.Camera.CameraInfo.CAMERA_FACING_BACK|
|int_android.hardware.Camera.CameraInfo.CAMERA_FACING_FRONT|
|boolean_android.hardware.Camera.CameraInfo.canDisableShutterSound|
|int_android.hardware.Camera.CameraInfo.facing|
|int_android.hardware.Camera.CameraInfo.orientation|

*android.hardware.Camera.CameraInfo_Constructors*
|android.hardware.Camera.CameraInfo()|

*android.hardware.Camera.CameraInfo_Description*

Information about a camera 



*int_android.hardware.Camera.CameraInfo.CAMERA_FACING_BACK*

The facing of the camera is opposite to that of the screen. 


*int_android.hardware.Camera.CameraInfo.CAMERA_FACING_FRONT*

The facing of the camera is the same as that of the screen. 


*boolean_android.hardware.Camera.CameraInfo.canDisableShutterSound*

Whether the shutter sound can be disabled. 

On some devices, the camera shutter sound cannot be turned off through 
enableShutterSound(|android.hardware.Camera.CameraInfo|) . This field can be 
used to determine whether a call to disable the shutter sound will succeed. 

If this field is set to true, then a call ofenableShutterSound(false)will be 
successful. If set to false, then that call will fail, and the shutter sound 
will be played when takePicture(|android.hardware.Camera|) is called. 


*int_android.hardware.Camera.CameraInfo.facing*

The direction that the camera faces. It should be CAMERA_FACING_BACK or 
CAMERA_FACING_FRONT. 


*int_android.hardware.Camera.CameraInfo.orientation*

The orientation of the camera image. The value is the angle that the camera 
image needs to be rotated clockwise so it shows correctly on the display in its 
natural orientation. It should be 0, 90, 180, or 270. 

For example, suppose a device has a naturally tall screen. The back-facing 
camera sensor is mounted in landscape. You are looking at the screen. If the 
top side of the camera sensor is aligned with the right edge of the screen in 
natural orientation, the value should be 90. If the top side of a front-facing 
camera sensor is aligned with the right of the screen, the value should be 270. 



*android.hardware.Camera.CameraInfo()*

public Camera.CameraInfo()




