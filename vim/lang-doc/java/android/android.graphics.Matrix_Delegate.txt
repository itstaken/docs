*android.graphics.Matrix_Delegate* *Matrix_Delegate* Delegate implementing the n

public final class Matrix_Delegate
  extends    |java.lang.Object|

|android.graphics.Matrix_Delegate_Description|
|android.graphics.Matrix_Delegate_Fields|
|android.graphics.Matrix_Delegate_Constructors|
|android.graphics.Matrix_Delegate_Methods|

================================================================================

*android.graphics.Matrix_Delegate_Methods*
|android.graphics.Matrix_Delegate.getAffineTransform()|Returns anAffineTransfor
|android.graphics.Matrix_Delegate.getAffineTransform(Matrix)|Returns anAffineTr
|android.graphics.Matrix_Delegate.getDelegate(int)|
|android.graphics.Matrix_Delegate.hasPerspective()|
|android.graphics.Matrix_Delegate.hasPerspective(Matrix)|
|android.graphics.Matrix_Delegate.isIdentity()|Returns whether or not the matri
|android.graphics.Matrix_Delegate.make(AffineTransform)|
|android.graphics.Matrix_Delegate.makeValues(AffineTransform)|
|android.graphics.Matrix_Delegate.mapRect(RectF,RectF)|
|android.graphics.Matrix_Delegate.reset()|Resets the matrix to be the identity 
|android.graphics.Matrix_Delegate.set(float[])|Sets the content of the matrix w
|android.graphics.Matrix_Delegate.set(Matrix_Delegate)|Sets the content of the 

*android.graphics.Matrix_Delegate_Description*

Delegate implementing the native methods of android.graphics.Matrix 

Through the layoutlib_create tool, the original native methods of Matrix have 
been replaced by calls to methods of the same name in this delegate class. 

This class behaves like the original native implementation, but in Java, 
keeping previously native data into its own objects and mapping them to int 
that are sent back and forth between it and the original Matrix class. 



*android.graphics.Matrix_Delegate.getAffineTransform()*

public |java.awt.geom.AffineTransform| getAffineTransform()

Returns an (|java.awt.geom.AffineTransform|) matching the matrix. 



*android.graphics.Matrix_Delegate.getAffineTransform(Matrix)*

public static |java.awt.geom.AffineTransform| getAffineTransform(Matrix m)

Returns an (|java.awt.geom.AffineTransform|) matching the given Matrix. 



*android.graphics.Matrix_Delegate.getDelegate(int)*

public static |android.graphics.Matrix_Delegate| getDelegate(int native_instance)





*android.graphics.Matrix_Delegate.hasPerspective()*

public boolean hasPerspective()





*android.graphics.Matrix_Delegate.hasPerspective(Matrix)*

public static boolean hasPerspective(Matrix m)





*android.graphics.Matrix_Delegate.isIdentity()*

public boolean isIdentity()

Returns whether or not the matrix is identity. 



*android.graphics.Matrix_Delegate.make(AffineTransform)*

public static |android.graphics.Matrix_Delegate| make(java.awt.geom.AffineTransform matrix)





*android.graphics.Matrix_Delegate.makeValues(AffineTransform)*

public static float[] makeValues(java.awt.geom.AffineTransform matrix)





*android.graphics.Matrix_Delegate.mapRect(RectF,RectF)*

public boolean mapRect(
  RectF dst,
  RectF src)





*android.graphics.Matrix_Delegate.reset()*

public void reset()

Resets the matrix to be the identity matrix. 



*android.graphics.Matrix_Delegate.set(float[])*

public void set(float[] values)

Sets the content of the matrix with the content of another matrix represented 
as an array of values. 



*android.graphics.Matrix_Delegate.set(Matrix_Delegate)*

public void set(android.graphics.Matrix_Delegate matrix)

Sets the content of the matrix with the content of another matrix. 




