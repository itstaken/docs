*android.content.pm.LabeledIntent* *LabeledIntent* A special subclass of Intent 

public class LabeledIntent
  extends    |android.content.Intent|

|android.content.pm.LabeledIntent_Description|
|android.content.pm.LabeledIntent_Fields|
|android.content.pm.LabeledIntent_Constructors|
|android.content.pm.LabeledIntent_Methods|

================================================================================

*android.content.pm.LabeledIntent_Fields*
|android.os.Parcelable.Creator<android.content.pm.LabeledIntent>_android.content.pm.LabeledIntent.CREATOR|

*android.content.pm.LabeledIntent_Constructors*
|android.content.pm.LabeledIntent(Intent,String,CharSequence,int)|Create a labe
|android.content.pm.LabeledIntent(Intent,String,int,int)|Create a labeled inten
|android.content.pm.LabeledIntent(Parcel)|
|android.content.pm.LabeledIntent(String,CharSequence,int)|Create a labeled int
|android.content.pm.LabeledIntent(String,int,int)|Create a labeled intent with 

*android.content.pm.LabeledIntent_Methods*
|android.content.pm.LabeledIntent.getIconResource()|Return any resource identif
|android.content.pm.LabeledIntent.getLabelResource()|Return any resource identi
|android.content.pm.LabeledIntent.getNonLocalizedLabel()|Return any concrete te
|android.content.pm.LabeledIntent.getSourcePackage()|Return the name of the pac
|android.content.pm.LabeledIntent.loadIcon(PackageManager)|Retrieve the icon as
|android.content.pm.LabeledIntent.loadLabel(PackageManager)|Retrieve the label 
|android.content.pm.LabeledIntent.readFromParcel(Parcel)|
|android.content.pm.LabeledIntent.writeToParcel(Parcel,int)|

*android.content.pm.LabeledIntent_Description*

A special subclass of Intent that can have a custom label/icon associated with 
it. Primarily for use with (|android.content.Intent|) . 



*android.os.Parcelable.Creator<android.content.pm.LabeledIntent>_android.content.pm.LabeledIntent.CREATOR*





*android.content.pm.LabeledIntent(Intent,String,CharSequence,int)*

public LabeledIntent(
  android.content.Intent origIntent,
  java.lang.String sourcePackage,
  java.lang.CharSequence nonLocalizedLabel,
  int icon)

Create a labeled intent from the given intent, supplying a textual label and 
icon resource for it. 

    origIntent - The original Intent to copy. 
    sourcePackage - The package in which the label and icon live. 
    nonLocalizedLabel - Concrete text to use for the label. 
    icon - Resource containing the icon, or 0 if none. 

*android.content.pm.LabeledIntent(Intent,String,int,int)*

public LabeledIntent(
  android.content.Intent origIntent,
  java.lang.String sourcePackage,
  int labelRes,
  int icon)

Create a labeled intent from the given intent, supplying the label and icon 
resources for it. 

    origIntent - The original Intent to copy. 
    sourcePackage - The package in which the label and icon live. 
    labelRes - Resource containing the label, or 0 if none. 
    icon - Resource containing the icon, or 0 if none. 

*android.content.pm.LabeledIntent(Parcel)*

protected LabeledIntent(android.os.Parcel in)




*android.content.pm.LabeledIntent(String,CharSequence,int)*

public LabeledIntent(
  java.lang.String sourcePackage,
  java.lang.CharSequence nonLocalizedLabel,
  int icon)

Create a labeled intent with no intent data but supplying a textual label and 
icon resource for it. 

    sourcePackage - The package in which the label and icon live. 
    nonLocalizedLabel - Concrete text to use for the label. 
    icon - Resource containing the icon, or 0 if none. 

*android.content.pm.LabeledIntent(String,int,int)*

public LabeledIntent(
  java.lang.String sourcePackage,
  int labelRes,
  int icon)

Create a labeled intent with no intent data but supplying the label and icon 
resources for it. 

    sourcePackage - The package in which the label and icon live. 
    labelRes - Resource containing the label, or 0 if none. 
    icon - Resource containing the icon, or 0 if none. 

*android.content.pm.LabeledIntent.getIconResource()*

public int getIconResource()

Return any resource identifier that has been given for the label icon. 



*android.content.pm.LabeledIntent.getLabelResource()*

public int getLabelResource()

Return any resource identifier that has been given for the label text. 



*android.content.pm.LabeledIntent.getNonLocalizedLabel()*

public |java.lang.CharSequence| getNonLocalizedLabel()

Return any concrete text that has been given for the label text. 



*android.content.pm.LabeledIntent.getSourcePackage()*

public |java.lang.String| getSourcePackage()

Return the name of the package holding label and icon resources. 



*android.content.pm.LabeledIntent.loadIcon(PackageManager)*

public Drawable loadIcon(android.content.pm.PackageManager pm)

Retrieve the icon associated with this object. If the object does not have a 
icon, null will be returned, in which case you will probably want to load the 
icon from the underlying resolved info for the Intent. 



*android.content.pm.LabeledIntent.loadLabel(PackageManager)*

public |java.lang.CharSequence| loadLabel(android.content.pm.PackageManager pm)

Retrieve the label associated with this object. If the object does not have a 
label, null will be returned, in which case you will probably want to load the 
label from the underlying resolved info for the Intent. 



*android.content.pm.LabeledIntent.readFromParcel(Parcel)*

public void readFromParcel(android.os.Parcel in)





*android.content.pm.LabeledIntent.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel dest,
  int parcelableFlags)






