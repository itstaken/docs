*android.support.v7.internal.widget.ActionBarView* *ActionBarView* 

public class ActionBarView
  extends    |android.support.v7.internal.widget.AbsActionBarView|

|android.support.v7.internal.widget.ActionBarView_Description|
|android.support.v7.internal.widget.ActionBarView_Fields|
|android.support.v7.internal.widget.ActionBarView_Constructors|
|android.support.v7.internal.widget.ActionBarView_Methods|

================================================================================

*android.support.v7.internal.widget.ActionBarView_Fields*
|int_android.support.v7.internal.widget.ActionBarView.DISPLAY_DEFAULT|

*android.support.v7.internal.widget.ActionBarView_Constructors*
|android.support.v7.internal.widget.ActionBarView(Context,AttributeSet)|

*android.support.v7.internal.widget.ActionBarView_Methods*
|android.support.v7.internal.widget.ActionBarView.collapseActionView()|
|android.support.v7.internal.widget.ActionBarView.generateDefaultLayoutParams()|
|android.support.v7.internal.widget.ActionBarView.generateLayoutParams(AttributeSet)|
|android.support.v7.internal.widget.ActionBarView.generateLayoutParams(ViewGroup.LayoutParams)|
|android.support.v7.internal.widget.ActionBarView.getCustomNavigationView()|
|android.support.v7.internal.widget.ActionBarView.getDisplayOptions()|
|android.support.v7.internal.widget.ActionBarView.getDropdownAdapter()|
|android.support.v7.internal.widget.ActionBarView.getDropdownSelectedPosition()|
|android.support.v7.internal.widget.ActionBarView.getNavigationMode()|
|android.support.v7.internal.widget.ActionBarView.getSubtitle()|
|android.support.v7.internal.widget.ActionBarView.getTitle()|
|android.support.v7.internal.widget.ActionBarView.hasEmbeddedTabs()|
|android.support.v7.internal.widget.ActionBarView.hasExpandedActionView()|
|android.support.v7.internal.widget.ActionBarView.initIndeterminateProgress()|
|android.support.v7.internal.widget.ActionBarView.initProgress()|
|android.support.v7.internal.widget.ActionBarView.isCollapsed()|
|android.support.v7.internal.widget.ActionBarView.isSplitActionBar()|
|android.support.v7.internal.widget.ActionBarView.onConfigurationChanged(Configuration)|
|android.support.v7.internal.widget.ActionBarView.onDetachedFromWindow()|
|android.support.v7.internal.widget.ActionBarView.onFinishInflate()|
|android.support.v7.internal.widget.ActionBarView.onLayout(boolean,int,int,int,int)|
|android.support.v7.internal.widget.ActionBarView.onMeasure(int,int)|
|android.support.v7.internal.widget.ActionBarView.onRestoreInstanceState(Parcelable)|
|android.support.v7.internal.widget.ActionBarView.onSaveInstanceState()|
|android.support.v7.internal.widget.ActionBarView.setCallback(ActionBar.OnNavigationListener)|
|android.support.v7.internal.widget.ActionBarView.setCollapsable(boolean)|
|android.support.v7.internal.widget.ActionBarView.setContextView(ActionBarContextView)|
|android.support.v7.internal.widget.ActionBarView.setCustomNavigationView(View)|
|android.support.v7.internal.widget.ActionBarView.setDisplayOptions(int)|
|android.support.v7.internal.widget.ActionBarView.setDropdownAdapter(SpinnerAdapter)|
|android.support.v7.internal.widget.ActionBarView.setDropdownSelectedPosition(int)|
|android.support.v7.internal.widget.ActionBarView.setEmbeddedTabView(ScrollingTabContainerView)|
|android.support.v7.internal.widget.ActionBarView.setHomeAsUpIndicator(Drawable)|
|android.support.v7.internal.widget.ActionBarView.setHomeButtonEnabled(boolean)|
|android.support.v7.internal.widget.ActionBarView.setIcon(Drawable)|
|android.support.v7.internal.widget.ActionBarView.setLogo(Drawable)|
|android.support.v7.internal.widget.ActionBarView.setMenu(SupportMenu,MenuPresenter.Callback)|
|android.support.v7.internal.widget.ActionBarView.setNavigationMode(int)|
|android.support.v7.internal.widget.ActionBarView.setSplitActionBar(boolean)|
|android.support.v7.internal.widget.ActionBarView.setSubtitle(CharSequence)|
|android.support.v7.internal.widget.ActionBarView.setTitle(CharSequence)|Set th
|android.support.v7.internal.widget.ActionBarView.setWindowCallback(Window.Callback)|
|android.support.v7.internal.widget.ActionBarView.setWindowTitle(CharSequence)|
|android.support.v7.internal.widget.ActionBarView.shouldDelayChildPressedState()|

*android.support.v7.internal.widget.ActionBarView_Description*





*int_android.support.v7.internal.widget.ActionBarView.DISPLAY_DEFAULT*

Display options applied by default 



*android.support.v7.internal.widget.ActionBarView(Context,AttributeSet)*

public ActionBarView(
  Context context,
  AttributeSet attrs)




*android.support.v7.internal.widget.ActionBarView.collapseActionView()*

public void collapseActionView()





*android.support.v7.internal.widget.ActionBarView.generateDefaultLayoutParams()*

protected ViewGroup.LayoutParams generateDefaultLayoutParams()





*android.support.v7.internal.widget.ActionBarView.generateLayoutParams(AttributeSet)*

public ViewGroup.LayoutParams generateLayoutParams(AttributeSet attrs)





*android.support.v7.internal.widget.ActionBarView.generateLayoutParams(ViewGroup.LayoutParams)*

public ViewGroup.LayoutParams generateLayoutParams(ViewGroup.LayoutParams lp)





*android.support.v7.internal.widget.ActionBarView.getCustomNavigationView()*

public View getCustomNavigationView()





*android.support.v7.internal.widget.ActionBarView.getDisplayOptions()*

public int getDisplayOptions()





*android.support.v7.internal.widget.ActionBarView.getDropdownAdapter()*

public SpinnerAdapter getDropdownAdapter()





*android.support.v7.internal.widget.ActionBarView.getDropdownSelectedPosition()*

public int getDropdownSelectedPosition()





*android.support.v7.internal.widget.ActionBarView.getNavigationMode()*

public int getNavigationMode()





*android.support.v7.internal.widget.ActionBarView.getSubtitle()*

public |java.lang.CharSequence| getSubtitle()





*android.support.v7.internal.widget.ActionBarView.getTitle()*

public |java.lang.CharSequence| getTitle()





*android.support.v7.internal.widget.ActionBarView.hasEmbeddedTabs()*

public boolean hasEmbeddedTabs()





*android.support.v7.internal.widget.ActionBarView.hasExpandedActionView()*

public boolean hasExpandedActionView()





*android.support.v7.internal.widget.ActionBarView.initIndeterminateProgress()*

public void initIndeterminateProgress()





*android.support.v7.internal.widget.ActionBarView.initProgress()*

public void initProgress()





*android.support.v7.internal.widget.ActionBarView.isCollapsed()*

public boolean isCollapsed()





*android.support.v7.internal.widget.ActionBarView.isSplitActionBar()*

public boolean isSplitActionBar()





*android.support.v7.internal.widget.ActionBarView.onConfigurationChanged(Configuration)*

protected void onConfigurationChanged(Configuration newConfig)





*android.support.v7.internal.widget.ActionBarView.onDetachedFromWindow()*

public void onDetachedFromWindow()





*android.support.v7.internal.widget.ActionBarView.onFinishInflate()*

protected void onFinishInflate()





*android.support.v7.internal.widget.ActionBarView.onLayout(boolean,int,int,int,int)*

protected void onLayout(
  boolean changed,
  int l,
  int t,
  int r,
  int b)





*android.support.v7.internal.widget.ActionBarView.onMeasure(int,int)*

protected void onMeasure(
  int widthMeasureSpec,
  int heightMeasureSpec)





*android.support.v7.internal.widget.ActionBarView.onRestoreInstanceState(Parcelable)*

public void onRestoreInstanceState(Parcelable p)





*android.support.v7.internal.widget.ActionBarView.onSaveInstanceState()*

public Parcelable onSaveInstanceState()





*android.support.v7.internal.widget.ActionBarView.setCallback(ActionBar.OnNavigationListener)*

public void setCallback(android.support.v7.app.ActionBar.OnNavigationListener callback)





*android.support.v7.internal.widget.ActionBarView.setCollapsable(boolean)*

public void setCollapsable(boolean collapsable)





*android.support.v7.internal.widget.ActionBarView.setContextView(ActionBarContextView)*

public void setContextView(android.support.v7.internal.widget.ActionBarContextView view)





*android.support.v7.internal.widget.ActionBarView.setCustomNavigationView(View)*

public void setCustomNavigationView(View view)





*android.support.v7.internal.widget.ActionBarView.setDisplayOptions(int)*

public void setDisplayOptions(int options)





*android.support.v7.internal.widget.ActionBarView.setDropdownAdapter(SpinnerAdapter)*

public void setDropdownAdapter(SpinnerAdapter adapter)





*android.support.v7.internal.widget.ActionBarView.setDropdownSelectedPosition(int)*

public void setDropdownSelectedPosition(int position)





*android.support.v7.internal.widget.ActionBarView.setEmbeddedTabView(ScrollingTabContainerView)*

public void setEmbeddedTabView(android.support.v7.internal.widget.ScrollingTabContainerView tabs)





*android.support.v7.internal.widget.ActionBarView.setHomeAsUpIndicator(Drawable)*

public void setHomeAsUpIndicator(Drawable indicator)





*android.support.v7.internal.widget.ActionBarView.setHomeButtonEnabled(boolean)*

public void setHomeButtonEnabled(boolean enable)





*android.support.v7.internal.widget.ActionBarView.setIcon(Drawable)*

public void setIcon(Drawable icon)





*android.support.v7.internal.widget.ActionBarView.setLogo(Drawable)*

public void setLogo(Drawable logo)





*android.support.v7.internal.widget.ActionBarView.setMenu(SupportMenu,MenuPresenter.Callback)*

public void setMenu(
  SupportMenu menu,
  android.support.v7.internal.view.menu.MenuPresenter.Callback cb)





*android.support.v7.internal.widget.ActionBarView.setNavigationMode(int)*

public void setNavigationMode(int mode)





*android.support.v7.internal.widget.ActionBarView.setSplitActionBar(boolean)*

public void setSplitActionBar(boolean splitActionBar)





*android.support.v7.internal.widget.ActionBarView.setSubtitle(CharSequence)*

public void setSubtitle(java.lang.CharSequence subtitle)





*android.support.v7.internal.widget.ActionBarView.setTitle(CharSequence)*

public void setTitle(java.lang.CharSequence title)

Set the action bar title. This will always replace or override window titles. 


    title - Title to set 

*android.support.v7.internal.widget.ActionBarView.setWindowCallback(Window.Callback)*

public void setWindowCallback(Window.Callback cb)

Set the view callback used to invoke menu items; used for dispatching home 
button presses. 


    cb - View callback to dispatch to 

*android.support.v7.internal.widget.ActionBarView.setWindowTitle(CharSequence)*

public void setWindowTitle(java.lang.CharSequence title)

Set the window title. A window title will always be replaced or overridden by a 
user title. 


    title - Title to set 

*android.support.v7.internal.widget.ActionBarView.shouldDelayChildPressedState()*

public boolean shouldDelayChildPressedState()






