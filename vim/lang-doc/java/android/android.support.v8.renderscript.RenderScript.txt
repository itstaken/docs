*android.support.v8.renderscript.RenderScript* *RenderScript* This class provide

public class RenderScript
  extends    |java.lang.Object|

|android.support.v8.renderscript.RenderScript_Description|
|android.support.v8.renderscript.RenderScript_Fields|
|android.support.v8.renderscript.RenderScript_Constructors|
|android.support.v8.renderscript.RenderScript_Methods|

================================================================================

*android.support.v8.renderscript.RenderScript_Methods*
|android.support.v8.renderscript.RenderScript.contextDump()|Print the currently
|android.support.v8.renderscript.RenderScript.create(Context)|Create a RenderSc
|android.support.v8.renderscript.RenderScript.create(Context,int)|
|android.support.v8.renderscript.RenderScript.create(Context,int,RenderScript.ContextType)|
|android.support.v8.renderscript.RenderScript.create(Context,RenderScript.ContextType)|
|android.support.v8.renderscript.RenderScript.destroy()|Destroys this RenderScr
|android.support.v8.renderscript.RenderScript.finish()|Wait for any pending asy
|android.support.v8.renderscript.RenderScript.getApplicationContext()|Gets the 
|android.support.v8.renderscript.RenderScript.getErrorHandler()|
|android.support.v8.renderscript.RenderScript.getMessageHandler()|
|android.support.v8.renderscript.RenderScript.sendMessage(int,int[])|Place a me
|android.support.v8.renderscript.RenderScript.setErrorHandler(RenderScript.RSErrorHandler)|
|android.support.v8.renderscript.RenderScript.setMessageHandler(RenderScript.RSMessageHandler)|
|android.support.v8.renderscript.RenderScript.setPriority(RenderScript.Priority)|
|android.support.v8.renderscript.RenderScript.setupDiskCache(File)|Sets the dir

*android.support.v8.renderscript.RenderScript_Description*

This class provides access to a RenderScript context, which controls 
RenderScript initialization, resource management, and teardown. An instance of 
the RenderScript class must be created before any other RS objects can be 
created. 

Developer Guides For more information about creating an application that uses 
RenderScript, read the <a 
href="guide/topics/renderscript/index.html">RenderScript developer guide. 



*android.support.v8.renderscript.RenderScript.contextDump()*

public void contextDump()

Print the currently available debugging information about the state of the RS 
context to the log. 



*android.support.v8.renderscript.RenderScript.create(Context)*

public static |android.support.v8.renderscript.RenderScript| create(Context ctx)

Create a RenderScript context. 


    ctx - The context. 

    Returns: 

*android.support.v8.renderscript.RenderScript.create(Context,int)*

public static |android.support.v8.renderscript.RenderScript| create(
  Context ctx,
  int sdkVersion)





*android.support.v8.renderscript.RenderScript.create(Context,int,RenderScript.ContextType)*

public static |android.support.v8.renderscript.RenderScript| create(
  Context ctx,
  int sdkVersion,
  android.support.v8.renderscript.RenderScript.ContextType ct)

Create a RenderScript context. 


    ctx - The context. 

    Returns: 

*android.support.v8.renderscript.RenderScript.create(Context,RenderScript.ContextType)*

public static |android.support.v8.renderscript.RenderScript| create(
  Context ctx,
  android.support.v8.renderscript.RenderScript.ContextType ct)

Create a RenderScript context. 


    ctx - The context. 
    ct - The type of context to be created. 

    Returns: 

*android.support.v8.renderscript.RenderScript.destroy()*

public void destroy()

Destroys this RenderScript context. Once this function is called, using this 
context or any objects belonging to this context is illegal. 



*android.support.v8.renderscript.RenderScript.finish()*

public void finish()

Wait for any pending asynchronous opeations (such as copies to a RS allocation 
or RS script executions) to complete. 



*android.support.v8.renderscript.RenderScript.getApplicationContext()*

public final Context getApplicationContext()

Gets the application context associated with the RenderScript context. 



    Returns: The application context. 

*android.support.v8.renderscript.RenderScript.getErrorHandler()*

public |android.support.v8.renderscript.RenderScript.RSErrorHandler| getErrorHandler()





*android.support.v8.renderscript.RenderScript.getMessageHandler()*

public |android.support.v8.renderscript.RenderScript.RSMessageHandler| getMessageHandler()





*android.support.v8.renderscript.RenderScript.sendMessage(int,int[])*

public void sendMessage(
  int id,
  int[] data)

Place a message into the message queue to be sent back to the message handler 
once all previous commands have been executed. 


    id - 
    data - 

*android.support.v8.renderscript.RenderScript.setErrorHandler(RenderScript.RSErrorHandler)*

public void setErrorHandler(android.support.v8.renderscript.RenderScript.RSErrorHandler msg)





*android.support.v8.renderscript.RenderScript.setMessageHandler(RenderScript.RSMessageHandler)*

public void setMessageHandler(android.support.v8.renderscript.RenderScript.RSMessageHandler msg)





*android.support.v8.renderscript.RenderScript.setPriority(RenderScript.Priority)*

public void setPriority(android.support.v8.renderscript.RenderScript.Priority p)

Change the priority of the worker threads for this context. 


    p - New priority to be set. 

*android.support.v8.renderscript.RenderScript.setupDiskCache(File)*

public static void setupDiskCache(java.io.File cacheDir)

Sets the directory to use as a persistent storage for the renderscript object 
file cache. 


    cacheDir - A directory the current process can write to 


