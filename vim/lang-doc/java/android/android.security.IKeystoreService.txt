*android.security.IKeystoreService* *IKeystoreService* This must be kept manuall

public interface interface IKeystoreService

  implements |android.os.IInterface|

|android.security.IKeystoreService_Description|
|android.security.IKeystoreService_Fields|
|android.security.IKeystoreService_Constructors|
|android.security.IKeystoreService_Methods|

================================================================================

*android.security.IKeystoreService_Methods*
|android.security.IKeystoreService.clear_uid(long)|
|android.security.IKeystoreService.del_key(String,int)|
|android.security.IKeystoreService.del(String,int)|
|android.security.IKeystoreService.duplicate(String,int,String,int)|
|android.security.IKeystoreService.exist(String,int)|
|android.security.IKeystoreService.generate(String,int,int,int,int,byte[][])|
|android.security.IKeystoreService.get_pubkey(String)|
|android.security.IKeystoreService.get(String)|
|android.security.IKeystoreService.getmtime(String)|
|android.security.IKeystoreService.grant(String,int)|
|android.security.IKeystoreService.import_key(String,byte[],int,int)|
|android.security.IKeystoreService.insert(String,byte[],int,int)|
|android.security.IKeystoreService.is_hardware_backed(String)|
|android.security.IKeystoreService.lock()|
|android.security.IKeystoreService.password(String)|
|android.security.IKeystoreService.reset()|
|android.security.IKeystoreService.saw(String,int)|
|android.security.IKeystoreService.sign(String,byte[])|
|android.security.IKeystoreService.test()|
|android.security.IKeystoreService.ungrant(String,int)|
|android.security.IKeystoreService.unlock(String)|
|android.security.IKeystoreService.verify(String,byte[],byte[])|
|android.security.IKeystoreService.zero()|

*android.security.IKeystoreService_Description*

This must be kept manually in sync with system/security/keystore until AIDL can 
generate both Java and C++ bindings. 



*android.security.IKeystoreService.clear_uid(long)*

public int clear_uid(long uid)
  throws |android.os.RemoteException|
         




*android.security.IKeystoreService.del_key(String,int)*

public int del_key(
  java.lang.String name,
  int uid)
  throws |android.os.RemoteException|
         




*android.security.IKeystoreService.del(String,int)*

public int del(
  java.lang.String name,
  int uid)
  throws |android.os.RemoteException|
         




*android.security.IKeystoreService.duplicate(String,int,String,int)*

public int duplicate(
  java.lang.String srcKey,
  int srcUid,
  java.lang.String destKey,
  int destUid)
  throws |android.os.RemoteException|
         




*android.security.IKeystoreService.exist(String,int)*

public int exist(
  java.lang.String name,
  int uid)
  throws |android.os.RemoteException|
         




*android.security.IKeystoreService.generate(String,int,int,int,int,byte[][])*

public int generate(
  java.lang.String name,
  int uid,
  int keyType,
  int keySize,
  int flags,
  byte[][] args)
  throws |android.os.RemoteException|
         




*android.security.IKeystoreService.get_pubkey(String)*

public byte[] get_pubkey(java.lang.String name)
  throws |android.os.RemoteException|
         




*android.security.IKeystoreService.get(String)*

public byte[] get(java.lang.String name)
  throws |android.os.RemoteException|
         




*android.security.IKeystoreService.getmtime(String)*

public long getmtime(java.lang.String name)
  throws |android.os.RemoteException|
         




*android.security.IKeystoreService.grant(String,int)*

public int grant(
  java.lang.String name,
  int granteeUid)
  throws |android.os.RemoteException|
         




*android.security.IKeystoreService.import_key(String,byte[],int,int)*

public int import_key(
  java.lang.String name,
  byte[] data,
  int uid,
  int flags)
  throws |android.os.RemoteException|
         




*android.security.IKeystoreService.insert(String,byte[],int,int)*

public int insert(
  java.lang.String name,
  byte[] item,
  int uid,
  int flags)
  throws |android.os.RemoteException|
         




*android.security.IKeystoreService.is_hardware_backed(String)*

public int is_hardware_backed(java.lang.String string)
  throws |android.os.RemoteException|
         




*android.security.IKeystoreService.lock()*

public int lock()
  throws |android.os.RemoteException|
         




*android.security.IKeystoreService.password(String)*

public int password(java.lang.String password)
  throws |android.os.RemoteException|
         




*android.security.IKeystoreService.reset()*

public int reset()
  throws |android.os.RemoteException|
         




*android.security.IKeystoreService.saw(String,int)*

public |java.lang.String|[] saw(
  java.lang.String name,
  int uid)
  throws |android.os.RemoteException|
         




*android.security.IKeystoreService.sign(String,byte[])*

public byte[] sign(
  java.lang.String name,
  byte[] data)
  throws |android.os.RemoteException|
         




*android.security.IKeystoreService.test()*

public int test()
  throws |android.os.RemoteException|
         




*android.security.IKeystoreService.ungrant(String,int)*

public int ungrant(
  java.lang.String name,
  int granteeUid)
  throws |android.os.RemoteException|
         




*android.security.IKeystoreService.unlock(String)*

public int unlock(java.lang.String password)
  throws |android.os.RemoteException|
         




*android.security.IKeystoreService.verify(String,byte[],byte[])*

public int verify(
  java.lang.String name,
  byte[] data,
  byte[] signature)
  throws |android.os.RemoteException|
         




*android.security.IKeystoreService.zero()*

public int zero()
  throws |android.os.RemoteException|
         





