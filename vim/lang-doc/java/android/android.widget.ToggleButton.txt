*android.widget.ToggleButton* *ToggleButton* Displays checked/unchecked states a

public class ToggleButton
  extends    |android.widget.CompoundButton|

|android.widget.ToggleButton_Description|
|android.widget.ToggleButton_Fields|
|android.widget.ToggleButton_Constructors|
|android.widget.ToggleButton_Methods|

================================================================================

*android.widget.ToggleButton_Constructors*
|android.widget.ToggleButton(Context)|
|android.widget.ToggleButton(Context,AttributeSet)|
|android.widget.ToggleButton(Context,AttributeSet,int)|

*android.widget.ToggleButton_Methods*
|android.widget.ToggleButton.drawableStateChanged()|
|android.widget.ToggleButton.getTextOff()|Returns the text for when the button 
|android.widget.ToggleButton.getTextOn()|Returns the text for when the button i
|android.widget.ToggleButton.onFinishInflate()|
|android.widget.ToggleButton.onInitializeAccessibilityEvent(AccessibilityEvent)|
|android.widget.ToggleButton.onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo)|
|android.widget.ToggleButton.setBackgroundDrawable(Drawable)|
|android.widget.ToggleButton.setChecked(boolean)|
|android.widget.ToggleButton.setTextOff(CharSequence)|Sets the text for when th
|android.widget.ToggleButton.setTextOn(CharSequence)|Sets the text for when the

*android.widget.ToggleButton_Description*

Displays checked/unchecked states as a button with a "light" indicator and by 
default accompanied with the text "ON" or "OFF". 

See the <a href="guide/topics/ui/controls/togglebutton.html">Toggle Buttons 
guide. 



*android.widget.ToggleButton(Context)*

public ToggleButton(android.content.Context context)




*android.widget.ToggleButton(Context,AttributeSet)*

public ToggleButton(
  android.content.Context context,
  android.util.AttributeSet attrs)




*android.widget.ToggleButton(Context,AttributeSet,int)*

public ToggleButton(
  android.content.Context context,
  android.util.AttributeSet attrs,
  int defStyle)




*android.widget.ToggleButton.drawableStateChanged()*

protected void drawableStateChanged()





*android.widget.ToggleButton.getTextOff()*

public |java.lang.CharSequence| getTextOff()

Returns the text for when the button is not in the checked state. 



    Returns: 

*android.widget.ToggleButton.getTextOn()*

public |java.lang.CharSequence| getTextOn()

Returns the text for when the button is in the checked state. 



    Returns: 

*android.widget.ToggleButton.onFinishInflate()*

protected void onFinishInflate()





*android.widget.ToggleButton.onInitializeAccessibilityEvent(AccessibilityEvent)*

public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent event)





*android.widget.ToggleButton.onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo)*

public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo info)





*android.widget.ToggleButton.setBackgroundDrawable(Drawable)*

public void setBackgroundDrawable(Drawable d)





*android.widget.ToggleButton.setChecked(boolean)*

public void setChecked(boolean checked)





*android.widget.ToggleButton.setTextOff(CharSequence)*

public void setTextOff(java.lang.CharSequence textOff)

Sets the text for when the button is not in the checked state. 


    textOff - The text. 

*android.widget.ToggleButton.setTextOn(CharSequence)*

public void setTextOn(java.lang.CharSequence textOn)

Sets the text for when the button is in the checked state. 


    textOn - The text. 


