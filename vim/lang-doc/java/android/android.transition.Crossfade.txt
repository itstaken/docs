*android.transition.Crossfade* *Crossfade* This transition captures bitmap repre

public class Crossfade
  extends    |android.transition.Transition|

|android.transition.Crossfade_Description|
|android.transition.Crossfade_Fields|
|android.transition.Crossfade_Constructors|
|android.transition.Crossfade_Methods|

================================================================================

*android.transition.Crossfade_Fields*
|int_android.transition.Crossfade.FADE_BEHAVIOR_CROSSFADE|
|int_android.transition.Crossfade.FADE_BEHAVIOR_OUT_IN|
|int_android.transition.Crossfade.FADE_BEHAVIOR_REVEAL|
|int_android.transition.Crossfade.RESIZE_BEHAVIOR_NONE|
|int_android.transition.Crossfade.RESIZE_BEHAVIOR_SCALE|

*android.transition.Crossfade_Constructors*
|android.transition.Crossfade()|

*android.transition.Crossfade_Methods*
|android.transition.Crossfade.captureEndValues(TransitionValues)|
|android.transition.Crossfade.captureStartValues(TransitionValues)|
|android.transition.Crossfade.createAnimator(ViewGroup,TransitionValues,TransitionValues)|
|android.transition.Crossfade.getFadeBehavior()|Returns the fading behavior of 
|android.transition.Crossfade.getResizeBehavior()|Returns the resizing behavior
|android.transition.Crossfade.setFadeBehavior(int)|Sets the type of fading anim
|android.transition.Crossfade.setResizeBehavior(int)|Sets the type of resizing 

*android.transition.Crossfade_Description*

This transition captures bitmap representations of target views before and 
after the scene change and fades between them. 

Note: This transition is not compatible with (|android.view.TextureView|) or 
(|android.view.SurfaceView|) . 



*int_android.transition.Crossfade.FADE_BEHAVIOR_CROSSFADE*

Flag specifying that the fading animation should cross-fade between the old and 
new representation of all affected target views. This means that the old 
representation will fade out while the new one fades in. This effect may work 
well on views without solid backgrounds, such as TextViews. 


*int_android.transition.Crossfade.FADE_BEHAVIOR_OUT_IN*

Flag specifying that the fading animation should first fade out the original 
representation completely and then fade in the new one. This effect may be more 
suitable than the other fade behaviors for views with. 


*int_android.transition.Crossfade.FADE_BEHAVIOR_REVEAL*

Flag specifying that the fading animation should reveal the new representation 
of all affected target views. This means that the old representation will fade 
out, gradually revealing the new representation, which remains opaque the whole 
time. This effect may work well on views with solid backgrounds, such as 
ImageViews. 


*int_android.transition.Crossfade.RESIZE_BEHAVIOR_NONE*

Flag specifying that the transition should not animate any changes in size 
between the old and new target views. This means that no scaling will take 
place as a result of this transition 


*int_android.transition.Crossfade.RESIZE_BEHAVIOR_SCALE*

Flag specifying that the transition should animate any changes in size between 
the old and new target views. This means that the animation will scale the 
start/end representations of affected views from the starting size to the 
ending size over the course of the animation. This effect may work well on 
images, but is not recommended for text. 



*android.transition.Crossfade()*

public Crossfade()




*android.transition.Crossfade.captureEndValues(TransitionValues)*

public void captureEndValues(android.transition.TransitionValues transitionValues)





*android.transition.Crossfade.captureStartValues(TransitionValues)*

public void captureStartValues(android.transition.TransitionValues transitionValues)





*android.transition.Crossfade.createAnimator(ViewGroup,TransitionValues,TransitionValues)*

public |android.animation.Animator| createAnimator(
  android.view.ViewGroup sceneRoot,
  android.transition.TransitionValues startValues,
  android.transition.TransitionValues endValues)





*android.transition.Crossfade.getFadeBehavior()*

public int getFadeBehavior()

Returns the fading behavior of the animation. 



    Returns: This crossfade object. 

*android.transition.Crossfade.getResizeBehavior()*

public int getResizeBehavior()

Returns the resizing behavior of the animation. 



    Returns: This crossfade object. 

*android.transition.Crossfade.setFadeBehavior(int)*

public |android.transition.Crossfade| setFadeBehavior(int fadeBehavior)

Sets the type of fading animation that will be run, one of 
(|android.transition.Crossfade|) and (|android.transition.Crossfade|) . 


    fadeBehavior - The type of fading animation to use when this transition is run. 

*android.transition.Crossfade.setResizeBehavior(int)*

public |android.transition.Crossfade| setResizeBehavior(int resizeBehavior)

Sets the type of resizing behavior that will be used during the transition 
animation, one of (|android.transition.Crossfade|) and 
(|android.transition.Crossfade|) . 


    resizeBehavior - The type of resizing behavior to use when this transition is run. 


