*android.text.style.TextAppearanceSpan* *TextAppearanceSpan* Sets the text color

public class TextAppearanceSpan
  extends    |android.text.style.MetricAffectingSpan|
  implements |android.text.ParcelableSpan|

|android.text.style.TextAppearanceSpan_Description|
|android.text.style.TextAppearanceSpan_Fields|
|android.text.style.TextAppearanceSpan_Constructors|
|android.text.style.TextAppearanceSpan_Methods|

================================================================================

*android.text.style.TextAppearanceSpan_Constructors*
|android.text.style.TextAppearanceSpan(Context,int)|Uses the specified TextAppe
|android.text.style.TextAppearanceSpan(Context,int,int)|Uses the specified Text
|android.text.style.TextAppearanceSpan(Parcel)|
|android.text.style.TextAppearanceSpan(String,int,int,ColorStateList,ColorStateList)|

*android.text.style.TextAppearanceSpan_Methods*
|android.text.style.TextAppearanceSpan.describeContents()|
|android.text.style.TextAppearanceSpan.getFamily()|Returns the typeface family 
|android.text.style.TextAppearanceSpan.getLinkTextColor()|Returns the link colo
|android.text.style.TextAppearanceSpan.getSpanTypeId()|
|android.text.style.TextAppearanceSpan.getTextColor()|Returns the text color sp
|android.text.style.TextAppearanceSpan.getTextSize()|Returns the text size spec
|android.text.style.TextAppearanceSpan.getTextStyle()|Returns the text style sp
|android.text.style.TextAppearanceSpan.updateDrawState(TextPaint)|
|android.text.style.TextAppearanceSpan.updateMeasureState(TextPaint)|
|android.text.style.TextAppearanceSpan.writeToParcel(Parcel,int)|

*android.text.style.TextAppearanceSpan_Description*

Sets the text color, size, style, and typeface to match a TextAppearance 
resource. 



*android.text.style.TextAppearanceSpan(Context,int)*

public TextAppearanceSpan(
  android.content.Context context,
  int appearance)

Uses the specified TextAppearance resource to determine the text appearance. 
The appearance should be, for example, android.R.style.TextAppearance_Small. 


*android.text.style.TextAppearanceSpan(Context,int,int)*

public TextAppearanceSpan(
  android.content.Context context,
  int appearance,
  int colorList)

Uses the specified TextAppearance resource to determine the text appearance, 
and the specified text color resource to determine the color. The appearance 
should be, for example, android.R.style.TextAppearance_Small, and the colorList 
should be, for example, android.R.styleable.Theme_textColorPrimary. 


*android.text.style.TextAppearanceSpan(Parcel)*

public TextAppearanceSpan(android.os.Parcel src)




*android.text.style.TextAppearanceSpan(String,int,int,ColorStateList,ColorStateList)*

public TextAppearanceSpan(
  java.lang.String family,
  int style,
  int size,
  android.content.res.ColorStateList color,
  android.content.res.ColorStateList linkColor)

Makes text be drawn with the specified typeface, size, style, and colors. 


*android.text.style.TextAppearanceSpan.describeContents()*

public int describeContents()





*android.text.style.TextAppearanceSpan.getFamily()*

public |java.lang.String| getFamily()

Returns the typeface family specified by this span, or null if it does not 
specify one. 



*android.text.style.TextAppearanceSpan.getLinkTextColor()*

public |android.content.res.ColorStateList| getLinkTextColor()

Returns the link color specified by this span, or null if it does not specify 
one. 



*android.text.style.TextAppearanceSpan.getSpanTypeId()*

public int getSpanTypeId()





*android.text.style.TextAppearanceSpan.getTextColor()*

public |android.content.res.ColorStateList| getTextColor()

Returns the text color specified by this span, or null if it does not specify 
one. 



*android.text.style.TextAppearanceSpan.getTextSize()*

public int getTextSize()

Returns the text size specified by this span, or -1 if it does not specify one. 



*android.text.style.TextAppearanceSpan.getTextStyle()*

public int getTextStyle()

Returns the text style specified by this span, or 0 if it does not specify one. 



*android.text.style.TextAppearanceSpan.updateDrawState(TextPaint)*

public void updateDrawState(android.text.TextPaint ds)





*android.text.style.TextAppearanceSpan.updateMeasureState(TextPaint)*

public void updateMeasureState(android.text.TextPaint ds)





*android.text.style.TextAppearanceSpan.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel dest,
  int flags)






