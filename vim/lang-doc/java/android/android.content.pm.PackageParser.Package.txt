*android.content.pm.PackageParser.Package* *PackageParser.Package* 

public static final class PackageParser.Package
  extends    |java.lang.Object|

|android.content.pm.PackageParser.Package_Description|
|android.content.pm.PackageParser.Package_Fields|
|android.content.pm.PackageParser.Package_Constructors|
|android.content.pm.PackageParser.Package_Methods|

================================================================================

*android.content.pm.PackageParser.Package_Fields*
|java.util.ArrayList<android.content.pm.PackageParser.Activity>_android.content.pm.PackageParser.Package.activities|
|android.content.pm.ApplicationInfo_android.content.pm.PackageParser.Package.applicationInfo|
|java.util.ArrayList<android.content.pm.ConfigurationInfo>_android.content.pm.PackageParser.Package.configPreferences|
|int_android.content.pm.PackageParser.Package.installLocation|
|java.util.ArrayList<android.content.pm.PackageParser.Instrumentation>_android.content.pm.PackageParser.Package.instrumentation|
|java.util.ArrayList<java.lang.String>_android.content.pm.PackageParser.Package.libraryNames|
|java.util.ArrayList<java.lang.String>_android.content.pm.PackageParser.Package.mAdoptPermissions|
|android.content.pm.ManifestDigest_android.content.pm.PackageParser.Package.manifestDigest|
|android.os.Bundle_android.content.pm.PackageParser.Package.mAppMetaData|
|boolean_android.content.pm.PackageParser.Package.mDidDexOpt|
|java.lang.Object_android.content.pm.PackageParser.Package.mExtras|
|java.util.Map<java.lang.String, java.util.Set<java.security.PublicKey>>_android.content.pm.PackageParser.Package.mKeySetMapping|
|boolean_android.content.pm.PackageParser.Package.mOperationPending|
|java.util.ArrayList<java.lang.String>_android.content.pm.PackageParser.Package.mOriginalPackages|
|java.lang.String_android.content.pm.PackageParser.Package.mPath|
|int_android.content.pm.PackageParser.Package.mPreferredOrder|
|java.lang.String_android.content.pm.PackageParser.Package.mRealPackage|
|java.lang.String_android.content.pm.PackageParser.Package.mRequiredAccountType|
|boolean_android.content.pm.PackageParser.Package.mRequiredForAllUsers|
|java.lang.String_android.content.pm.PackageParser.Package.mRestrictedAccountType|
|java.lang.String_android.content.pm.PackageParser.Package.mScanPath|
|java.lang.String_android.content.pm.PackageParser.Package.mSharedUserId|
|int_android.content.pm.PackageParser.Package.mSharedUserLabel|
|android.content.pm.Signature[]_android.content.pm.PackageParser.Package.mSignatures|
|java.util.Set<java.security.PublicKey>_android.content.pm.PackageParser.Package.mSigningKeys|
|int_android.content.pm.PackageParser.Package.mVersionCode|
|java.lang.String_android.content.pm.PackageParser.Package.mVersionName|
|java.lang.String_android.content.pm.PackageParser.Package.packageName|
|java.util.ArrayList<android.content.pm.PackageParser.PermissionGroup>_android.content.pm.PackageParser.Package.permissionGroups|
|java.util.ArrayList<android.content.pm.PackageParser.Permission>_android.content.pm.PackageParser.Package.permissions|
|java.util.ArrayList<android.content.pm.PackageParser.ActivityIntentInfo>_android.content.pm.PackageParser.Package.preferredActivityFilters|
|java.util.ArrayList<java.lang.String>_android.content.pm.PackageParser.Package.protectedBroadcasts|
|java.util.ArrayList<android.content.pm.PackageParser.Provider>_android.content.pm.PackageParser.Package.providers|
|java.util.ArrayList<android.content.pm.PackageParser.Activity>_android.content.pm.PackageParser.Package.receivers|
|java.util.ArrayList<android.content.pm.FeatureInfo>_android.content.pm.PackageParser.Package.reqFeatures|
|java.util.ArrayList<java.lang.String>_android.content.pm.PackageParser.Package.requestedPermissions|
|java.util.ArrayList<java.lang.Boolean>_android.content.pm.PackageParser.Package.requestedPermissionsRequired|
|java.util.ArrayList<android.content.pm.PackageParser.Service>_android.content.pm.PackageParser.Package.services|
|java.util.ArrayList<java.lang.String>_android.content.pm.PackageParser.Package.usesLibraries|
|java.lang.String[]_android.content.pm.PackageParser.Package.usesLibraryFiles|
|java.util.ArrayList<java.lang.String>_android.content.pm.PackageParser.Package.usesOptionalLibraries|

*android.content.pm.PackageParser.Package_Constructors*
|android.content.pm.PackageParser.Package(String)|

*android.content.pm.PackageParser.Package_Methods*
|android.content.pm.PackageParser.Package.hasComponentClassName(String)|
|android.content.pm.PackageParser.Package.setPackageName(String)|
|android.content.pm.PackageParser.Package.toString()|

*android.content.pm.PackageParser.Package_Description*





*java.util.ArrayList<android.content.pm.PackageParser.Activity>_android.content.pm.PackageParser.Package.activities*




*android.content.pm.ApplicationInfo_android.content.pm.PackageParser.Package.applicationInfo*




*java.util.ArrayList<android.content.pm.ConfigurationInfo>_android.content.pm.PackageParser.Package.configPreferences*




*int_android.content.pm.PackageParser.Package.installLocation*




*java.util.ArrayList<android.content.pm.PackageParser.Instrumentation>_android.content.pm.PackageParser.Package.instrumentation*




*java.util.ArrayList<java.lang.String>_android.content.pm.PackageParser.Package.libraryNames*




*java.util.ArrayList<java.lang.String>_android.content.pm.PackageParser.Package.mAdoptPermissions*




*android.content.pm.ManifestDigest_android.content.pm.PackageParser.Package.manifestDigest*

Digest suitable for comparing whether this package's manifest is the same as 
another. 


*android.os.Bundle_android.content.pm.PackageParser.Package.mAppMetaData*




*boolean_android.content.pm.PackageParser.Package.mDidDexOpt*




*java.lang.Object_android.content.pm.PackageParser.Package.mExtras*




*java.util.Map<java.lang.String, java.util.Set<java.security.PublicKey>>_android.content.pm.PackageParser.Package.mKeySetMapping*




*boolean_android.content.pm.PackageParser.Package.mOperationPending*




*java.util.ArrayList<java.lang.String>_android.content.pm.PackageParser.Package.mOriginalPackages*




*java.lang.String_android.content.pm.PackageParser.Package.mPath*




*int_android.content.pm.PackageParser.Package.mPreferredOrder*




*java.lang.String_android.content.pm.PackageParser.Package.mRealPackage*




*java.lang.String_android.content.pm.PackageParser.Package.mRequiredAccountType*




*boolean_android.content.pm.PackageParser.Package.mRequiredForAllUsers*




*java.lang.String_android.content.pm.PackageParser.Package.mRestrictedAccountType*




*java.lang.String_android.content.pm.PackageParser.Package.mScanPath*




*java.lang.String_android.content.pm.PackageParser.Package.mSharedUserId*




*int_android.content.pm.PackageParser.Package.mSharedUserLabel*




*android.content.pm.Signature[]_android.content.pm.PackageParser.Package.mSignatures*




*java.util.Set<java.security.PublicKey>_android.content.pm.PackageParser.Package.mSigningKeys*

Data used to feed the KeySetManager 


*int_android.content.pm.PackageParser.Package.mVersionCode*




*java.lang.String_android.content.pm.PackageParser.Package.mVersionName*




*java.lang.String_android.content.pm.PackageParser.Package.packageName*




*java.util.ArrayList<android.content.pm.PackageParser.PermissionGroup>_android.content.pm.PackageParser.Package.permissionGroups*




*java.util.ArrayList<android.content.pm.PackageParser.Permission>_android.content.pm.PackageParser.Package.permissions*




*java.util.ArrayList<android.content.pm.PackageParser.ActivityIntentInfo>_android.content.pm.PackageParser.Package.preferredActivityFilters*




*java.util.ArrayList<java.lang.String>_android.content.pm.PackageParser.Package.protectedBroadcasts*




*java.util.ArrayList<android.content.pm.PackageParser.Provider>_android.content.pm.PackageParser.Package.providers*




*java.util.ArrayList<android.content.pm.PackageParser.Activity>_android.content.pm.PackageParser.Package.receivers*




*java.util.ArrayList<android.content.pm.FeatureInfo>_android.content.pm.PackageParser.Package.reqFeatures*




*java.util.ArrayList<java.lang.String>_android.content.pm.PackageParser.Package.requestedPermissions*




*java.util.ArrayList<java.lang.Boolean>_android.content.pm.PackageParser.Package.requestedPermissionsRequired*




*java.util.ArrayList<android.content.pm.PackageParser.Service>_android.content.pm.PackageParser.Package.services*




*java.util.ArrayList<java.lang.String>_android.content.pm.PackageParser.Package.usesLibraries*




*java.lang.String[]_android.content.pm.PackageParser.Package.usesLibraryFiles*




*java.util.ArrayList<java.lang.String>_android.content.pm.PackageParser.Package.usesOptionalLibraries*





*android.content.pm.PackageParser.Package(String)*

public PackageParser.Package(java.lang.String _name)




*android.content.pm.PackageParser.Package.hasComponentClassName(String)*

public boolean hasComponentClassName(java.lang.String name)





*android.content.pm.PackageParser.Package.setPackageName(String)*

public void setPackageName(java.lang.String newName)





*android.content.pm.PackageParser.Package.toString()*

public |java.lang.String| toString()






