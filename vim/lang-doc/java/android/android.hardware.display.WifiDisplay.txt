*android.hardware.display.WifiDisplay* *WifiDisplay* Describes the properties of

public final class WifiDisplay
  extends    |java.lang.Object|
  implements |android.os.Parcelable|

|android.hardware.display.WifiDisplay_Description|
|android.hardware.display.WifiDisplay_Fields|
|android.hardware.display.WifiDisplay_Constructors|
|android.hardware.display.WifiDisplay_Methods|

================================================================================

*android.hardware.display.WifiDisplay_Fields*
|android.os.Parcelable.Creator<android.hardware.display.WifiDisplay>_android.hardware.display.WifiDisplay.CREATOR|
|android.hardware.display.WifiDisplay[]_android.hardware.display.WifiDisplay.EMPTY_ARRAY|

*android.hardware.display.WifiDisplay_Constructors*
|android.hardware.display.WifiDisplay(String,String,String,boolean,boolean,boolean)|

*android.hardware.display.WifiDisplay_Methods*
|android.hardware.display.WifiDisplay.canConnect()|Returns true if device can b
|android.hardware.display.WifiDisplay.describeContents()|
|android.hardware.display.WifiDisplay.equals(Object)|
|android.hardware.display.WifiDisplay.equals(WifiDisplay)|Returns true if the t
|android.hardware.display.WifiDisplay.getDeviceAddress()|Gets the MAC address o
|android.hardware.display.WifiDisplay.getDeviceAlias()|Gets the user-specified 
|android.hardware.display.WifiDisplay.getDeviceName()|Gets the name of the Wifi
|android.hardware.display.WifiDisplay.getFriendlyDisplayName()|Gets the name to
|android.hardware.display.WifiDisplay.hashCode()|
|android.hardware.display.WifiDisplay.hasSameAddress(WifiDisplay)|Returns true 
|android.hardware.display.WifiDisplay.isAvailable()|Returns true if device is a
|android.hardware.display.WifiDisplay.isRemembered()|Returns true if device has
|android.hardware.display.WifiDisplay.toString()|
|android.hardware.display.WifiDisplay.writeToParcel(Parcel,int)|

*android.hardware.display.WifiDisplay_Description*

Describes the properties of a Wifi display. 

This object is immutable. 



*android.os.Parcelable.Creator<android.hardware.display.WifiDisplay>_android.hardware.display.WifiDisplay.CREATOR*




*android.hardware.display.WifiDisplay[]_android.hardware.display.WifiDisplay.EMPTY_ARRAY*





*android.hardware.display.WifiDisplay(String,String,String,boolean,boolean,boolean)*

public WifiDisplay(
  java.lang.String deviceAddress,
  java.lang.String deviceName,
  java.lang.String deviceAlias,
  boolean available,
  boolean canConnect,
  boolean remembered)




*android.hardware.display.WifiDisplay.canConnect()*

public boolean canConnect()

Returns true if device can be connected to (not in use), false otherwise. 



*android.hardware.display.WifiDisplay.describeContents()*

public int describeContents()





*android.hardware.display.WifiDisplay.equals(Object)*

public boolean equals(java.lang.Object o)





*android.hardware.display.WifiDisplay.equals(WifiDisplay)*

public boolean equals(android.hardware.display.WifiDisplay other)

Returns true if the two displays have the same identity (address, name and 
alias). This method does not compare the current status of the displays. 



*android.hardware.display.WifiDisplay.getDeviceAddress()*

public |java.lang.String| getDeviceAddress()

Gets the MAC address of the Wifi display device. 



*android.hardware.display.WifiDisplay.getDeviceAlias()*

public |java.lang.String| getDeviceAlias()

Gets the user-specified alias of the Wifi display device, or null if none. 

The alias should be used in the UI whenever available. It is the value provided 
by the user when renaming the device. 



*android.hardware.display.WifiDisplay.getDeviceName()*

public |java.lang.String| getDeviceName()

Gets the name of the Wifi display device. 



*android.hardware.display.WifiDisplay.getFriendlyDisplayName()*

public |java.lang.String| getFriendlyDisplayName()

Gets the name to show in the UI. Uses the device alias if available, otherwise 
uses the device name. 



*android.hardware.display.WifiDisplay.hashCode()*

public int hashCode()





*android.hardware.display.WifiDisplay.hasSameAddress(WifiDisplay)*

public boolean hasSameAddress(android.hardware.display.WifiDisplay other)

Returns true if the other display is not null and has the same address as this 
one. Can be used to perform identity comparisons on displays ignoring 
properties that might change during a connection such as the name or alias. 



*android.hardware.display.WifiDisplay.isAvailable()*

public boolean isAvailable()

Returns true if device is available, false otherwise. 



*android.hardware.display.WifiDisplay.isRemembered()*

public boolean isRemembered()

Returns true if device has been remembered, false otherwise. 



*android.hardware.display.WifiDisplay.toString()*

public |java.lang.String| toString()





*android.hardware.display.WifiDisplay.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel dest,
  int flags)






