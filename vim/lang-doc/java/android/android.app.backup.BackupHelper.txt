*android.app.backup.BackupHelper* *BackupHelper* Defines the calling interface t

public interface interface BackupHelper


|android.app.backup.BackupHelper_Description|
|android.app.backup.BackupHelper_Fields|
|android.app.backup.BackupHelper_Constructors|
|android.app.backup.BackupHelper_Methods|

================================================================================

*android.app.backup.BackupHelper_Methods*
|android.app.backup.BackupHelper.performBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)|
|android.app.backup.BackupHelper.restoreEntity(BackupDataInputStream)|Called by
|android.app.backup.BackupHelper.writeNewStateDescription(ParcelFileDescriptor)|

*android.app.backup.BackupHelper_Description*

Defines the calling interface that (|android.app.backup.BackupAgentHelper|) 
uses when dispatching backup and restore operations to the installed helpers. 
Applications can define and install their own helpers as well as using those 
provided as part of the Android framework. 

Although multiple helper objects may be installed simultaneously, each helper 
is responsible only for handling its own data, and will not see entities 
created by other components within the backup system. Invocations of multiple 
helpers are performed sequentially by the 
(|android.app.backup.BackupAgentHelper|) , with each helper given a chance to 
access its own saved state from within the state record produced during the 
previous backup operation. 



*android.app.backup.BackupHelper.performBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)*

public void performBackup(
  android.os.ParcelFileDescriptor oldState,
  android.app.backup.BackupDataOutput data,
  android.os.ParcelFileDescriptor newState)

Based on oldState, determine which of the files from the application's data 
directory need to be backed up, write them to data, and fill in newState with 
the state as it exists now. 

Implementing this method is much like implementing 
onBackup()(|android.app.backup.BackupAgent|) the method parameters are the 
same. When this method is invoked theoldStatedescriptor points to the beginning 
of the state data written during this helper's previous backup operation, and 
thenewStatedescriptor points to the file location at which the helper should 
write its new state after performing the backup operation. 

Note: The helper should not close or seek either theoldStateor thenewStatefile 
descriptors. 


    oldState - An open, read-only {@link android.os.ParcelFileDescriptor} pointing to the last 
       backup state provided by the application. May be null, in which case no 
       prior state is being provided and the application should perform a full 
       backup. 
    data - An open, read/write {@link BackupDataOutput} pointing to the backup data 
       destination. Typically the application will use backup helper classes to 
       write to this file. 
    newState - An open, read/write {@link android.os.ParcelFileDescriptor} pointing to an 
       empty file. The application should record the final backup state here 
       after writing the requested data to the data output stream. 

*android.app.backup.BackupHelper.restoreEntity(BackupDataInputStream)*

public void restoreEntity(android.app.backup.BackupDataInputStream data)

Called by BackupAgentHelper(|android.app.backup.BackupAgentHelper|) to restore 
a single entity from the restore data set. This method will be called for each 
entity in the data set that belongs to this handler. 

Note: Do not close the data stream. Do not read more than 
size()(|android.app.backup.BackupDataInputStream|) bytes from data. 


    data - An open {@link BackupDataInputStream} from which the backup data can be read. 

*android.app.backup.BackupHelper.writeNewStateDescription(ParcelFileDescriptor)*

public void writeNewStateDescription(android.os.ParcelFileDescriptor newState)

Called by BackupAgentHelper(|android.app.backup.BackupAgentHelper|) after a 
restore operation to write the backup state file corresponding to the data as 
processed by the helper. The data written here will be available to the helper 
during the next call to its performBackup()(|android.app.backup.BackupHelper|) 
method. 

This method will be called even if the handler's 
restoreEntity()(|android.app.backup.BackupHelper|) method was never invoked 
during the restore operation. 

Note: The helper should not close or seek thenewStatefile descriptor. 


    newState - A {@link android.os.ParcelFileDescriptor} to which the new state will be 
       written. 


