*android.widget.EditText* *EditText* EditText is a thin veneer over TextView tha

public class EditText
  extends    |android.widget.TextView|

|android.widget.EditText_Description|
|android.widget.EditText_Fields|
|android.widget.EditText_Constructors|
|android.widget.EditText_Methods|

================================================================================

*android.widget.EditText_Constructors*
|android.widget.EditText(Context)|
|android.widget.EditText(Context,AttributeSet)|
|android.widget.EditText(Context,AttributeSet,int)|

*android.widget.EditText_Methods*
|android.widget.EditText.extendSelection(int)|Convenience forSelection#extendSe
|android.widget.EditText.getDefaultEditable()|
|android.widget.EditText.getDefaultMovementMethod()|
|android.widget.EditText.getText()|
|android.widget.EditText.onInitializeAccessibilityEvent(AccessibilityEvent)|
|android.widget.EditText.onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo)|
|android.widget.EditText.selectAll()|Convenience forSelection#selectAll.
|android.widget.EditText.setEllipsize(TextUtils.TruncateAt)|
|android.widget.EditText.setSelection(int)|Convenience forSelection#setSelectio
|android.widget.EditText.setSelection(int,int)|Convenience forSelection#setSele
|android.widget.EditText.setText(CharSequence,TextView.BufferType)|

*android.widget.EditText_Description*

EditText is a thin veneer over TextView that configures itself to be editable. 

See the <a href="guide/topics/ui/controls/text.html">Text Fields guide. 

XML attributes 

See EditText Attributes(|android.R.styleable|) , TextView 
Attributes(|android.R.styleable|) , View Attributes(|android.R.styleable|) 



*android.widget.EditText(Context)*

public EditText(android.content.Context context)




*android.widget.EditText(Context,AttributeSet)*

public EditText(
  android.content.Context context,
  android.util.AttributeSet attrs)




*android.widget.EditText(Context,AttributeSet,int)*

public EditText(
  android.content.Context context,
  android.util.AttributeSet attrs,
  int defStyle)




*android.widget.EditText.extendSelection(int)*

public void extendSelection(int index)

Convenience for (|android.text.Selection|) . 



*android.widget.EditText.getDefaultEditable()*

protected boolean getDefaultEditable()





*android.widget.EditText.getDefaultMovementMethod()*

protected |android.text.method.MovementMethod| getDefaultMovementMethod()





*android.widget.EditText.getText()*

public |android.text.Editable| getText()





*android.widget.EditText.onInitializeAccessibilityEvent(AccessibilityEvent)*

public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent event)





*android.widget.EditText.onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo)*

public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo info)





*android.widget.EditText.selectAll()*

public void selectAll()

Convenience for (|android.text.Selection|) . 



*android.widget.EditText.setEllipsize(TextUtils.TruncateAt)*

public void setEllipsize(android.text.TextUtils.TruncateAt ellipsis)





*android.widget.EditText.setSelection(int)*

public void setSelection(int index)

Convenience for (|android.text.Selection|) . 



*android.widget.EditText.setSelection(int,int)*

public void setSelection(
  int start,
  int stop)

Convenience for (|android.text.Selection|) . 



*android.widget.EditText.setText(CharSequence,TextView.BufferType)*

public void setText(
  java.lang.CharSequence text,
  android.widget.TextView.BufferType type)






