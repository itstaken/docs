*android.ddm.DdmHandleAppName* *DdmHandleAppName* Track our app name.

public class DdmHandleAppName
  extends    |ChunkHandler|

|android.ddm.DdmHandleAppName_Description|
|android.ddm.DdmHandleAppName_Fields|
|android.ddm.DdmHandleAppName_Constructors|
|android.ddm.DdmHandleAppName_Methods|

================================================================================

*android.ddm.DdmHandleAppName_Fields*
|int_android.ddm.DdmHandleAppName.CHUNK_APNM|

*android.ddm.DdmHandleAppName_Methods*
|android.ddm.DdmHandleAppName.connected()|Called when the DDM server connects.
|android.ddm.DdmHandleAppName.disconnected()|Called when the DDM server disconn
|android.ddm.DdmHandleAppName.getAppName()|
|android.ddm.DdmHandleAppName.handleChunk(Chunk)|Handle a chunk of data.
|android.ddm.DdmHandleAppName.register()|Register for the messages we're intere
|android.ddm.DdmHandleAppName.setAppName(String,int)|Set the application name.

*android.ddm.DdmHandleAppName_Description*

Track our app name. We don't (currently) handle any inbound packets. 



*int_android.ddm.DdmHandleAppName.CHUNK_APNM*





*android.ddm.DdmHandleAppName.connected()*

public void connected()

Called when the DDM server connects. The handler is allowed to send messages to 
the server. 



*android.ddm.DdmHandleAppName.disconnected()*

public void disconnected()

Called when the DDM server disconnects. Can be used to disable periodic 
transmissions or clean up saved state. 



*android.ddm.DdmHandleAppName.getAppName()*

public static |java.lang.String| getAppName()





*android.ddm.DdmHandleAppName.handleChunk(Chunk)*

public Chunk handleChunk(Chunk request)

Handle a chunk of data. 



*android.ddm.DdmHandleAppName.register()*

public static void register()

Register for the messages we're interested in. 



*android.ddm.DdmHandleAppName.setAppName(String,int)*

public static void setAppName(
  java.lang.String name,
  int userId)

Set the application name. Called when we get named, which may be before or 
after DDMS connects. For the latter we need to send up an APNM message. 




