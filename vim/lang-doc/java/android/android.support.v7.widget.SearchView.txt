*android.support.v7.widget.SearchView* *SearchView* A widget that provides a use

public class SearchView
  extends    |LinearLayout|
  implements |android.support.v7.view.CollapsibleActionView|

|android.support.v7.widget.SearchView_Description|
|android.support.v7.widget.SearchView_Fields|
|android.support.v7.widget.SearchView_Constructors|
|android.support.v7.widget.SearchView_Methods|

================================================================================

*android.support.v7.widget.SearchView_Constructors*
|android.support.v7.widget.SearchView(Context)|
|android.support.v7.widget.SearchView(Context,AttributeSet)|

*android.support.v7.widget.SearchView_Methods*
|android.support.v7.widget.SearchView.clearFocus()|
|android.support.v7.widget.SearchView.getImeOptions()|Returns the IME options s
|android.support.v7.widget.SearchView.getInputType()|Returns the input type set
|android.support.v7.widget.SearchView.getMaxWidth()|Gets the specified maximum 
|android.support.v7.widget.SearchView.getQuery()|Returns the query string curre
|android.support.v7.widget.SearchView.getQueryHint()|Gets the hint text to disp
|android.support.v7.widget.SearchView.getSuggestionsAdapter()|Returns the adapt
|android.support.v7.widget.SearchView.isIconfiedByDefault()|Returns the default
|android.support.v7.widget.SearchView.isIconified()|Returns the current iconifi
|android.support.v7.widget.SearchView.isQueryRefinementEnabled()|Returns whethe
|android.support.v7.widget.SearchView.isSubmitButtonEnabled()|Returns whether t
|android.support.v7.widget.SearchView.onActionViewCollapsed()|
|android.support.v7.widget.SearchView.onActionViewExpanded()|
|android.support.v7.widget.SearchView.onDetachedFromWindow()|
|android.support.v7.widget.SearchView.onKeyDown(int,KeyEvent)|Handles the key d
|android.support.v7.widget.SearchView.onMeasure(int,int)|
|android.support.v7.widget.SearchView.onWindowFocusChanged(boolean)|
|android.support.v7.widget.SearchView.requestFocus(int,Rect)|
|android.support.v7.widget.SearchView.setAppSearchData(Bundle)|Sets the APP_DAT
|android.support.v7.widget.SearchView.setIconified(boolean)|Iconifies or expand
|android.support.v7.widget.SearchView.setIconifiedByDefault(boolean)|Sets the d
|android.support.v7.widget.SearchView.setImeOptions(int)|Sets the IME options o
|android.support.v7.widget.SearchView.setInputType(int)|Sets the input type on 
|android.support.v7.widget.SearchView.setMaxWidth(int)|Makes the view at most t
|android.support.v7.widget.SearchView.setOnCloseListener(SearchView.OnCloseListener)|
|android.support.v7.widget.SearchView.setOnQueryTextFocusChangeListener(OnFocusChangeListener)|
|android.support.v7.widget.SearchView.setOnQueryTextListener(SearchView.OnQueryTextListener)|
|android.support.v7.widget.SearchView.setOnSearchClickListener(OnClickListener)|
|android.support.v7.widget.SearchView.setOnSuggestionListener(SearchView.OnSuggestionListener)|
|android.support.v7.widget.SearchView.setQuery(CharSequence,boolean)|Sets a que
|android.support.v7.widget.SearchView.setQueryHint(CharSequence)|Sets the hint 
|android.support.v7.widget.SearchView.setQueryRefinementEnabled(boolean)|Specif
|android.support.v7.widget.SearchView.setSearchableInfo(SearchableInfo)|Sets th
|android.support.v7.widget.SearchView.setSubmitButtonEnabled(boolean)|Enables s
|android.support.v7.widget.SearchView.setSuggestionsAdapter(CursorAdapter)|You 

*android.support.v7.widget.SearchView_Description*

A widget that provides a user interface for the user to enter a search query 
and submit a request to a search provider. Shows a list of query suggestions or 
results, if available, and allows the user to pick a suggestion or result to 
launch into. 

Note: This class is included in the <a 
href="tools/extras/support-library.html">support library for compatibility with 
API level 7 and higher. If you're developing your app for API level 11 and 
higher only, you should instead use the framework (|android.widget.SearchView|) 
class. 

When the SearchView is used in an (|android.support.v7.app.ActionBar|) as an 
action view, it's collapsed by default, so you must provide an icon for the 
action. 

If you want the search field to always be visible, then call 
setIconifiedByDefault(false)(|android.support.v7.widget.SearchView|) . 

Developer Guides For information about usingSearchView, read the <a 
href="guide/topics/search/index.html">Search API guide. Additional information 
about action views is also available in the <<a 
href="guide/topics/ui/actionbar.html#ActionView">Action Bar API guide 



*android.support.v7.widget.SearchView(Context)*

public SearchView(Context context)




*android.support.v7.widget.SearchView(Context,AttributeSet)*

public SearchView(
  Context context,
  AttributeSet attrs)




*android.support.v7.widget.SearchView.clearFocus()*

public void clearFocus()





*android.support.v7.widget.SearchView.getImeOptions()*

public int getImeOptions()

Returns the IME options set on the query text field. 



    Returns: the ime options 

*android.support.v7.widget.SearchView.getInputType()*

public int getInputType()

Returns the input type set on the query text field. 



    Returns: the input type 

*android.support.v7.widget.SearchView.getMaxWidth()*

public int getMaxWidth()

Gets the specified maximum width in pixels, if set. Returns zero if no maximum 
width was specified. 



    Returns: the maximum width of the view 

*android.support.v7.widget.SearchView.getQuery()*

public |java.lang.CharSequence| getQuery()

Returns the query string currently in the text field. 



    Returns: the query string 

*android.support.v7.widget.SearchView.getQueryHint()*

public |java.lang.CharSequence| getQueryHint()

Gets the hint text to display in the query text field. 



    Returns: the query hint text, if specified, null otherwise. 

*android.support.v7.widget.SearchView.getSuggestionsAdapter()*

public CursorAdapter getSuggestionsAdapter()

Returns the adapter used for suggestions, if any. 



    Returns: the suggestions adapter 

*android.support.v7.widget.SearchView.isIconfiedByDefault()*

public boolean isIconfiedByDefault()

Returns the default iconified state of the search field. 



    Returns: 

*android.support.v7.widget.SearchView.isIconified()*

public boolean isIconified()

Returns the current iconified state of the SearchView. 



    Returns: true if the SearchView is currently iconified, false if the search field is 
             fully visible. 

*android.support.v7.widget.SearchView.isQueryRefinementEnabled()*

public boolean isQueryRefinementEnabled()

Returns whether query refinement is enabled for all items or only specific 
ones. 



    Returns: true if enabled for all items, false otherwise. 

*android.support.v7.widget.SearchView.isSubmitButtonEnabled()*

public boolean isSubmitButtonEnabled()

Returns whether the submit button is enabled when necessary or never displayed. 



    Returns: whether the submit button is enabled automatically when necessary 

*android.support.v7.widget.SearchView.onActionViewCollapsed()*

public void onActionViewCollapsed()





*android.support.v7.widget.SearchView.onActionViewExpanded()*

public void onActionViewExpanded()





*android.support.v7.widget.SearchView.onDetachedFromWindow()*

protected void onDetachedFromWindow()





*android.support.v7.widget.SearchView.onKeyDown(int,KeyEvent)*

public boolean onKeyDown(
  int keyCode,
  KeyEvent event)

Handles the key down event for dealing with action keys. 


    keyCode - This is the keycode of the typed key, and is the same value as found in the 
       KeyEvent parameter. 
    event - The complete event record for the typed key 

    Returns: true if the event was handled here, or false if not. 

*android.support.v7.widget.SearchView.onMeasure(int,int)*

protected void onMeasure(
  int widthMeasureSpec,
  int heightMeasureSpec)





*android.support.v7.widget.SearchView.onWindowFocusChanged(boolean)*

public void onWindowFocusChanged(boolean hasWindowFocus)





*android.support.v7.widget.SearchView.requestFocus(int,Rect)*

public boolean requestFocus(
  int direction,
  Rect previouslyFocusedRect)





*android.support.v7.widget.SearchView.setAppSearchData(Bundle)*

public void setAppSearchData(Bundle appSearchData)

Sets the APP_DATA for legacy SearchDialog use. 


    appSearchData - bundle provided by the app when launching the search dialog 

*android.support.v7.widget.SearchView.setIconified(boolean)*

public void setIconified(boolean iconify)

Iconifies or expands the SearchView. Any query text is cleared when iconified. 
This is a temporary state and does not override the default iconified state set 
by (|android.support.v7.widget.SearchView|) . If the default state is 
iconified, then a false here will only be valid until the user closes the 
field. And if the default state is expanded, then a true here will only clear 
the text field and not close it. 


    iconify - a true value will collapse the SearchView to an icon, while a false will expand 
       it. 

*android.support.v7.widget.SearchView.setIconifiedByDefault(boolean)*

public void setIconifiedByDefault(boolean iconified)

Sets the default or resting state of the search field. If true, a single search 
icon is shown by default and expands to show the text field and other buttons 
when pressed. Also, if the default state is iconified, then it collapses to 
that state when the close button is pressed. Changes to this property will take 
effect immediately. 

The default value is true. 


    iconified - whether the search field should be iconified by default 

*android.support.v7.widget.SearchView.setImeOptions(int)*

public void setImeOptions(int imeOptions)

Sets the IME options on the query text field. 


    imeOptions - the options to set on the query text field 

*android.support.v7.widget.SearchView.setInputType(int)*

public void setInputType(int inputType)

Sets the input type on the query text field. 


    inputType - the input type to set on the query text field 

*android.support.v7.widget.SearchView.setMaxWidth(int)*

public void setMaxWidth(int maxpixels)

Makes the view at most this many pixels wide 



*android.support.v7.widget.SearchView.setOnCloseListener(SearchView.OnCloseListener)*

public void setOnCloseListener(android.support.v7.widget.SearchView.OnCloseListener listener)

Sets a listener to inform when the user closes the SearchView. 


    listener - the listener to call when the user closes the SearchView. 

*android.support.v7.widget.SearchView.setOnQueryTextFocusChangeListener(OnFocusChangeListener)*

public void setOnQueryTextFocusChangeListener(OnFocusChangeListener listener)

Sets a listener to inform when the focus of the query text field changes. 


    listener - the listener to inform of focus changes. 

*android.support.v7.widget.SearchView.setOnQueryTextListener(SearchView.OnQueryTextListener)*

public void setOnQueryTextListener(android.support.v7.widget.SearchView.OnQueryTextListener listener)

Sets a listener for user actions within the SearchView. 


    listener - the listener object that receives callbacks when the user performs actions in 
       the SearchView such as clicking on buttons or typing a query. 

*android.support.v7.widget.SearchView.setOnSearchClickListener(OnClickListener)*

public void setOnSearchClickListener(OnClickListener listener)

Sets a listener to inform when the search button is pressed. This is only 
relevant when the text field is not visible by default. Calling 
setIconified(false)(|android.support.v7.widget.SearchView|) can also cause this 
listener to be informed. 


    listener - the listener to inform when the search button is clicked or the text field is 
       programmatically de-iconified. 

*android.support.v7.widget.SearchView.setOnSuggestionListener(SearchView.OnSuggestionListener)*

public void setOnSuggestionListener(android.support.v7.widget.SearchView.OnSuggestionListener listener)

Sets a listener to inform when a suggestion is focused or clicked. 


    listener - the listener to inform of suggestion selection events. 

*android.support.v7.widget.SearchView.setQuery(CharSequence,boolean)*

public void setQuery(
  java.lang.CharSequence query,
  boolean submit)

Sets a query string in the text field and optionally submits the query as well. 


    query - the query string. This replaces any query text already present in the text 
       field. 
    submit - whether to submit the query right now or only update the contents of text 
       field. 

*android.support.v7.widget.SearchView.setQueryHint(CharSequence)*

public void setQueryHint(java.lang.CharSequence hint)

Sets the hint text to display in the query text field. This overrides any hint 
specified in the SearchableInfo. 


    hint - the hint text to display 

*android.support.v7.widget.SearchView.setQueryRefinementEnabled(boolean)*

public void setQueryRefinementEnabled(boolean enable)

Specifies if a query refinement button should be displayed alongside each 
suggestion or if it should depend on the flags set in the individual items 
retrieved from the suggestions provider. Clicking on the query refinement 
button will replace the text in the query text field with the text from the 
suggestion. This flag only takes effect if a SearchableInfo has been specified 
with (|android.support.v7.widget.SearchView|) and not when using a custom 
adapter. 


    enable - true if all items should have a query refinement button, false if only those 
       items that have a query refinement flag set should have the button. 

*android.support.v7.widget.SearchView.setSearchableInfo(SearchableInfo)*

public void setSearchableInfo(SearchableInfo searchable)

Sets the SearchableInfo for this SearchView. Properties in the SearchableInfo 
are used to display labels, hints, suggestions, create intents for launching 
search results screens and controlling other affordances such as a voice 
button. 


    searchable - a SearchableInfo can be retrieved from the SearchManager, for a specific 
       activity or a global search provider. 

*android.support.v7.widget.SearchView.setSubmitButtonEnabled(boolean)*

public void setSubmitButtonEnabled(boolean enabled)

Enables showing a submit button when the query is non-empty. In cases where the 
SearchView is being used to filter the contents of the current activity and 
doesn't launch a separate results activity, then the submit button should be 
disabled. 


    enabled - true to show a submit button for submitting queries, false if a submit button 
       is not required. 

*android.support.v7.widget.SearchView.setSuggestionsAdapter(CursorAdapter)*

public void setSuggestionsAdapter(CursorAdapter adapter)

You can set a custom adapter if you wish. Otherwise the default adapter is used 
to display the suggestions from the suggestions provider associated with the 
SearchableInfo. 




