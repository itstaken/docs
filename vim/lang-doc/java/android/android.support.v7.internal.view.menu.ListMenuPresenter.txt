*android.support.v7.internal.view.menu.ListMenuPresenter* *ListMenuPresenter* Me

public class ListMenuPresenter
  extends    |java.lang.Object|
  implements |android.support.v7.internal.view.menu.MenuPresenter|

|android.support.v7.internal.view.menu.ListMenuPresenter_Description|
|android.support.v7.internal.view.menu.ListMenuPresenter_Fields|
|android.support.v7.internal.view.menu.ListMenuPresenter_Constructors|
|android.support.v7.internal.view.menu.ListMenuPresenter_Methods|

================================================================================

*android.support.v7.internal.view.menu.ListMenuPresenter_Fields*
|java.lang.String_android.support.v7.internal.view.menu.ListMenuPresenter.VIEWS_TAG|

*android.support.v7.internal.view.menu.ListMenuPresenter_Constructors*
|android.support.v7.internal.view.menu.ListMenuPresenter(Context,int)|Construct

*android.support.v7.internal.view.menu.ListMenuPresenter_Methods*
|android.support.v7.internal.view.menu.ListMenuPresenter.collapseItemActionView(MenuBuilder,MenuItemImpl)|
|android.support.v7.internal.view.menu.ListMenuPresenter.expandItemActionView(MenuBuilder,MenuItemImpl)|
|android.support.v7.internal.view.menu.ListMenuPresenter.flagActionItems()|
|android.support.v7.internal.view.menu.ListMenuPresenter.getAdapter()|Call this
|android.support.v7.internal.view.menu.ListMenuPresenter.getId()|
|android.support.v7.internal.view.menu.ListMenuPresenter.getMenuView(ViewGroup)|
|android.support.v7.internal.view.menu.ListMenuPresenter.initForMenu(Context,MenuBuilder)|
|android.support.v7.internal.view.menu.ListMenuPresenter.onCloseMenu(MenuBuilder,boolean)|
|android.support.v7.internal.view.menu.ListMenuPresenter.onItemClick(<any>,View,int,long)|
|android.support.v7.internal.view.menu.ListMenuPresenter.onRestoreInstanceState(Parcelable)|
|android.support.v7.internal.view.menu.ListMenuPresenter.onSaveInstanceState()|
|android.support.v7.internal.view.menu.ListMenuPresenter.onSubMenuSelected(SubMenuBuilder)|
|android.support.v7.internal.view.menu.ListMenuPresenter.restoreHierarchyState(Bundle)|
|android.support.v7.internal.view.menu.ListMenuPresenter.saveHierarchyState(Bundle)|
|android.support.v7.internal.view.menu.ListMenuPresenter.setCallback(MenuPresenter.Callback)|
|android.support.v7.internal.view.menu.ListMenuPresenter.setId(int)|
|android.support.v7.internal.view.menu.ListMenuPresenter.setItemIndexOffset(int)|
|android.support.v7.internal.view.menu.ListMenuPresenter.updateMenuView(boolean)|

*android.support.v7.internal.view.menu.ListMenuPresenter_Description*

MenuPresenter for list-style menus. 



*java.lang.String_android.support.v7.internal.view.menu.ListMenuPresenter.VIEWS_TAG*





*android.support.v7.internal.view.menu.ListMenuPresenter(Context,int)*

public ListMenuPresenter(
  Context context,
  int itemLayoutRes)

Construct a new ListMenuPresenter. 

    context - Context to use for theming. This will supersede the context provided to 
       initForMenu when this presenter is added. 
    itemLayoutRes - Layout resource for individual item views. 

*android.support.v7.internal.view.menu.ListMenuPresenter.collapseItemActionView(MenuBuilder,MenuItemImpl)*

public boolean collapseItemActionView(
  android.support.v7.internal.view.menu.MenuBuilder menu,
  android.support.v7.internal.view.menu.MenuItemImpl item)





*android.support.v7.internal.view.menu.ListMenuPresenter.expandItemActionView(MenuBuilder,MenuItemImpl)*

public boolean expandItemActionView(
  android.support.v7.internal.view.menu.MenuBuilder menu,
  android.support.v7.internal.view.menu.MenuItemImpl item)





*android.support.v7.internal.view.menu.ListMenuPresenter.flagActionItems()*

public boolean flagActionItems()





*android.support.v7.internal.view.menu.ListMenuPresenter.getAdapter()*

public ListAdapter getAdapter()

Call this instead of getMenuView if you want to manage your own ListView. For 
proper operation, the ListView hosting this adapter should add this presenter 
as an OnItemClickListener. 



    Returns: A ListAdapter containing the items in the menu. 

*android.support.v7.internal.view.menu.ListMenuPresenter.getId()*

public int getId()





*android.support.v7.internal.view.menu.ListMenuPresenter.getMenuView(ViewGroup)*

public |android.support.v7.internal.view.menu.MenuView| getMenuView(ViewGroup root)





*android.support.v7.internal.view.menu.ListMenuPresenter.initForMenu(Context,MenuBuilder)*

public void initForMenu(
  Context context,
  android.support.v7.internal.view.menu.MenuBuilder menu)





*android.support.v7.internal.view.menu.ListMenuPresenter.onCloseMenu(MenuBuilder,boolean)*

public void onCloseMenu(
  android.support.v7.internal.view.menu.MenuBuilder menu,
  boolean allMenusAreClosing)





*android.support.v7.internal.view.menu.ListMenuPresenter.onItemClick(<any>,View,int,long)*

public void onItemClick(
  <any> parent,
  View view,
  int position,
  long id)





*android.support.v7.internal.view.menu.ListMenuPresenter.onRestoreInstanceState(Parcelable)*

public void onRestoreInstanceState(Parcelable state)





*android.support.v7.internal.view.menu.ListMenuPresenter.onSaveInstanceState()*

public Parcelable onSaveInstanceState()





*android.support.v7.internal.view.menu.ListMenuPresenter.onSubMenuSelected(SubMenuBuilder)*

public boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder subMenu)





*android.support.v7.internal.view.menu.ListMenuPresenter.restoreHierarchyState(Bundle)*

public void restoreHierarchyState(Bundle inState)





*android.support.v7.internal.view.menu.ListMenuPresenter.saveHierarchyState(Bundle)*

public void saveHierarchyState(Bundle outState)





*android.support.v7.internal.view.menu.ListMenuPresenter.setCallback(MenuPresenter.Callback)*

public void setCallback(android.support.v7.internal.view.menu.MenuPresenter.Callback cb)





*android.support.v7.internal.view.menu.ListMenuPresenter.setId(int)*

public void setId(int id)





*android.support.v7.internal.view.menu.ListMenuPresenter.setItemIndexOffset(int)*

public void setItemIndexOffset(int offset)





*android.support.v7.internal.view.menu.ListMenuPresenter.updateMenuView(boolean)*

public void updateMenuView(boolean cleared)






