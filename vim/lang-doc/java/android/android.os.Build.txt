*android.os.Build* *Build* Information about the current build, extracted from s

public class Build
  extends    |java.lang.Object|

|android.os.Build_Description|
|android.os.Build_Fields|
|android.os.Build_Constructors|
|android.os.Build_Methods|

================================================================================

*android.os.Build_Fields*
|java.lang.String_android.os.Build.BOARD|
|java.lang.String_android.os.Build.BOOTLOADER|
|java.lang.String_android.os.Build.BRAND|
|java.lang.String_android.os.Build.CPU_ABI|
|java.lang.String_android.os.Build.CPU_ABI2|
|java.lang.String_android.os.Build.DEVICE|
|java.lang.String_android.os.Build.DISPLAY|
|java.lang.String_android.os.Build.FINGERPRINT|
|java.lang.String_android.os.Build.HARDWARE|
|java.lang.String_android.os.Build.HOST|
|java.lang.String_android.os.Build.ID|
|boolean_android.os.Build.IS_DEBUGGABLE|
|java.lang.String_android.os.Build.MANUFACTURER|
|java.lang.String_android.os.Build.MODEL|
|java.lang.String_android.os.Build.PRODUCT|
|java.lang.String_android.os.Build.RADIO|
|java.lang.String_android.os.Build.SERIAL|
|java.lang.String_android.os.Build.TAGS|
|long_android.os.Build.TIME|
|java.lang.String_android.os.Build.TYPE|
|java.lang.String_android.os.Build.UNKNOWN|
|java.lang.String_android.os.Build.USER|

*android.os.Build_Constructors*
|android.os.Build()|

*android.os.Build_Methods*
|android.os.Build.getRadioVersion()|Returns the version string for the radio fi

*android.os.Build_Description*

Information about the current build, extracted from system properties. 



*java.lang.String_android.os.Build.BOARD*

The name of the underlying board, like "goldfish". 


*java.lang.String_android.os.Build.BOOTLOADER*

The system bootloader version number. 


*java.lang.String_android.os.Build.BRAND*

The brand (e.g., carrier) the software is customized for, if any. 


*java.lang.String_android.os.Build.CPU_ABI*

The name of the instruction set (CPU type + ABI convention) of native code. 


*java.lang.String_android.os.Build.CPU_ABI2*

The name of the second instruction set (CPU type + ABI convention) of native 
code. 


*java.lang.String_android.os.Build.DEVICE*

The name of the industrial design. 


*java.lang.String_android.os.Build.DISPLAY*

A build ID string meant for displaying to the user 


*java.lang.String_android.os.Build.FINGERPRINT*

A string that uniquely identifies this build. Do not attempt to parse this 
value. 


*java.lang.String_android.os.Build.HARDWARE*

The name of the hardware (from the kernel command line or /proc). 


*java.lang.String_android.os.Build.HOST*




*java.lang.String_android.os.Build.ID*

Either a changelist number, or a label like "M4-rc20". 


*boolean_android.os.Build.IS_DEBUGGABLE*

Returns true if we are running a debug build such as "user-debug" or "eng". 


*java.lang.String_android.os.Build.MANUFACTURER*

The manufacturer of the product/hardware. 


*java.lang.String_android.os.Build.MODEL*

The end-user-visible name for the end product. 


*java.lang.String_android.os.Build.PRODUCT*

The name of the overall product. 


*java.lang.String_android.os.Build.RADIO*

The radio firmware version number. 


*java.lang.String_android.os.Build.SERIAL*

A hardware serial number, if available. Alphanumeric only, case-insensitive. 


*java.lang.String_android.os.Build.TAGS*

Comma-separated tags describing the build, like "unsigned,debug". 


*long_android.os.Build.TIME*




*java.lang.String_android.os.Build.TYPE*

The type of build, like "user" or "eng". 


*java.lang.String_android.os.Build.UNKNOWN*

Value used for when a build property is unknown. 


*java.lang.String_android.os.Build.USER*





*android.os.Build()*

public Build()




*android.os.Build.getRadioVersion()*

public static |java.lang.String| getRadioVersion()

Returns the version string for the radio firmware. May return null (if, for 
instance, the radio is not currently on). 




