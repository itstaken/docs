*android.app.ActivityManager.RecentTaskInfo* *ActivityManager.RecentTaskInfo* In

public static class ActivityManager.RecentTaskInfo
  extends    |java.lang.Object|
  implements |android.os.Parcelable|

|android.app.ActivityManager.RecentTaskInfo_Description|
|android.app.ActivityManager.RecentTaskInfo_Fields|
|android.app.ActivityManager.RecentTaskInfo_Constructors|
|android.app.ActivityManager.RecentTaskInfo_Methods|

================================================================================

*android.app.ActivityManager.RecentTaskInfo_Fields*
|android.content.Intent_android.app.ActivityManager.RecentTaskInfo.baseIntent|
|android.os.Parcelable.Creator<android.app.ActivityManager.RecentTaskInfo>_android.app.ActivityManager.RecentTaskInfo.CREATOR|
|java.lang.CharSequence_android.app.ActivityManager.RecentTaskInfo.description|
|int_android.app.ActivityManager.RecentTaskInfo.id|
|android.content.ComponentName_android.app.ActivityManager.RecentTaskInfo.origActivity|
|int_android.app.ActivityManager.RecentTaskInfo.persistentId|
|int_android.app.ActivityManager.RecentTaskInfo.stackId|

*android.app.ActivityManager.RecentTaskInfo_Constructors*
|android.app.ActivityManager.RecentTaskInfo()|

*android.app.ActivityManager.RecentTaskInfo_Methods*
|android.app.ActivityManager.RecentTaskInfo.describeContents()|
|android.app.ActivityManager.RecentTaskInfo.readFromParcel(Parcel)|
|android.app.ActivityManager.RecentTaskInfo.writeToParcel(Parcel,int)|

*android.app.ActivityManager.RecentTaskInfo_Description*

Information you can retrieve about tasks that the user has most recently 
started or visited. 



*android.content.Intent_android.app.ActivityManager.RecentTaskInfo.baseIntent*

The original Intent used to launch the task. You can use this Intent to 
re-launch the task (if it is no longer running) or bring the current task to 
the front. 


*android.os.Parcelable.Creator<android.app.ActivityManager.RecentTaskInfo>_android.app.ActivityManager.RecentTaskInfo.CREATOR*




*java.lang.CharSequence_android.app.ActivityManager.RecentTaskInfo.description*

Description of the task's last state. 


*int_android.app.ActivityManager.RecentTaskInfo.id*

If this task is currently running, this is the identifier for it. If it is not 
running, this will be -1. 


*android.content.ComponentName_android.app.ActivityManager.RecentTaskInfo.origActivity*

If this task was started from an alias, this is the actual activity component 
that was initially started; the component of the baseIntent in this case is the 
name of the actual activity implementation that the alias referred to. 
Otherwise, this is null. 


*int_android.app.ActivityManager.RecentTaskInfo.persistentId*

The true identifier of this task, valid even if it is not running. 


*int_android.app.ActivityManager.RecentTaskInfo.stackId*

The id of the ActivityStack this Task was on most recently. 



*android.app.ActivityManager.RecentTaskInfo()*

public ActivityManager.RecentTaskInfo()




*android.app.ActivityManager.RecentTaskInfo.describeContents()*

public int describeContents()





*android.app.ActivityManager.RecentTaskInfo.readFromParcel(Parcel)*

public void readFromParcel(android.os.Parcel source)





*android.app.ActivityManager.RecentTaskInfo.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel dest,
  int flags)






