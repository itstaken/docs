*android.text.util.Rfc822Token* *Rfc822Token* This class stores an RFC 822-like 

public class Rfc822Token
  extends    |java.lang.Object|

|android.text.util.Rfc822Token_Description|
|android.text.util.Rfc822Token_Fields|
|android.text.util.Rfc822Token_Constructors|
|android.text.util.Rfc822Token_Methods|

================================================================================

*android.text.util.Rfc822Token_Constructors*
|android.text.util.Rfc822Token(String,String,String)|Creates a new Rfc822Token 

*android.text.util.Rfc822Token_Methods*
|android.text.util.Rfc822Token.equals(Object)|
|android.text.util.Rfc822Token.getAddress()|Returns the address part.
|android.text.util.Rfc822Token.getComment()|Returns the comment part.
|android.text.util.Rfc822Token.getName()|Returns the name part.
|android.text.util.Rfc822Token.hashCode()|
|android.text.util.Rfc822Token.quoteComment(String)|Returns the comment, with i
|android.text.util.Rfc822Token.quoteName(String)|Returns the name, with interna
|android.text.util.Rfc822Token.quoteNameIfNecessary(String)|Returns the name, c
|android.text.util.Rfc822Token.setAddress(String)|Changes the address to the sp
|android.text.util.Rfc822Token.setComment(String)|Changes the comment to the sp
|android.text.util.Rfc822Token.setName(String)|Changes the name to the specifie
|android.text.util.Rfc822Token.toString()|Returns the name (with quoting added 

*android.text.util.Rfc822Token_Description*

This class stores an RFC 822-like name, address, and comment, and provides 
methods to convert them to quoted strings. 



*android.text.util.Rfc822Token(String,String,String)*

public Rfc822Token(
  java.lang.String name,
  java.lang.String address,
  java.lang.String comment)

Creates a new Rfc822Token with the specified name, address, and comment. 


*android.text.util.Rfc822Token.equals(Object)*

public boolean equals(java.lang.Object o)





*android.text.util.Rfc822Token.getAddress()*

public |java.lang.String| getAddress()

Returns the address part. 



*android.text.util.Rfc822Token.getComment()*

public |java.lang.String| getComment()

Returns the comment part. 



*android.text.util.Rfc822Token.getName()*

public |java.lang.String| getName()

Returns the name part. 



*android.text.util.Rfc822Token.hashCode()*

public int hashCode()





*android.text.util.Rfc822Token.quoteComment(String)*

public static |java.lang.String| quoteComment(java.lang.String comment)

Returns the comment, with internal backslashes and parentheses preceded by 
backslashes. The outer parentheses themselves are not added by this method. 



*android.text.util.Rfc822Token.quoteName(String)*

public static |java.lang.String| quoteName(java.lang.String name)

Returns the name, with internal backslashes and quotation marks preceded by 
backslashes. The outer quote marks themselves are not added by this method. 



*android.text.util.Rfc822Token.quoteNameIfNecessary(String)*

public static |java.lang.String| quoteNameIfNecessary(java.lang.String name)

Returns the name, conservatively quoting it if there are any characters that 
are likely to cause trouble outside of a quoted string, or returning it 
literally if it seems safe. 



*android.text.util.Rfc822Token.setAddress(String)*

public void setAddress(java.lang.String address)

Changes the address to the specified address. 



*android.text.util.Rfc822Token.setComment(String)*

public void setComment(java.lang.String comment)

Changes the comment to the specified comment. 



*android.text.util.Rfc822Token.setName(String)*

public void setName(java.lang.String name)

Changes the name to the specified name. 



*android.text.util.Rfc822Token.toString()*

public |java.lang.String| toString()

Returns the name (with quoting added if necessary), the comment (in 
parentheses), and the address (in angle brackets). This should be suitable for 
inclusion in an RFC 822 address list. 




