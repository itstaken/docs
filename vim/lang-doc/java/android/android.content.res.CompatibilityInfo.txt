*android.content.res.CompatibilityInfo* *CompatibilityInfo* CompatibilityInfo cl

public class CompatibilityInfo
  extends    |java.lang.Object|
  implements |android.os.Parcelable|

|android.content.res.CompatibilityInfo_Description|
|android.content.res.CompatibilityInfo_Fields|
|android.content.res.CompatibilityInfo_Constructors|
|android.content.res.CompatibilityInfo_Methods|

================================================================================

*android.content.res.CompatibilityInfo_Fields*
|int_android.content.res.CompatibilityInfo.applicationDensity|
|float_android.content.res.CompatibilityInfo.applicationInvertedScale|
|float_android.content.res.CompatibilityInfo.applicationScale|
|android.os.Parcelable.Creator<android.content.res.CompatibilityInfo>_android.content.res.CompatibilityInfo.CREATOR|
|android.content.res.CompatibilityInfo_android.content.res.CompatibilityInfo.DEFAULT_COMPATIBILITY_INFO|
|int_android.content.res.CompatibilityInfo.DEFAULT_NORMAL_SHORT_DIMENSION|
|float_android.content.res.CompatibilityInfo.MAXIMUM_ASPECT_RATIO|

*android.content.res.CompatibilityInfo_Constructors*
|android.content.res.CompatibilityInfo(ApplicationInfo,int,int,boolean)|

*android.content.res.CompatibilityInfo_Methods*
|android.content.res.CompatibilityInfo.alwaysSupportsScreen()|
|android.content.res.CompatibilityInfo.applyToConfiguration(int,Configuration)|
|android.content.res.CompatibilityInfo.applyToDisplayMetrics(DisplayMetrics)|
|android.content.res.CompatibilityInfo.computeCompatibleScaling(DisplayMetrics,DisplayMetrics)|
|android.content.res.CompatibilityInfo.describeContents()|
|android.content.res.CompatibilityInfo.equals(Object)|
|android.content.res.CompatibilityInfo.getTranslator()|Returns the translator w
|android.content.res.CompatibilityInfo.hashCode()|
|android.content.res.CompatibilityInfo.isScalingRequired()|
|android.content.res.CompatibilityInfo.neverSupportsScreen()|
|android.content.res.CompatibilityInfo.supportsScreen()|
|android.content.res.CompatibilityInfo.toString()|
|android.content.res.CompatibilityInfo.writeToParcel(Parcel,int)|

*android.content.res.CompatibilityInfo_Description*

CompatibilityInfo class keeps the information about compatibility mode that the 
application is running under. 



*int_android.content.res.CompatibilityInfo.applicationDensity*

The effective screen density we have selected for this application. 


*float_android.content.res.CompatibilityInfo.applicationInvertedScale*

Application's inverted scale. 


*float_android.content.res.CompatibilityInfo.applicationScale*

Application's scale. 


*android.os.Parcelable.Creator<android.content.res.CompatibilityInfo>_android.content.res.CompatibilityInfo.CREATOR*




*android.content.res.CompatibilityInfo_android.content.res.CompatibilityInfo.DEFAULT_COMPATIBILITY_INFO*

default compatibility info object for compatible applications 


*int_android.content.res.CompatibilityInfo.DEFAULT_NORMAL_SHORT_DIMENSION*

This is the number of pixels we would like to have along the short axis of an 
app that needs to run on a normal size screen. 


*float_android.content.res.CompatibilityInfo.MAXIMUM_ASPECT_RATIO*

This is the maximum aspect ratio we will allow while keeping applications in a 
compatible screen size. 



*android.content.res.CompatibilityInfo(ApplicationInfo,int,int,boolean)*

public CompatibilityInfo(
  android.content.pm.ApplicationInfo appInfo,
  int screenLayout,
  int sw,
  boolean forceCompat)




*android.content.res.CompatibilityInfo.alwaysSupportsScreen()*

public boolean alwaysSupportsScreen()





*android.content.res.CompatibilityInfo.applyToConfiguration(int,Configuration)*

public void applyToConfiguration(
  int displayDensity,
  android.content.res.Configuration inoutConfig)





*android.content.res.CompatibilityInfo.applyToDisplayMetrics(DisplayMetrics)*

public void applyToDisplayMetrics(android.util.DisplayMetrics inoutDm)





*android.content.res.CompatibilityInfo.computeCompatibleScaling(DisplayMetrics,DisplayMetrics)*

public static float computeCompatibleScaling(
  android.util.DisplayMetrics dm,
  android.util.DisplayMetrics outDm)

Compute the frame Rect for applications runs under compatibility mode. 


    dm - the display metrics used to compute the frame size. 
    outDm - If non-null the width and height will be set to their scaled values. 

    Returns: Returns the scaling factor for the window. 

*android.content.res.CompatibilityInfo.describeContents()*

public int describeContents()





*android.content.res.CompatibilityInfo.equals(Object)*

public boolean equals(java.lang.Object o)





*android.content.res.CompatibilityInfo.getTranslator()*

public |android.content.res.CompatibilityInfo.Translator| getTranslator()

Returns the translator which translates the coordinates in compatibility mode. 


    params - the window's parameter 

*android.content.res.CompatibilityInfo.hashCode()*

public int hashCode()





*android.content.res.CompatibilityInfo.isScalingRequired()*

public boolean isScalingRequired()





    Returns: true if the scaling is required 

*android.content.res.CompatibilityInfo.neverSupportsScreen()*

public boolean neverSupportsScreen()





*android.content.res.CompatibilityInfo.supportsScreen()*

public boolean supportsScreen()





*android.content.res.CompatibilityInfo.toString()*

public |java.lang.String| toString()





*android.content.res.CompatibilityInfo.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel dest,
  int flags)






