*android.util.NtpTrustedTime* *NtpTrustedTime* TrustedTimethat connects with a r

public class NtpTrustedTime
  extends    |java.lang.Object|
  implements |android.util.TrustedTime|

|android.util.NtpTrustedTime_Description|
|android.util.NtpTrustedTime_Fields|
|android.util.NtpTrustedTime_Constructors|
|android.util.NtpTrustedTime_Methods|

================================================================================

*android.util.NtpTrustedTime_Methods*
|android.util.NtpTrustedTime.currentTimeMillis()|
|android.util.NtpTrustedTime.forceRefresh()|
|android.util.NtpTrustedTime.getCacheAge()|
|android.util.NtpTrustedTime.getCacheCertainty()|
|android.util.NtpTrustedTime.getCachedNtpTime()|
|android.util.NtpTrustedTime.getCachedNtpTimeReference()|
|android.util.NtpTrustedTime.getInstance(Context)|
|android.util.NtpTrustedTime.hasCache()|

*android.util.NtpTrustedTime_Description*

(|android.util.TrustedTime|) that connects with a remote NTP server as its 
trusted time source. 



*android.util.NtpTrustedTime.currentTimeMillis()*

public long currentTimeMillis()





*android.util.NtpTrustedTime.forceRefresh()*

public boolean forceRefresh()





*android.util.NtpTrustedTime.getCacheAge()*

public long getCacheAge()





*android.util.NtpTrustedTime.getCacheCertainty()*

public long getCacheCertainty()





*android.util.NtpTrustedTime.getCachedNtpTime()*

public long getCachedNtpTime()





*android.util.NtpTrustedTime.getCachedNtpTimeReference()*

public long getCachedNtpTimeReference()





*android.util.NtpTrustedTime.getInstance(Context)*

public static synchronized |android.util.NtpTrustedTime| getInstance(android.content.Context context)





*android.util.NtpTrustedTime.hasCache()*

public boolean hasCache()






