*android.bluetooth.BluetoothClass* *BluetoothClass* Represents a Bluetooth class

public final class BluetoothClass
  extends    |java.lang.Object|
  implements |android.os.Parcelable|

|android.bluetooth.BluetoothClass_Description|
|android.bluetooth.BluetoothClass_Fields|
|android.bluetooth.BluetoothClass_Constructors|
|android.bluetooth.BluetoothClass_Methods|

================================================================================

*android.bluetooth.BluetoothClass_Fields*
|android.os.Parcelable.Creator<android.bluetooth.BluetoothClass>_android.bluetooth.BluetoothClass.CREATOR|
|int_android.bluetooth.BluetoothClass.ERROR|
|int_android.bluetooth.BluetoothClass.PROFILE_A2DP|
|int_android.bluetooth.BluetoothClass.PROFILE_HEADSET|
|int_android.bluetooth.BluetoothClass.PROFILE_HID|
|int_android.bluetooth.BluetoothClass.PROFILE_NAP|
|int_android.bluetooth.BluetoothClass.PROFILE_OPP|
|int_android.bluetooth.BluetoothClass.PROFILE_PANU|

*android.bluetooth.BluetoothClass_Constructors*
|android.bluetooth.BluetoothClass(int)|

*android.bluetooth.BluetoothClass_Methods*
|android.bluetooth.BluetoothClass.describeContents()|
|android.bluetooth.BluetoothClass.doesClassMatch(int)|Check class bits for poss
|android.bluetooth.BluetoothClass.equals(Object)|
|android.bluetooth.BluetoothClass.getDeviceClass()|Return the (major and minor)
|android.bluetooth.BluetoothClass.getMajorDeviceClass()|Return the major device
|android.bluetooth.BluetoothClass.hashCode()|
|android.bluetooth.BluetoothClass.hasService(int)|Return true if the specified 
|android.bluetooth.BluetoothClass.toString()|
|android.bluetooth.BluetoothClass.writeToParcel(Parcel,int)|

*android.bluetooth.BluetoothClass_Description*

Represents a Bluetooth class, which describes general characteristics and 
capabilities of a device. For example, a Bluetooth class will specify the 
general device type such as a phone, a computer, or headset, and whether it's 
capable of services such as audio or telephony. 

Every Bluetooth class is composed of zero or more service classes, and exactly 
one device class. The device class is further broken down into major and minor 
device class components. 

(|android.bluetooth.BluetoothClass|) is useful as a hint to roughly describe a 
device (for example to show an icon in the UI), but does not reliably describe 
which Bluetooth profiles or services are actually supported by a device. 
Accurate service discovery is done through SDP requests, which are 
automatically performed when creating an RFCOMM socket with 
(|android.bluetooth.BluetoothDevice|) and 
(|android.bluetooth.BluetoothAdapter|) 

Use (|android.bluetooth.BluetoothDevice|) to retrieve the class for a remote 
device. 





*android.os.Parcelable.Creator<android.bluetooth.BluetoothClass>_android.bluetooth.BluetoothClass.CREATOR*




*int_android.bluetooth.BluetoothClass.ERROR*

Legacy error value. Applications should use null instead. 


*int_android.bluetooth.BluetoothClass.PROFILE_A2DP*




*int_android.bluetooth.BluetoothClass.PROFILE_HEADSET*




*int_android.bluetooth.BluetoothClass.PROFILE_HID*




*int_android.bluetooth.BluetoothClass.PROFILE_NAP*




*int_android.bluetooth.BluetoothClass.PROFILE_OPP*




*int_android.bluetooth.BluetoothClass.PROFILE_PANU*





*android.bluetooth.BluetoothClass(int)*

public BluetoothClass(int classInt)




*android.bluetooth.BluetoothClass.describeContents()*

public int describeContents()





*android.bluetooth.BluetoothClass.doesClassMatch(int)*

public boolean doesClassMatch(int profile)

Check class bits for possible bluetooth profile support. This is a simple 
heuristic that tries to guess if a device with the given class bits might 
support specified profile. It is not accurate for all devices. It tries to err 
on the side of false positives. 


    profile - The profile to be checked 

    Returns: True if this device might support specified profile. 

*android.bluetooth.BluetoothClass.equals(Object)*

public boolean equals(java.lang.Object o)





*android.bluetooth.BluetoothClass.getDeviceClass()*

public int getDeviceClass()

Return the (major and minor) device class component of this 
(|android.bluetooth.BluetoothClass|) . Values returned from this function can 
be compared with the public constants in 
(|android.bluetooth.BluetoothClass.Device|) to determine which device class is 
encoded in this Bluetooth class. 



    Returns: device class component 

*android.bluetooth.BluetoothClass.getMajorDeviceClass()*

public int getMajorDeviceClass()

Return the major device class component of this 
(|android.bluetooth.BluetoothClass|) . Values returned from this function can 
be compared with the public constants in 
(|android.bluetooth.BluetoothClass.Device.Major|) to determine which major 
class is encoded in this Bluetooth class. 



    Returns: major device class component 

*android.bluetooth.BluetoothClass.hashCode()*

public int hashCode()





*android.bluetooth.BluetoothClass.hasService(int)*

public boolean hasService(int service)

Return true if the specified service class is supported by this 
(|android.bluetooth.BluetoothClass|) . Valid service classes are the public 
constants in (|android.bluetooth.BluetoothClass.Service|) . For example, 
(|android.bluetooth.BluetoothClass.Service|) . 


    service - valid service class 

    Returns: true if the service class is supported 

*android.bluetooth.BluetoothClass.toString()*

public |java.lang.String| toString()





*android.bluetooth.BluetoothClass.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel out,
  int flags)






