*android.support.v8.renderscript.Matrix3f* *Matrix3f* Class for exposing the nat

public class Matrix3f
  extends    |java.lang.Object|

|android.support.v8.renderscript.Matrix3f_Description|
|android.support.v8.renderscript.Matrix3f_Fields|
|android.support.v8.renderscript.Matrix3f_Constructors|
|android.support.v8.renderscript.Matrix3f_Methods|

================================================================================

*android.support.v8.renderscript.Matrix3f_Constructors*
|android.support.v8.renderscript.Matrix3f()|Creates a new identity 3x3 matrix
|android.support.v8.renderscript.Matrix3f(float[])|Creates a new matrix and set

*android.support.v8.renderscript.Matrix3f_Methods*
|android.support.v8.renderscript.Matrix3f.get(int,int)|Returns the value for a 
|android.support.v8.renderscript.Matrix3f.getArray()|Return a reference to the 
|android.support.v8.renderscript.Matrix3f.load(Matrix3f)|Sets the values of the
|android.support.v8.renderscript.Matrix3f.loadIdentity()|Sets the matrix values
|android.support.v8.renderscript.Matrix3f.loadMultiply(Matrix3f,Matrix3f)|Sets 
|android.support.v8.renderscript.Matrix3f.loadRotate(float)|Makes the upper 2x2
|android.support.v8.renderscript.Matrix3f.loadRotate(float,float,float,float)|S
|android.support.v8.renderscript.Matrix3f.loadScale(float,float)|Makes the uppe
|android.support.v8.renderscript.Matrix3f.loadScale(float,float,float)|Sets cur
|android.support.v8.renderscript.Matrix3f.loadTranslate(float,float)|Sets curre
|android.support.v8.renderscript.Matrix3f.multiply(Matrix3f)|Post-multiplies th
|android.support.v8.renderscript.Matrix3f.rotate(float)|Modifies the upper 2x2 
|android.support.v8.renderscript.Matrix3f.rotate(float,float,float,float)|Modif
|android.support.v8.renderscript.Matrix3f.scale(float,float)|Modifies the upper
|android.support.v8.renderscript.Matrix3f.scale(float,float,float)|Modifies the
|android.support.v8.renderscript.Matrix3f.set(int,int,float)|Sets the value for
|android.support.v8.renderscript.Matrix3f.translate(float,float)|Modifies the c
|android.support.v8.renderscript.Matrix3f.transpose()|Sets the current matrix t

*android.support.v8.renderscript.Matrix3f_Description*

Class for exposing the native RenderScript rs_matrix3x3 type back to the 
Android system. 



*android.support.v8.renderscript.Matrix3f()*

public Matrix3f()

Creates a new identity 3x3 matrix 


*android.support.v8.renderscript.Matrix3f(float[])*

public Matrix3f(float[] dataArray)

Creates a new matrix and sets its values from the given parameter 

    dataArray - values to set the matrix to, must be 9 floats long 

*android.support.v8.renderscript.Matrix3f.get(int,int)*

public float get(
  int x,
  int y)

Returns the value for a given row and column 


    x - column of the value to return 
    y - row of the value to return 

    Returns: value in the yth row and xth column 

*android.support.v8.renderscript.Matrix3f.getArray()*

public float[] getArray()

Return a reference to the internal array representing matrix values. Modifying 
this array will also change the matrix 



    Returns: internal array representing the matrix 

*android.support.v8.renderscript.Matrix3f.load(Matrix3f)*

public void load(android.support.v8.renderscript.Matrix3f src)

Sets the values of the matrix to those of the parameter 


    src - matrix to load the values from 

*android.support.v8.renderscript.Matrix3f.loadIdentity()*

public void loadIdentity()

Sets the matrix values to identity 



*android.support.v8.renderscript.Matrix3f.loadMultiply(Matrix3f,Matrix3f)*

public void loadMultiply(
  android.support.v8.renderscript.Matrix3f lhs,
  android.support.v8.renderscript.Matrix3f rhs)

Sets current values to be the result of multiplying two given matrices 


    lhs - left hand side matrix 
    rhs - right hand side matrix 

*android.support.v8.renderscript.Matrix3f.loadRotate(float)*

public void loadRotate(float rot)

Makes the upper 2x2 a rotation matrix of the given angle 


    rot - rotation angle 

*android.support.v8.renderscript.Matrix3f.loadRotate(float,float,float,float)*

public void loadRotate(
  float rot,
  float x,
  float y,
  float z)

Sets current values to be a rotation matrix of certain angle about a given axis 


    rot - angle of rotation 
    x - rotation axis x 
    y - rotation axis y 
    z - rotation axis z 

*android.support.v8.renderscript.Matrix3f.loadScale(float,float)*

public void loadScale(
  float x,
  float y)

Makes the upper 2x2 a scale matrix of given dimensions 


    x - scale component x 
    y - scale component y 

*android.support.v8.renderscript.Matrix3f.loadScale(float,float,float)*

public void loadScale(
  float x,
  float y,
  float z)

Sets current values to be a scale matrix of given dimensions 


    x - scale component x 
    y - scale component y 
    z - scale component z 

*android.support.v8.renderscript.Matrix3f.loadTranslate(float,float)*

public void loadTranslate(
  float x,
  float y)

Sets current values to be a translation matrix of given dimensions 


    x - translation component x 
    y - translation component y 

*android.support.v8.renderscript.Matrix3f.multiply(Matrix3f)*

public void multiply(android.support.v8.renderscript.Matrix3f rhs)

Post-multiplies the current matrix by a given parameter 


    rhs - right hand side to multiply by 

*android.support.v8.renderscript.Matrix3f.rotate(float)*

public void rotate(float rot)

Modifies the upper 2x2 of the current matrix by post-multiplying it with a 
rotation matrix of given angle 


    rot - angle of rotation 

*android.support.v8.renderscript.Matrix3f.rotate(float,float,float,float)*

public void rotate(
  float rot,
  float x,
  float y,
  float z)

Modifies the current matrix by post-multiplying it with a rotation matrix of 
certain angle about a given axis 


    rot - angle of rotation 
    x - rotation axis x 
    y - rotation axis y 
    z - rotation axis z 

*android.support.v8.renderscript.Matrix3f.scale(float,float)*

public void scale(
  float x,
  float y)

Modifies the upper 2x2 of the current matrix by post-multiplying it with a 
scale matrix of given dimensions 


    x - scale component x 
    y - scale component y 

*android.support.v8.renderscript.Matrix3f.scale(float,float,float)*

public void scale(
  float x,
  float y,
  float z)

Modifies the current matrix by post-multiplying it with a scale matrix of given 
dimensions 


    x - scale component x 
    y - scale component y 
    z - scale component z 

*android.support.v8.renderscript.Matrix3f.set(int,int,float)*

public void set(
  int x,
  int y,
  float v)

Sets the value for a given row and column 


    x - column of the value to set 
    y - row of the value to set 

*android.support.v8.renderscript.Matrix3f.translate(float,float)*

public void translate(
  float x,
  float y)

Modifies the current matrix by post-multiplying it with a translation matrix of 
given dimensions 


    x - translation component x 
    y - translation component y 

*android.support.v8.renderscript.Matrix3f.transpose()*

public void transpose()

Sets the current matrix to its transpose 




