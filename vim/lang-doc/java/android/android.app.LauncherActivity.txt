*android.app.LauncherActivity* *LauncherActivity* Displays a list of all activit

public abstract class LauncherActivity
  extends    |android.app.ListActivity|

|android.app.LauncherActivity_Description|
|android.app.LauncherActivity_Fields|
|android.app.LauncherActivity_Constructors|
|android.app.LauncherActivity_Methods|

================================================================================

*android.app.LauncherActivity_Constructors*
|android.app.LauncherActivity()|

*android.app.LauncherActivity_Methods*
|android.app.LauncherActivity.getTargetIntent()|Get the base intent to use when
|android.app.LauncherActivity.intentForPosition(int)|Return the actual Intent f
|android.app.LauncherActivity.itemForPosition(int)|Return theListItemfor a spec
|android.app.LauncherActivity.makeListItems()|Perform the query to determine wh
|android.app.LauncherActivity.onCreate(Bundle)|
|android.app.LauncherActivity.onEvaluateShowIcons()|Whether or not to show icon
|android.app.LauncherActivity.onListItemClick(ListView,View,int,long)|
|android.app.LauncherActivity.onQueryPackageManager(Intent)|Perform query on pa
|android.app.LauncherActivity.onSetContentView()|Override to call setContentVie
|android.app.LauncherActivity.onSortResultList(List<ResolveInfo>)|
|android.app.LauncherActivity.setTitle(CharSequence)|
|android.app.LauncherActivity.setTitle(int)|

*android.app.LauncherActivity_Description*

Displays a list of all activities which can be performed for a given intent. 
Launches when clicked. 



*android.app.LauncherActivity()*

public LauncherActivity()




*android.app.LauncherActivity.getTargetIntent()*

protected |android.content.Intent| getTargetIntent()

Get the base intent to use when running (|android.content.pm.PackageManager|) . 



*android.app.LauncherActivity.intentForPosition(int)*

protected |android.content.Intent| intentForPosition(int position)

Return the actual Intent for a specific position in our 
(|android.widget.ListView|) . 


    position - The item whose Intent to return 

*android.app.LauncherActivity.itemForPosition(int)*

protected |android.app.LauncherActivity.ListItem| itemForPosition(int position)

Return the (|android.app.LauncherActivity.ListItem|) for a specific position in 
our (|android.widget.ListView|) . 


    position - The item to return 

*android.app.LauncherActivity.makeListItems()*

public |java.util.List|<ListItem> makeListItems()

Perform the query to determine which results to show and return a list of them. 



*android.app.LauncherActivity.onCreate(Bundle)*

protected void onCreate(android.os.Bundle icicle)





*android.app.LauncherActivity.onEvaluateShowIcons()*

protected boolean onEvaluateShowIcons()

Whether or not to show icons in the list 



    Returns: true to show icons beside the activity names, false otherwise 

*android.app.LauncherActivity.onListItemClick(ListView,View,int,long)*

protected void onListItemClick(
  android.widget.ListView l,
  android.view.View v,
  int position,
  long id)





*android.app.LauncherActivity.onQueryPackageManager(Intent)*

protected |java.util.List|<ResolveInfo> onQueryPackageManager(android.content.Intent queryIntent)

Perform query on package manager for list items. The default implementation 
queries for activities. 



*android.app.LauncherActivity.onSetContentView()*

protected void onSetContentView()

Override to call setContentView() with your own content view to customize the 
list layout. 



*android.app.LauncherActivity.onSortResultList(List<ResolveInfo>)*

protected void onSortResultList(java.util.List<android.content.pm.ResolveInfo> results)





*android.app.LauncherActivity.setTitle(CharSequence)*

public void setTitle(java.lang.CharSequence title)





*android.app.LauncherActivity.setTitle(int)*

public void setTitle(int titleId)






