*android.net.BaseNetworkStateTracker* *BaseNetworkStateTracker* Interface to con

public abstract class BaseNetworkStateTracker
  extends    |java.lang.Object|
  implements |android.net.NetworkStateTracker|

|android.net.BaseNetworkStateTracker_Description|
|android.net.BaseNetworkStateTracker_Fields|
|android.net.BaseNetworkStateTracker_Constructors|
|android.net.BaseNetworkStateTracker_Methods|

================================================================================

*android.net.BaseNetworkStateTracker_Fields*
|android.content.Context_android.net.BaseNetworkStateTracker.mContext|
|android.net.LinkCapabilities_android.net.BaseNetworkStateTracker.mLinkCapabilities|
|android.net.LinkProperties_android.net.BaseNetworkStateTracker.mLinkProperties|
|android.net.NetworkInfo_android.net.BaseNetworkStateTracker.mNetworkInfo|
|java.lang.String_android.net.BaseNetworkStateTracker.PROP_TCP_BUFFER_UNKNOWN|
|java.lang.String_android.net.BaseNetworkStateTracker.PROP_TCP_BUFFER_WIFI|

*android.net.BaseNetworkStateTracker_Constructors*
|android.net.BaseNetworkStateTracker()|
|android.net.BaseNetworkStateTracker(int)|

*android.net.BaseNetworkStateTracker_Methods*
|android.net.BaseNetworkStateTracker.addStackedLink(LinkProperties)|
|android.net.BaseNetworkStateTracker.captivePortalCheckComplete()|
|android.net.BaseNetworkStateTracker.captivePortalCheckCompleted(boolean)|
|android.net.BaseNetworkStateTracker.defaultRouteSet(boolean)|
|android.net.BaseNetworkStateTracker.dispatchConfigurationChanged()|
|android.net.BaseNetworkStateTracker.dispatchStateChanged()|
|android.net.BaseNetworkStateTracker.getLinkCapabilities()|
|android.net.BaseNetworkStateTracker.getLinkProperties()|
|android.net.BaseNetworkStateTracker.getLinkQualityInfo()|
|android.net.BaseNetworkStateTracker.getNetworkInfo()|
|android.net.BaseNetworkStateTracker.getNetworkInterfaceName()|
|android.net.BaseNetworkStateTracker.getTargetHandler()|
|android.net.BaseNetworkStateTracker.isAvailable()|
|android.net.BaseNetworkStateTracker.isDefaultRouteSet()|
|android.net.BaseNetworkStateTracker.isPrivateDnsRouteSet()|
|android.net.BaseNetworkStateTracker.isTeardownRequested()|
|android.net.BaseNetworkStateTracker.privateDnsRouteSet(boolean)|
|android.net.BaseNetworkStateTracker.removeStackedLink(LinkProperties)|
|android.net.BaseNetworkStateTracker.setDependencyMet(boolean)|
|android.net.BaseNetworkStateTracker.setPolicyDataEnable(boolean)|
|android.net.BaseNetworkStateTracker.setRadio(boolean)|
|android.net.BaseNetworkStateTracker.setTeardownRequested(boolean)|
|android.net.BaseNetworkStateTracker.setUserDataEnable(boolean)|
|android.net.BaseNetworkStateTracker.startMonitoring(Context,Handler)|
|android.net.BaseNetworkStateTracker.startMonitoringInternal()|
|android.net.BaseNetworkStateTracker.startSampling(SamplingDataTracker.SamplingSnapshot)|
|android.net.BaseNetworkStateTracker.stopSampling(SamplingDataTracker.SamplingSnapshot)|
|android.net.BaseNetworkStateTracker.supplyMessenger(Messenger)|

*android.net.BaseNetworkStateTracker_Description*

Interface to control and observe state of a specific network, hiding 
network-specific details from (|android.net.ConnectivityManager|) . Surfaces 
events through the registered (|android.os.Handler|) to enable 
(|android.net.ConnectivityManager|) to respond to state changes over time. 



*android.content.Context_android.net.BaseNetworkStateTracker.mContext*




*android.net.LinkCapabilities_android.net.BaseNetworkStateTracker.mLinkCapabilities*




*android.net.LinkProperties_android.net.BaseNetworkStateTracker.mLinkProperties*




*android.net.NetworkInfo_android.net.BaseNetworkStateTracker.mNetworkInfo*




*java.lang.String_android.net.BaseNetworkStateTracker.PROP_TCP_BUFFER_UNKNOWN*




*java.lang.String_android.net.BaseNetworkStateTracker.PROP_TCP_BUFFER_WIFI*





*android.net.BaseNetworkStateTracker()*

protected BaseNetworkStateTracker()




*android.net.BaseNetworkStateTracker(int)*

public BaseNetworkStateTracker(int networkType)




*android.net.BaseNetworkStateTracker.addStackedLink(LinkProperties)*

public void addStackedLink(android.net.LinkProperties link)





*android.net.BaseNetworkStateTracker.captivePortalCheckComplete()*

public void captivePortalCheckComplete()





*android.net.BaseNetworkStateTracker.captivePortalCheckCompleted(boolean)*

public void captivePortalCheckCompleted(boolean isCaptivePortal)





*android.net.BaseNetworkStateTracker.defaultRouteSet(boolean)*

public void defaultRouteSet(boolean enabled)





*android.net.BaseNetworkStateTracker.dispatchConfigurationChanged()*

protected final void dispatchConfigurationChanged()





*android.net.BaseNetworkStateTracker.dispatchStateChanged()*

protected final void dispatchStateChanged()





*android.net.BaseNetworkStateTracker.getLinkCapabilities()*

public |android.net.LinkCapabilities| getLinkCapabilities()





*android.net.BaseNetworkStateTracker.getLinkProperties()*

public |android.net.LinkProperties| getLinkProperties()





*android.net.BaseNetworkStateTracker.getLinkQualityInfo()*

public |android.net.LinkQualityInfo| getLinkQualityInfo()





*android.net.BaseNetworkStateTracker.getNetworkInfo()*

public |android.net.NetworkInfo| getNetworkInfo()





*android.net.BaseNetworkStateTracker.getNetworkInterfaceName()*

public |java.lang.String| getNetworkInterfaceName()





*android.net.BaseNetworkStateTracker.getTargetHandler()*

protected |android.os.Handler| getTargetHandler()





*android.net.BaseNetworkStateTracker.isAvailable()*

public boolean isAvailable()





*android.net.BaseNetworkStateTracker.isDefaultRouteSet()*

public boolean isDefaultRouteSet()





*android.net.BaseNetworkStateTracker.isPrivateDnsRouteSet()*

public boolean isPrivateDnsRouteSet()





*android.net.BaseNetworkStateTracker.isTeardownRequested()*

public boolean isTeardownRequested()





*android.net.BaseNetworkStateTracker.privateDnsRouteSet(boolean)*

public void privateDnsRouteSet(boolean enabled)





*android.net.BaseNetworkStateTracker.removeStackedLink(LinkProperties)*

public void removeStackedLink(android.net.LinkProperties link)





*android.net.BaseNetworkStateTracker.setDependencyMet(boolean)*

public void setDependencyMet(boolean met)





*android.net.BaseNetworkStateTracker.setPolicyDataEnable(boolean)*

public void setPolicyDataEnable(boolean enabled)





*android.net.BaseNetworkStateTracker.setRadio(boolean)*

public boolean setRadio(boolean turnOn)





*android.net.BaseNetworkStateTracker.setTeardownRequested(boolean)*

public void setTeardownRequested(boolean isRequested)





*android.net.BaseNetworkStateTracker.setUserDataEnable(boolean)*

public void setUserDataEnable(boolean enabled)





*android.net.BaseNetworkStateTracker.startMonitoring(Context,Handler)*

public void startMonitoring(
  android.content.Context context,
  android.os.Handler target)





*android.net.BaseNetworkStateTracker.startMonitoringInternal()*

protected void startMonitoringInternal()





*android.net.BaseNetworkStateTracker.startSampling(SamplingDataTracker.SamplingSnapshot)*

public void startSampling(android.net.SamplingDataTracker.SamplingSnapshot s)





*android.net.BaseNetworkStateTracker.stopSampling(SamplingDataTracker.SamplingSnapshot)*

public void stopSampling(android.net.SamplingDataTracker.SamplingSnapshot s)





*android.net.BaseNetworkStateTracker.supplyMessenger(Messenger)*

public void supplyMessenger(android.os.Messenger messenger)






