*android.content.pm.MacAuthenticatedInputStream* *MacAuthenticatedInputStream* A

public class MacAuthenticatedInputStream
  extends    |java.io.FilterInputStream|

|android.content.pm.MacAuthenticatedInputStream_Description|
|android.content.pm.MacAuthenticatedInputStream_Fields|
|android.content.pm.MacAuthenticatedInputStream_Constructors|
|android.content.pm.MacAuthenticatedInputStream_Methods|

================================================================================

*android.content.pm.MacAuthenticatedInputStream_Constructors*
|android.content.pm.MacAuthenticatedInputStream(InputStream,Mac)|

*android.content.pm.MacAuthenticatedInputStream_Methods*
|android.content.pm.MacAuthenticatedInputStream.isTagEqual(byte[])|
|android.content.pm.MacAuthenticatedInputStream.read()|
|android.content.pm.MacAuthenticatedInputStream.read(byte[],int,int)|

*android.content.pm.MacAuthenticatedInputStream_Description*

An input stream filter that applies a MAC to the data passing through it. At 
the end of the data that should be authenticated, the tag can be calculated. 
After that, the stream should not be used. 



*android.content.pm.MacAuthenticatedInputStream(InputStream,Mac)*

public MacAuthenticatedInputStream(
  java.io.InputStream in,
  javax.crypto.Mac mac)




*android.content.pm.MacAuthenticatedInputStream.isTagEqual(byte[])*

public boolean isTagEqual(byte[] tag)





*android.content.pm.MacAuthenticatedInputStream.read()*

public int read()
  throws |java.io.IOException|
         




*android.content.pm.MacAuthenticatedInputStream.read(byte[],int,int)*

public int read(
  byte[] buffer,
  int offset,
  int count)
  throws |java.io.IOException|
         





