*android.print.PrinterCapabilitiesInfo* *PrinterCapabilitiesInfo* This class rep

public final class PrinterCapabilitiesInfo
  extends    |java.lang.Object|
  implements |android.os.Parcelable|

|android.print.PrinterCapabilitiesInfo_Description|
|android.print.PrinterCapabilitiesInfo_Fields|
|android.print.PrinterCapabilitiesInfo_Constructors|
|android.print.PrinterCapabilitiesInfo_Methods|

================================================================================

*android.print.PrinterCapabilitiesInfo_Fields*
|android.os.Parcelable.Creator<android.print.PrinterCapabilitiesInfo>_android.print.PrinterCapabilitiesInfo.CREATOR|
|int_android.print.PrinterCapabilitiesInfo.DEFAULT_UNDEFINED|

*android.print.PrinterCapabilitiesInfo_Constructors*
|android.print.PrinterCapabilitiesInfo()|
|android.print.PrinterCapabilitiesInfo(PrinterCapabilitiesInfo)|

*android.print.PrinterCapabilitiesInfo_Methods*
|android.print.PrinterCapabilitiesInfo.copyFrom(PrinterCapabilitiesInfo)|
|android.print.PrinterCapabilitiesInfo.describeContents()|
|android.print.PrinterCapabilitiesInfo.equals(Object)|
|android.print.PrinterCapabilitiesInfo.getColorModes()|Gets the bit mask of sup
|android.print.PrinterCapabilitiesInfo.getDefaults()|Gets the default print att
|android.print.PrinterCapabilitiesInfo.getMediaSizes()|Gets the supported media
|android.print.PrinterCapabilitiesInfo.getMinMargins()|Gets the minimal margins
|android.print.PrinterCapabilitiesInfo.getResolutions()|Gets the supported reso
|android.print.PrinterCapabilitiesInfo.hashCode()|
|android.print.PrinterCapabilitiesInfo.toString()|
|android.print.PrinterCapabilitiesInfo.writeToParcel(Parcel,int)|

*android.print.PrinterCapabilitiesInfo_Description*

This class represents the capabilities of a printer. Instances of this class 
are created by a print service to report the capabilities of a printer it 
manages. The capabilities of a printer specify how it can print content. For 
example, what are the media sizes supported by the printer, what are the 
minimal margins of the printer based on its technical design, etc. 



*android.os.Parcelable.Creator<android.print.PrinterCapabilitiesInfo>_android.print.PrinterCapabilitiesInfo.CREATOR*




*int_android.print.PrinterCapabilitiesInfo.DEFAULT_UNDEFINED*

Undefined default value. 



*android.print.PrinterCapabilitiesInfo()*

public PrinterCapabilitiesInfo()




*android.print.PrinterCapabilitiesInfo(PrinterCapabilitiesInfo)*

public PrinterCapabilitiesInfo(android.print.PrinterCapabilitiesInfo prototype)




*android.print.PrinterCapabilitiesInfo.copyFrom(PrinterCapabilitiesInfo)*

public void copyFrom(android.print.PrinterCapabilitiesInfo other)





*android.print.PrinterCapabilitiesInfo.describeContents()*

public int describeContents()





*android.print.PrinterCapabilitiesInfo.equals(Object)*

public boolean equals(java.lang.Object obj)





*android.print.PrinterCapabilitiesInfo.getColorModes()*

public int getColorModes()

Gets the bit mask of supported color modes. 



    Returns: The bit mask of supported color modes. 

*android.print.PrinterCapabilitiesInfo.getDefaults()*

public |android.print.PrintAttributes| getDefaults()

Gets the default print attributes. 



    Returns: The default attributes. 

*android.print.PrinterCapabilitiesInfo.getMediaSizes()*

public |java.util.List|<MediaSize> getMediaSizes()

Gets the supported media sizes. 



    Returns: The media sizes. 

*android.print.PrinterCapabilitiesInfo.getMinMargins()*

public |android.print.PrintAttributes.Margins| getMinMargins()

Gets the minimal margins. These are the minimal margins the printer physically 
supports. 



    Returns: The minimal margins. 

*android.print.PrinterCapabilitiesInfo.getResolutions()*

public |java.util.List|<Resolution> getResolutions()

Gets the supported resolutions. 



    Returns: The resolutions. 

*android.print.PrinterCapabilitiesInfo.hashCode()*

public int hashCode()





*android.print.PrinterCapabilitiesInfo.toString()*

public |java.lang.String| toString()





*android.print.PrinterCapabilitiesInfo.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel parcel,
  int flags)






