*android.media.audiofx.Visualizer* *Visualizer* 

public class Visualizer
  extends    |java.lang.Object|

|android.media.audiofx.Visualizer_Description|
|android.media.audiofx.Visualizer_Fields|
|android.media.audiofx.Visualizer_Constructors|
|android.media.audiofx.Visualizer_Methods|

================================================================================

*android.media.audiofx.Visualizer_Fields*
|int_android.media.audiofx.Visualizer.ALREADY_EXISTS|
|int_android.media.audiofx.Visualizer.ERROR|
|int_android.media.audiofx.Visualizer.ERROR_BAD_VALUE|
|int_android.media.audiofx.Visualizer.ERROR_DEAD_OBJECT|
|int_android.media.audiofx.Visualizer.ERROR_INVALID_OPERATION|
|int_android.media.audiofx.Visualizer.ERROR_NO_INIT|
|int_android.media.audiofx.Visualizer.ERROR_NO_MEMORY|
|int_android.media.audiofx.Visualizer.MEASUREMENT_MODE_NONE|
|int_android.media.audiofx.Visualizer.MEASUREMENT_MODE_PEAK_RMS|
|int_android.media.audiofx.Visualizer.SCALING_MODE_AS_PLAYED|
|int_android.media.audiofx.Visualizer.SCALING_MODE_NORMALIZED|
|int_android.media.audiofx.Visualizer.STATE_ENABLED|
|int_android.media.audiofx.Visualizer.STATE_INITIALIZED|
|int_android.media.audiofx.Visualizer.STATE_UNINITIALIZED|
|int_android.media.audiofx.Visualizer.SUCCESS|

*android.media.audiofx.Visualizer_Constructors*
|android.media.audiofx.Visualizer(int)|

*android.media.audiofx.Visualizer_Methods*
|android.media.audiofx.Visualizer.finalize()|
|android.media.audiofx.Visualizer.getCaptureSize()|
|android.media.audiofx.Visualizer.getCaptureSizeRange()|
|android.media.audiofx.Visualizer.getEnabled()|
|android.media.audiofx.Visualizer.getFft(byte[])|
|android.media.audiofx.Visualizer.getMaxCaptureRate()|
|android.media.audiofx.Visualizer.getMeasurementMode()|
|android.media.audiofx.Visualizer.getMeasurementPeakRms(Visualizer.MeasurementPeakRms)|
|android.media.audiofx.Visualizer.getSamplingRate()|
|android.media.audiofx.Visualizer.getScalingMode()|
|android.media.audiofx.Visualizer.getWaveForm(byte[])|
|android.media.audiofx.Visualizer.release()|
|android.media.audiofx.Visualizer.setCaptureSize(int)|
|android.media.audiofx.Visualizer.setDataCaptureListener(Visualizer.OnDataCaptureListener,int,boolean,boolean)|
|android.media.audiofx.Visualizer.setEnabled(boolean)|
|android.media.audiofx.Visualizer.setMeasurementMode(int)|
|android.media.audiofx.Visualizer.setScalingMode(int)|

*android.media.audiofx.Visualizer_Description*





*int_android.media.audiofx.Visualizer.ALREADY_EXISTS*




*int_android.media.audiofx.Visualizer.ERROR*




*int_android.media.audiofx.Visualizer.ERROR_BAD_VALUE*




*int_android.media.audiofx.Visualizer.ERROR_DEAD_OBJECT*




*int_android.media.audiofx.Visualizer.ERROR_INVALID_OPERATION*




*int_android.media.audiofx.Visualizer.ERROR_NO_INIT*




*int_android.media.audiofx.Visualizer.ERROR_NO_MEMORY*




*int_android.media.audiofx.Visualizer.MEASUREMENT_MODE_NONE*




*int_android.media.audiofx.Visualizer.MEASUREMENT_MODE_PEAK_RMS*




*int_android.media.audiofx.Visualizer.SCALING_MODE_AS_PLAYED*




*int_android.media.audiofx.Visualizer.SCALING_MODE_NORMALIZED*




*int_android.media.audiofx.Visualizer.STATE_ENABLED*




*int_android.media.audiofx.Visualizer.STATE_INITIALIZED*




*int_android.media.audiofx.Visualizer.STATE_UNINITIALIZED*




*int_android.media.audiofx.Visualizer.SUCCESS*





*android.media.audiofx.Visualizer(int)*

public Visualizer(int audioSession)
  throws |java.lang.RuntimeException|
         |java.lang.UnsupportedOperationException|
         



*android.media.audiofx.Visualizer.finalize()*

protected void finalize()





*android.media.audiofx.Visualizer.getCaptureSize()*

public int getCaptureSize()
  throws |java.lang.IllegalStateException|
         




*android.media.audiofx.Visualizer.getCaptureSizeRange()*

public static native int[] getCaptureSizeRange()





*android.media.audiofx.Visualizer.getEnabled()*

public boolean getEnabled()





*android.media.audiofx.Visualizer.getFft(byte[])*

public int getFft(byte[] fft)
  throws |java.lang.IllegalStateException|
         




*android.media.audiofx.Visualizer.getMaxCaptureRate()*

public static native int getMaxCaptureRate()





*android.media.audiofx.Visualizer.getMeasurementMode()*

public int getMeasurementMode()
  throws |java.lang.IllegalStateException|
         




*android.media.audiofx.Visualizer.getMeasurementPeakRms(Visualizer.MeasurementPeakRms)*

public int getMeasurementPeakRms(android.media.audiofx.Visualizer.MeasurementPeakRms measurement)





*android.media.audiofx.Visualizer.getSamplingRate()*

public int getSamplingRate()
  throws |java.lang.IllegalStateException|
         




*android.media.audiofx.Visualizer.getScalingMode()*

public int getScalingMode()
  throws |java.lang.IllegalStateException|
         




*android.media.audiofx.Visualizer.getWaveForm(byte[])*

public int getWaveForm(byte[] waveform)
  throws |java.lang.IllegalStateException|
         




*android.media.audiofx.Visualizer.release()*

public void release()





*android.media.audiofx.Visualizer.setCaptureSize(int)*

public int setCaptureSize(int size)
  throws |java.lang.IllegalStateException|
         




*android.media.audiofx.Visualizer.setDataCaptureListener(Visualizer.OnDataCaptureListener,int,boolean,boolean)*

public int setDataCaptureListener(
  android.media.audiofx.Visualizer.OnDataCaptureListener listener,
  int rate,
  boolean waveform,
  boolean fft)





*android.media.audiofx.Visualizer.setEnabled(boolean)*

public int setEnabled(boolean enabled)
  throws |java.lang.IllegalStateException|
         




*android.media.audiofx.Visualizer.setMeasurementMode(int)*

public int setMeasurementMode(int mode)
  throws |java.lang.IllegalStateException|
         




*android.media.audiofx.Visualizer.setScalingMode(int)*

public int setScalingMode(int mode)
  throws |java.lang.IllegalStateException|
         





