*android.view.accessibility.AccessibilityRecord* *AccessibilityRecord* Represent

public class AccessibilityRecord
  extends    |java.lang.Object|

|android.view.accessibility.AccessibilityRecord_Description|
|android.view.accessibility.AccessibilityRecord_Fields|
|android.view.accessibility.AccessibilityRecord_Constructors|
|android.view.accessibility.AccessibilityRecord_Methods|

================================================================================

*android.view.accessibility.AccessibilityRecord_Methods*
|android.view.accessibility.AccessibilityRecord.getAddedCount()|Gets the number
|android.view.accessibility.AccessibilityRecord.getBeforeText()|Sets the text b
|android.view.accessibility.AccessibilityRecord.getClassName()|Gets the class n
|android.view.accessibility.AccessibilityRecord.getContentDescription()|Gets th
|android.view.accessibility.AccessibilityRecord.getCurrentItemIndex()|Gets the 
|android.view.accessibility.AccessibilityRecord.getFromIndex()|Gets the index o
|android.view.accessibility.AccessibilityRecord.getItemCount()|Gets the number 
|android.view.accessibility.AccessibilityRecord.getMaxScrollX()|Gets the max sc
|android.view.accessibility.AccessibilityRecord.getMaxScrollY()|Gets the max sc
|android.view.accessibility.AccessibilityRecord.getParcelableData()|Gets thePar
|android.view.accessibility.AccessibilityRecord.getRemovedCount()|Gets the numb
|android.view.accessibility.AccessibilityRecord.getScrollX()|Gets the scroll of
|android.view.accessibility.AccessibilityRecord.getScrollY()|Gets the scroll of
|android.view.accessibility.AccessibilityRecord.getSource()|Gets theAccessibili
|android.view.accessibility.AccessibilityRecord.getSourceNodeId()|Gets the id o
|android.view.accessibility.AccessibilityRecord.getText()|Gets the text of the 
|android.view.accessibility.AccessibilityRecord.getToIndex()|Gets the index of 
|android.view.accessibility.AccessibilityRecord.getWindowId()|Gets the id of th
|android.view.accessibility.AccessibilityRecord.isChecked()|Gets if the source 
|android.view.accessibility.AccessibilityRecord.isEnabled()|Gets if the source 
|android.view.accessibility.AccessibilityRecord.isFullScreen()|Gets if the sour
|android.view.accessibility.AccessibilityRecord.isImportantForAccessibility()|G
|android.view.accessibility.AccessibilityRecord.isPassword()|Gets if the source
|android.view.accessibility.AccessibilityRecord.isScrollable()|Gets if the sour
|android.view.accessibility.AccessibilityRecord.obtain()|Returns a cached insta
|android.view.accessibility.AccessibilityRecord.obtain(AccessibilityRecord)|Ret
|android.view.accessibility.AccessibilityRecord.recycle()|Return an instance ba
|android.view.accessibility.AccessibilityRecord.setAddedCount(int)|Sets the num
|android.view.accessibility.AccessibilityRecord.setBeforeText(CharSequence)|Set
|android.view.accessibility.AccessibilityRecord.setChecked(boolean)|Sets if the
|android.view.accessibility.AccessibilityRecord.setClassName(CharSequence)|Sets
|android.view.accessibility.AccessibilityRecord.setConnectionId(int)|Sets the u
|android.view.accessibility.AccessibilityRecord.setContentDescription(CharSequence)|
|android.view.accessibility.AccessibilityRecord.setCurrentItemIndex(int)|Sets t
|android.view.accessibility.AccessibilityRecord.setEnabled(boolean)|Sets if the
|android.view.accessibility.AccessibilityRecord.setFromIndex(int)|Sets the inde
|android.view.accessibility.AccessibilityRecord.setFullScreen(boolean)|Sets if 
|android.view.accessibility.AccessibilityRecord.setItemCount(int)|Sets the numb
|android.view.accessibility.AccessibilityRecord.setMaxScrollX(int)|Sets the max
|android.view.accessibility.AccessibilityRecord.setMaxScrollY(int)|Sets the max
|android.view.accessibility.AccessibilityRecord.setParcelableData(Parcelable)|S
|android.view.accessibility.AccessibilityRecord.setPassword(boolean)|Sets if th
|android.view.accessibility.AccessibilityRecord.setRemovedCount(int)|Sets the n
|android.view.accessibility.AccessibilityRecord.setScrollable(boolean)|Sets if 
|android.view.accessibility.AccessibilityRecord.setScrollX(int)|Sets the scroll
|android.view.accessibility.AccessibilityRecord.setScrollY(int)|Sets the scroll
|android.view.accessibility.AccessibilityRecord.setSealed(boolean)|Sets if this
|android.view.accessibility.AccessibilityRecord.setSource(View)|Sets the event 
|android.view.accessibility.AccessibilityRecord.setSource(View,int)|Sets the so
|android.view.accessibility.AccessibilityRecord.setToIndex(int)|Sets the index 
|android.view.accessibility.AccessibilityRecord.setWindowId(int)|Sets the windo
|android.view.accessibility.AccessibilityRecord.toString()|

*android.view.accessibility.AccessibilityRecord_Description*

Represents a record in an (|android.view.accessibility.AccessibilityEvent|) and 
contains information about state change of its source (|android.view.View|) . 
When a view fires an accessibility event it requests from its parent to 
dispatch the constructed event. The parent may optionally append a record for 
itself for providing more context to 
(|android.accessibilityservice.AccessibilityService|) s. Hence, accessibility 
services can facilitate additional accessibility records to enhance feedback. 

Once the accessibility event containing a record is dispatched the record is 
made immutable and calling a state mutation method generates an error. 

Note: Not all properties are applicable to all accessibility event types. For 
detailed information please refer to 
(|android.view.accessibility.AccessibilityEvent|) . 

Developer Guides For more information about creating and processing 
AccessibilityRecords, read the <a 
href="guide/topics/ui/accessibility/index.html">Accessibility developer guide. 



*android.view.accessibility.AccessibilityRecord.getAddedCount()*

public int getAddedCount()

Gets the number of added characters. 



    Returns: The number of added characters. 

*android.view.accessibility.AccessibilityRecord.getBeforeText()*

public |java.lang.CharSequence| getBeforeText()

Sets the text before a change. 



    Returns: The text before the change. 

*android.view.accessibility.AccessibilityRecord.getClassName()*

public |java.lang.CharSequence| getClassName()

Gets the class name of the source. 



    Returns: The class name. 

*android.view.accessibility.AccessibilityRecord.getContentDescription()*

public |java.lang.CharSequence| getContentDescription()

Gets the description of the source. 



    Returns: The description. 

*android.view.accessibility.AccessibilityRecord.getCurrentItemIndex()*

public int getCurrentItemIndex()

Gets the index of the source in the list of items the can be visited. 



    Returns: The current item index. 

*android.view.accessibility.AccessibilityRecord.getFromIndex()*

public int getFromIndex()

Gets the index of the first character of the changed sequence, or the beginning 
of a text selection or the index of the first visible item when scrolling. 



    Returns: The index of the first character or selection start or the first visible item. 

*android.view.accessibility.AccessibilityRecord.getItemCount()*

public int getItemCount()

Gets the number of items that can be visited. 



    Returns: The number of items. 

*android.view.accessibility.AccessibilityRecord.getMaxScrollX()*

public int getMaxScrollX()

Gets the max scroll offset of the source left edge in pixels. 



    Returns: The max scroll. 

*android.view.accessibility.AccessibilityRecord.getMaxScrollY()*

public int getMaxScrollY()

Gets the max scroll offset of the source top edge in pixels. 



    Returns: The max scroll. 

*android.view.accessibility.AccessibilityRecord.getParcelableData()*

public |android.os.Parcelable| getParcelableData()

Gets the (|android.os.Parcelable|) data. 



    Returns: The parcelable data. 

*android.view.accessibility.AccessibilityRecord.getRemovedCount()*

public int getRemovedCount()

Gets the number of removed characters. 



    Returns: The number of removed characters. 

*android.view.accessibility.AccessibilityRecord.getScrollX()*

public int getScrollX()

Gets the scroll offset of the source left edge in pixels. 



    Returns: 

*android.view.accessibility.AccessibilityRecord.getScrollY()*

public int getScrollY()

Gets the scroll offset of the source top edge in pixels. 



    Returns: 

*android.view.accessibility.AccessibilityRecord.getSource()*

public |android.view.accessibility.AccessibilityNodeInfo| getSource()

Gets the (|android.view.accessibility.AccessibilityNodeInfo|) of the event 
source. 

Note: It is a client responsibility to recycle the received info by calling 
AccessibilityNodeInfo#recycle()(|android.view.accessibility.AccessibilityNodeInfo|)
to avoid creating of multiple instances. 



    Returns: The info of the source. 

*android.view.accessibility.AccessibilityRecord.getSourceNodeId()*

public long getSourceNodeId()

Gets the id of the source node. 



    Returns: 

*android.view.accessibility.AccessibilityRecord.getText()*

public |java.util.List|<CharSequence> getText()

Gets the text of the event. The index in the list represents the priority of 
the text. Specifically, the lower the index the higher the priority. 



    Returns: 

*android.view.accessibility.AccessibilityRecord.getToIndex()*

public int getToIndex()

Gets the index of text selection end or the index of the last visible item when 
scrolling. 



    Returns: The index of selection end or last item index. 

*android.view.accessibility.AccessibilityRecord.getWindowId()*

public int getWindowId()

Gets the id of the window from which the event comes from. 



    Returns: The window id. 

*android.view.accessibility.AccessibilityRecord.isChecked()*

public boolean isChecked()

Gets if the source is checked. 



    Returns: True if the view is checked, false otherwise. 

*android.view.accessibility.AccessibilityRecord.isEnabled()*

public boolean isEnabled()

Gets if the source is enabled. 



    Returns: True if the view is enabled, false otherwise. 

*android.view.accessibility.AccessibilityRecord.isFullScreen()*

public boolean isFullScreen()

Gets if the source is taking the entire screen. 



    Returns: True if the source is full screen, false otherwise. 

*android.view.accessibility.AccessibilityRecord.isImportantForAccessibility()*

public boolean isImportantForAccessibility()

Gets if the source is important for accessibility. 

Note: Used only internally to determine whether to deliver the event to a given 
accessibility service since some services may want to regard all views for 
accessibility while others may want to regard only the important views for 
accessibility. 



    Returns: True if the source is important for accessibility, false otherwise. 

*android.view.accessibility.AccessibilityRecord.isPassword()*

public boolean isPassword()

Gets if the source is a password field. 



    Returns: True if the view is a password field, false otherwise. 

*android.view.accessibility.AccessibilityRecord.isScrollable()*

public boolean isScrollable()

Gets if the source is scrollable. 



    Returns: True if the source is scrollable, false otherwise. 

*android.view.accessibility.AccessibilityRecord.obtain()*

public static |android.view.accessibility.AccessibilityRecord| obtain()

Returns a cached instance if such is available or a new one is instantiated. 



    Returns: 

*android.view.accessibility.AccessibilityRecord.obtain(AccessibilityRecord)*

public static |android.view.accessibility.AccessibilityRecord| obtain(android.view.accessibility.AccessibilityRecord record)

Returns a cached instance if such is available or a new one is instantiated. 
The instance is initialized with data from the given record. 



    Returns: 

*android.view.accessibility.AccessibilityRecord.recycle()*

public void recycle()

Return an instance back to be reused. 

Note: You must not touch the object after calling this function. 



*android.view.accessibility.AccessibilityRecord.setAddedCount(int)*

public void setAddedCount(int addedCount)

Sets the number of added characters. 


    addedCount - The number of added characters. 

*android.view.accessibility.AccessibilityRecord.setBeforeText(CharSequence)*

public void setBeforeText(java.lang.CharSequence beforeText)

Sets the text before a change. 


    beforeText - The text before the change. 

*android.view.accessibility.AccessibilityRecord.setChecked(boolean)*

public void setChecked(boolean isChecked)

Sets if the source is checked. 


    isChecked - True if the view is checked, false otherwise. 

*android.view.accessibility.AccessibilityRecord.setClassName(CharSequence)*

public void setClassName(java.lang.CharSequence className)

Sets the class name of the source. 


    className - The lass name. 

*android.view.accessibility.AccessibilityRecord.setConnectionId(int)*

public void setConnectionId(int connectionId)

Sets the unique id of the IAccessibilityServiceConnection over which this 
instance can send requests to the system. 


    connectionId - The connection id. 

*android.view.accessibility.AccessibilityRecord.setContentDescription(CharSequence)*

public void setContentDescription(java.lang.CharSequence contentDescription)

Sets the description of the source. 


    contentDescription - The description. 

*android.view.accessibility.AccessibilityRecord.setCurrentItemIndex(int)*

public void setCurrentItemIndex(int currentItemIndex)

Sets the index of the source in the list of items that can be visited. 


    currentItemIndex - The current item index. 

*android.view.accessibility.AccessibilityRecord.setEnabled(boolean)*

public void setEnabled(boolean isEnabled)

Sets if the source is enabled. 


    isEnabled - True if the view is enabled, false otherwise. 

*android.view.accessibility.AccessibilityRecord.setFromIndex(int)*

public void setFromIndex(int fromIndex)

Sets the index of the first character of the changed sequence or the beginning 
of a text selection or the index of the first visible item when scrolling. 


    fromIndex - The index of the first character or selection start or the first visible item. 

*android.view.accessibility.AccessibilityRecord.setFullScreen(boolean)*

public void setFullScreen(boolean isFullScreen)

Sets if the source is taking the entire screen. 


    isFullScreen - True if the source is full screen, false otherwise. 

*android.view.accessibility.AccessibilityRecord.setItemCount(int)*

public void setItemCount(int itemCount)

Sets the number of items that can be visited. 


    itemCount - The number of items. 

*android.view.accessibility.AccessibilityRecord.setMaxScrollX(int)*

public void setMaxScrollX(int maxScrollX)

Sets the max scroll offset of the source left edge in pixels. 


    maxScrollX - The max scroll. 

*android.view.accessibility.AccessibilityRecord.setMaxScrollY(int)*

public void setMaxScrollY(int maxScrollY)

Sets the max scroll offset of the source top edge in pixels. 


    maxScrollY - The max scroll. 

*android.view.accessibility.AccessibilityRecord.setParcelableData(Parcelable)*

public void setParcelableData(android.os.Parcelable parcelableData)

Sets the (|android.os.Parcelable|) data of the event. 


    parcelableData - The parcelable data. 

*android.view.accessibility.AccessibilityRecord.setPassword(boolean)*

public void setPassword(boolean isPassword)

Sets if the source is a password field. 


    isPassword - True if the view is a password field, false otherwise. 

*android.view.accessibility.AccessibilityRecord.setRemovedCount(int)*

public void setRemovedCount(int removedCount)

Sets the number of removed characters. 


    removedCount - The number of removed characters. 

*android.view.accessibility.AccessibilityRecord.setScrollable(boolean)*

public void setScrollable(boolean scrollable)

Sets if the source is scrollable. 


    scrollable - True if the source is scrollable, false otherwise. 

*android.view.accessibility.AccessibilityRecord.setScrollX(int)*

public void setScrollX(int scrollX)

Sets the scroll offset of the source left edge in pixels. 


    scrollX - The scroll. 

*android.view.accessibility.AccessibilityRecord.setScrollY(int)*

public void setScrollY(int scrollY)

Sets the scroll offset of the source top edge in pixels. 


    scrollY - The scroll. 

*android.view.accessibility.AccessibilityRecord.setSealed(boolean)*

public void setSealed(boolean sealed)

Sets if this instance is sealed. 


    sealed - Whether is sealed. 

*android.view.accessibility.AccessibilityRecord.setSource(View)*

public void setSource(android.view.View source)

Sets the event source. 


    source - The source. 

*android.view.accessibility.AccessibilityRecord.setSource(View,int)*

public void setSource(
  android.view.View root,
  int virtualDescendantId)

Sets the source to be a virtual descendant of the given root. If 
virtualDescendantId equals to (|android.view.View|) the root is set as the 
source. 

A virtual descendant is an imaginary View that is reported as a part of the 
view hierarchy for accessibility purposes. This enables custom views that draw 
complex content to report them selves as a tree of virtual views, thus 
conveying their logical structure. 


    root - The root of the virtual subtree. 
    virtualDescendantId - The id of the virtual descendant. 

*android.view.accessibility.AccessibilityRecord.setToIndex(int)*

public void setToIndex(int toIndex)

Sets the index of text selection end or the index of the last visible item when 
scrolling. 


    toIndex - The index of selection end or last item index. 

*android.view.accessibility.AccessibilityRecord.setWindowId(int)*

public void setWindowId(int windowId)

Sets the window id. 


    windowId - The window id. 

*android.view.accessibility.AccessibilityRecord.toString()*

public |java.lang.String| toString()






