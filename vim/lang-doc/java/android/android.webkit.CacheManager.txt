*android.webkit.CacheManager* *CacheManager* Manages the HTTP cache used by an a

public final class CacheManager
  extends    |java.lang.Object|

|android.webkit.CacheManager_Description|
|android.webkit.CacheManager_Fields|
|android.webkit.CacheManager_Constructors|
|android.webkit.CacheManager_Methods|

================================================================================

*android.webkit.CacheManager_Constructors*
|android.webkit.CacheManager()|

*android.webkit.CacheManager_Methods*
|android.webkit.CacheManager.cacheDisabled()|Gets whether the HTTP cache is dis
|android.webkit.CacheManager.endCacheTransaction()|Ends the innermost cache tra
|android.webkit.CacheManager.getCacheFile(String,Map<String,String>)|Gets the c
|android.webkit.CacheManager.getCacheFileBaseDir()|Gets the base directory in w
|android.webkit.CacheManager.saveCacheFile(String,CacheManager.CacheResult)|Add
|android.webkit.CacheManager.startCacheTransaction()|Starts a cache transaction

*android.webkit.CacheManager_Description*

Manages the HTTP cache used by an application's (|android.webkit.WebView|) 
instances. 


  Deprecated: Access to the HTTP cache will be removed in a future release.

*android.webkit.CacheManager()*

public CacheManager()




*android.webkit.CacheManager.cacheDisabled()*

public static boolean cacheDisabled()

Gets whether the HTTP cache is disabled. 

    Deprecated: This method no longer has any effect and always returns false.


    Returns: true if the HTTP cache is disabled 

*android.webkit.CacheManager.endCacheTransaction()*

public static boolean endCacheTransaction()

Ends the innermost cache transaction and returns whether this was the only 
running transaction. 

    Deprecated: This method no longer has any effect and always returns false.


    Returns: true if this was the only running transaction 

*android.webkit.CacheManager.getCacheFile(String,Map<String,String>)*

public static |android.webkit.CacheManager.CacheResult| getCacheFile(
  java.lang.String url,
  java.util.Map<java.lang.String, java.lang.String> headers)

Gets the cache entry for the specified URL, or null if none is found. If a 
non-null value is provided for the HTTP headers map, and the cache entry needs 
validation, appropriate headers will be added to the map. The input stream of 
the CacheEntry object should be closed by the caller when access to the 
underlying file is no longer required. 

    Deprecated: This method no longer has any effect and always returns null.

    url - the URL for which a cache entry is requested 
    headers - a map from HTTP header name to value, to be populated for the returned cache 
       entry 

    Returns: the cache entry for the specified URL 

*android.webkit.CacheManager.getCacheFileBaseDir()*

public static |java.io.File| getCacheFileBaseDir()

Gets the base directory in which the files used to store the contents of cache 
entries are placed. See 
CacheManager.CacheResult.getLocalPath()(|android.webkit.CacheManager.CacheResult|)
. 

    Deprecated: This method no longer has any effect and always returns null.


    Returns: the base directory of the cache 

*android.webkit.CacheManager.saveCacheFile(String,CacheManager.CacheResult)*

public static void saveCacheFile(
  java.lang.String url,
  android.webkit.CacheManager.CacheResult cacheResult)

Adds a cache entry to the HTTP cache for the specicifed URL. Also closes the 
cache entry's output stream. 

    Deprecated: Access to the HTTP cache will be removed in a future release.

    url - the URL for which the cache entry should be added 
    cacheResult - the cache entry to add 

*android.webkit.CacheManager.startCacheTransaction()*

public static boolean startCacheTransaction()

Starts a cache transaction. Returns true if this is the only running 
transaction. Otherwise, this transaction is nested inside currently running 
transactions and false is returned. 

    Deprecated: This method no longer has any effect and always returns false.


    Returns: true if this is the only running transaction 


