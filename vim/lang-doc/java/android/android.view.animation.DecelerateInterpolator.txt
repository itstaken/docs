*android.view.animation.DecelerateInterpolator* *DecelerateInterpolator* An inte

public class DecelerateInterpolator
  extends    |java.lang.Object|
  implements |android.view.animation.Interpolator|

|android.view.animation.DecelerateInterpolator_Description|
|android.view.animation.DecelerateInterpolator_Fields|
|android.view.animation.DecelerateInterpolator_Constructors|
|android.view.animation.DecelerateInterpolator_Methods|

================================================================================

*android.view.animation.DecelerateInterpolator_Constructors*
|android.view.animation.DecelerateInterpolator()|
|android.view.animation.DecelerateInterpolator(Context,AttributeSet)|
|android.view.animation.DecelerateInterpolator(float)|Constructor

*android.view.animation.DecelerateInterpolator_Methods*
|android.view.animation.DecelerateInterpolator.getInterpolation(float)|

*android.view.animation.DecelerateInterpolator_Description*

An interpolator where the rate of change starts out quickly and and then 
decelerates. 



*android.view.animation.DecelerateInterpolator()*

public DecelerateInterpolator()




*android.view.animation.DecelerateInterpolator(Context,AttributeSet)*

public DecelerateInterpolator(
  android.content.Context context,
  android.util.AttributeSet attrs)




*android.view.animation.DecelerateInterpolator(float)*

public DecelerateInterpolator(float factor)

Constructor 

    factor - Degree to which the animation should be eased. Setting factor to 1.0f produces 
       an upside-down y=x^2 parabola. Increasing factor above 1.0f makes 
       exaggerates the ease-out effect (i.e., it starts even faster and ends 
       evens slower) 

*android.view.animation.DecelerateInterpolator.getInterpolation(float)*

public float getInterpolation(float input)






