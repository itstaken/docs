*android.graphics.Bitmap* *Bitmap* 

public final class Bitmap
  extends    |java.lang.Object|
  implements |android.os.Parcelable|

|android.graphics.Bitmap_Description|
|android.graphics.Bitmap_Fields|
|android.graphics.Bitmap_Constructors|
|android.graphics.Bitmap_Methods|

================================================================================

*android.graphics.Bitmap_Fields*
|android.os.Parcelable.Creator<android.graphics.Bitmap>_android.graphics.Bitmap.CREATOR|
|int_android.graphics.Bitmap.DENSITY_NONE|

*android.graphics.Bitmap_Methods*
|android.graphics.Bitmap.compress(Bitmap.CompressFormat,int,OutputStream)|
|android.graphics.Bitmap.copy(Bitmap.Config,boolean)|
|android.graphics.Bitmap.copyPixelsFromBuffer(Buffer)|
|android.graphics.Bitmap.copyPixelsToBuffer(Buffer)|
|android.graphics.Bitmap.createBitmap(Bitmap)|
|android.graphics.Bitmap.createBitmap(Bitmap,int,int,int,int)|
|android.graphics.Bitmap.createBitmap(Bitmap,int,int,int,int,Matrix,boolean)|
|android.graphics.Bitmap.createBitmap(DisplayMetrics,int[],int,int,Bitmap.Config)|
|android.graphics.Bitmap.createBitmap(DisplayMetrics,int[],int,int,int,int,Bitmap.Config)|
|android.graphics.Bitmap.createBitmap(DisplayMetrics,int,int,Bitmap.Config)|
|android.graphics.Bitmap.createBitmap(int[],int,int,Bitmap.Config)|
|android.graphics.Bitmap.createBitmap(int[],int,int,int,int,Bitmap.Config)|
|android.graphics.Bitmap.createBitmap(int,int,Bitmap.Config)|
|android.graphics.Bitmap.createScaledBitmap(Bitmap,int,int,boolean)|
|android.graphics.Bitmap.describeContents()|
|android.graphics.Bitmap.eraseColor(int)|
|android.graphics.Bitmap.extractAlpha()|
|android.graphics.Bitmap.extractAlpha(Paint,int[])|
|android.graphics.Bitmap.getAllocationByteCount()|
|android.graphics.Bitmap.getByteCount()|
|android.graphics.Bitmap.getConfig()|
|android.graphics.Bitmap.getDensity()|
|android.graphics.Bitmap.getGenerationId()|
|android.graphics.Bitmap.getHeight()|
|android.graphics.Bitmap.getNinePatchChunk()|
|android.graphics.Bitmap.getPixel(int,int)|
|android.graphics.Bitmap.getPixels(int[],int,int,int,int,int,int)|
|android.graphics.Bitmap.getRowBytes()|
|android.graphics.Bitmap.getScaledHeight(Canvas)|
|android.graphics.Bitmap.getScaledHeight(DisplayMetrics)|
|android.graphics.Bitmap.getScaledHeight(int)|
|android.graphics.Bitmap.getScaledWidth(Canvas)|
|android.graphics.Bitmap.getScaledWidth(DisplayMetrics)|
|android.graphics.Bitmap.getScaledWidth(int)|
|android.graphics.Bitmap.getWidth()|
|android.graphics.Bitmap.hasAlpha()|
|android.graphics.Bitmap.hasMipMap()|
|android.graphics.Bitmap.isMutable()|
|android.graphics.Bitmap.isPremultiplied()|
|android.graphics.Bitmap.isRecycled()|
|android.graphics.Bitmap.prepareToDraw()|
|android.graphics.Bitmap.reconfigure(int,int,Bitmap.Config)|
|android.graphics.Bitmap.recycle()|
|android.graphics.Bitmap.sameAs(Bitmap)|
|android.graphics.Bitmap.setConfig(Bitmap.Config)|
|android.graphics.Bitmap.setDensity(int)|
|android.graphics.Bitmap.setHasAlpha(boolean)|
|android.graphics.Bitmap.setHasMipMap(boolean)|
|android.graphics.Bitmap.setHeight(int)|
|android.graphics.Bitmap.setPixel(int,int,int)|
|android.graphics.Bitmap.setPixels(int[],int,int,int,int,int,int)|
|android.graphics.Bitmap.setPremultiplied(boolean)|
|android.graphics.Bitmap.setWidth(int)|
|android.graphics.Bitmap.writeToParcel(Parcel,int)|

*android.graphics.Bitmap_Description*





*android.os.Parcelable.Creator<android.graphics.Bitmap>_android.graphics.Bitmap.CREATOR*




*int_android.graphics.Bitmap.DENSITY_NONE*





*android.graphics.Bitmap.compress(Bitmap.CompressFormat,int,OutputStream)*

public boolean compress(
  android.graphics.Bitmap.CompressFormat format,
  int quality,
  java.io.OutputStream stream)





*android.graphics.Bitmap.copy(Bitmap.Config,boolean)*

public |android.graphics.Bitmap| copy(
  android.graphics.Bitmap.Config config,
  boolean isMutable)





*android.graphics.Bitmap.copyPixelsFromBuffer(Buffer)*

public void copyPixelsFromBuffer(java.nio.Buffer src)





*android.graphics.Bitmap.copyPixelsToBuffer(Buffer)*

public void copyPixelsToBuffer(java.nio.Buffer dst)





*android.graphics.Bitmap.createBitmap(Bitmap)*

public static |android.graphics.Bitmap| createBitmap(android.graphics.Bitmap src)





*android.graphics.Bitmap.createBitmap(Bitmap,int,int,int,int)*

public static |android.graphics.Bitmap| createBitmap(
  android.graphics.Bitmap source,
  int x,
  int y,
  int width,
  int height)





*android.graphics.Bitmap.createBitmap(Bitmap,int,int,int,int,Matrix,boolean)*

public static |android.graphics.Bitmap| createBitmap(
  android.graphics.Bitmap source,
  int x,
  int y,
  int width,
  int height,
  android.graphics.Matrix m,
  boolean filter)





*android.graphics.Bitmap.createBitmap(DisplayMetrics,int[],int,int,Bitmap.Config)*

public static |android.graphics.Bitmap| createBitmap(
  android.util.DisplayMetrics display,
  int[] colors,
  int width,
  int height,
  android.graphics.Bitmap.Config config)





*android.graphics.Bitmap.createBitmap(DisplayMetrics,int[],int,int,int,int,Bitmap.Config)*

public static |android.graphics.Bitmap| createBitmap(
  android.util.DisplayMetrics display,
  int[] colors,
  int offset,
  int stride,
  int width,
  int height,
  android.graphics.Bitmap.Config config)





*android.graphics.Bitmap.createBitmap(DisplayMetrics,int,int,Bitmap.Config)*

public static |android.graphics.Bitmap| createBitmap(
  android.util.DisplayMetrics display,
  int width,
  int height,
  android.graphics.Bitmap.Config config)





*android.graphics.Bitmap.createBitmap(int[],int,int,Bitmap.Config)*

public static |android.graphics.Bitmap| createBitmap(
  int[] colors,
  int width,
  int height,
  android.graphics.Bitmap.Config config)





*android.graphics.Bitmap.createBitmap(int[],int,int,int,int,Bitmap.Config)*

public static |android.graphics.Bitmap| createBitmap(
  int[] colors,
  int offset,
  int stride,
  int width,
  int height,
  android.graphics.Bitmap.Config config)





*android.graphics.Bitmap.createBitmap(int,int,Bitmap.Config)*

public static |android.graphics.Bitmap| createBitmap(
  int width,
  int height,
  android.graphics.Bitmap.Config config)





*android.graphics.Bitmap.createScaledBitmap(Bitmap,int,int,boolean)*

public static |android.graphics.Bitmap| createScaledBitmap(
  android.graphics.Bitmap src,
  int dstWidth,
  int dstHeight,
  boolean filter)





*android.graphics.Bitmap.describeContents()*

public int describeContents()





*android.graphics.Bitmap.eraseColor(int)*

public void eraseColor(int c)





*android.graphics.Bitmap.extractAlpha()*

public |android.graphics.Bitmap| extractAlpha()





*android.graphics.Bitmap.extractAlpha(Paint,int[])*

public |android.graphics.Bitmap| extractAlpha(
  android.graphics.Paint paint,
  int[] offsetXY)





*android.graphics.Bitmap.getAllocationByteCount()*

public final int getAllocationByteCount()





*android.graphics.Bitmap.getByteCount()*

public final int getByteCount()





*android.graphics.Bitmap.getConfig()*

public final |android.graphics.Bitmap.Config| getConfig()





*android.graphics.Bitmap.getDensity()*

public int getDensity()





*android.graphics.Bitmap.getGenerationId()*

public int getGenerationId()





*android.graphics.Bitmap.getHeight()*

public final int getHeight()





*android.graphics.Bitmap.getNinePatchChunk()*

public byte[] getNinePatchChunk()





*android.graphics.Bitmap.getPixel(int,int)*

public int getPixel(
  int x,
  int y)





*android.graphics.Bitmap.getPixels(int[],int,int,int,int,int,int)*

public void getPixels(
  int[] pixels,
  int offset,
  int stride,
  int x,
  int y,
  int width,
  int height)





*android.graphics.Bitmap.getRowBytes()*

public final int getRowBytes()





*android.graphics.Bitmap.getScaledHeight(Canvas)*

public int getScaledHeight(android.graphics.Canvas canvas)





*android.graphics.Bitmap.getScaledHeight(DisplayMetrics)*

public int getScaledHeight(android.util.DisplayMetrics metrics)





*android.graphics.Bitmap.getScaledHeight(int)*

public int getScaledHeight(int targetDensity)





*android.graphics.Bitmap.getScaledWidth(Canvas)*

public int getScaledWidth(android.graphics.Canvas canvas)





*android.graphics.Bitmap.getScaledWidth(DisplayMetrics)*

public int getScaledWidth(android.util.DisplayMetrics metrics)





*android.graphics.Bitmap.getScaledWidth(int)*

public int getScaledWidth(int targetDensity)





*android.graphics.Bitmap.getWidth()*

public final int getWidth()





*android.graphics.Bitmap.hasAlpha()*

public final boolean hasAlpha()





*android.graphics.Bitmap.hasMipMap()*

public final boolean hasMipMap()





*android.graphics.Bitmap.isMutable()*

public final boolean isMutable()





*android.graphics.Bitmap.isPremultiplied()*

public final boolean isPremultiplied()





*android.graphics.Bitmap.isRecycled()*

public final boolean isRecycled()





*android.graphics.Bitmap.prepareToDraw()*

public void prepareToDraw()





*android.graphics.Bitmap.reconfigure(int,int,Bitmap.Config)*

public void reconfigure(
  int width,
  int height,
  android.graphics.Bitmap.Config config)





*android.graphics.Bitmap.recycle()*

public void recycle()





*android.graphics.Bitmap.sameAs(Bitmap)*

public boolean sameAs(android.graphics.Bitmap other)





*android.graphics.Bitmap.setConfig(Bitmap.Config)*

public void setConfig(android.graphics.Bitmap.Config config)





*android.graphics.Bitmap.setDensity(int)*

public void setDensity(int density)





*android.graphics.Bitmap.setHasAlpha(boolean)*

public void setHasAlpha(boolean hasAlpha)





*android.graphics.Bitmap.setHasMipMap(boolean)*

public final void setHasMipMap(boolean hasMipMap)





*android.graphics.Bitmap.setHeight(int)*

public void setHeight(int height)





*android.graphics.Bitmap.setPixel(int,int,int)*

public void setPixel(
  int x,
  int y,
  int color)





*android.graphics.Bitmap.setPixels(int[],int,int,int,int,int,int)*

public void setPixels(
  int[] pixels,
  int offset,
  int stride,
  int x,
  int y,
  int width,
  int height)





*android.graphics.Bitmap.setPremultiplied(boolean)*

public final void setPremultiplied(boolean premultiplied)





*android.graphics.Bitmap.setWidth(int)*

public void setWidth(int width)





*android.graphics.Bitmap.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel p,
  int flags)






