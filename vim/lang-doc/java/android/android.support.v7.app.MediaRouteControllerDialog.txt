*android.support.v7.app.MediaRouteControllerDialog* *MediaRouteControllerDialog* 

public class MediaRouteControllerDialog
  extends    |Dialog|

|android.support.v7.app.MediaRouteControllerDialog_Description|
|android.support.v7.app.MediaRouteControllerDialog_Fields|
|android.support.v7.app.MediaRouteControllerDialog_Constructors|
|android.support.v7.app.MediaRouteControllerDialog_Methods|

================================================================================

*android.support.v7.app.MediaRouteControllerDialog_Constructors*
|android.support.v7.app.MediaRouteControllerDialog(Context)|
|android.support.v7.app.MediaRouteControllerDialog(Context,int)|

*android.support.v7.app.MediaRouteControllerDialog_Methods*
|android.support.v7.app.MediaRouteControllerDialog.getMediaControlView()|Gets t
|android.support.v7.app.MediaRouteControllerDialog.getRoute()|Gets the route th
|android.support.v7.app.MediaRouteControllerDialog.isVolumeControlEnabled()|Ret
|android.support.v7.app.MediaRouteControllerDialog.onAttachedToWindow()|
|android.support.v7.app.MediaRouteControllerDialog.onCreate(Bundle)|
|android.support.v7.app.MediaRouteControllerDialog.onCreateMediaControlView(Bundle)|
|android.support.v7.app.MediaRouteControllerDialog.onDetachedFromWindow()|
|android.support.v7.app.MediaRouteControllerDialog.onKeyDown(int,KeyEvent)|
|android.support.v7.app.MediaRouteControllerDialog.onKeyUp(int,KeyEvent)|
|android.support.v7.app.MediaRouteControllerDialog.setVolumeControlEnabled(boolean)|

*android.support.v7.app.MediaRouteControllerDialog_Description*

This class implements the route controller dialog for 
(|android.support.v7.media.MediaRouter|) . 

This dialog allows the user to control or disconnect from the currently 
selected route. 



*android.support.v7.app.MediaRouteControllerDialog(Context)*

public MediaRouteControllerDialog(Context context)




*android.support.v7.app.MediaRouteControllerDialog(Context,int)*

public MediaRouteControllerDialog(
  Context context,
  int theme)




*android.support.v7.app.MediaRouteControllerDialog.getMediaControlView()*

public View getMediaControlView()

Gets the media control view that was created by 
(|android.support.v7.app.MediaRouteControllerDialog|) . 



    Returns: The media control view, or null if none. 

*android.support.v7.app.MediaRouteControllerDialog.getRoute()*

public |android.support.v7.media.MediaRouter.RouteInfo| getRoute()

Gets the route that this dialog is controlling. 



*android.support.v7.app.MediaRouteControllerDialog.isVolumeControlEnabled()*

public boolean isVolumeControlEnabled()

Returns whether to enable the volume slider and volume control using the volume 
keys when the route supports it. 



*android.support.v7.app.MediaRouteControllerDialog.onAttachedToWindow()*

public void onAttachedToWindow()





*android.support.v7.app.MediaRouteControllerDialog.onCreate(Bundle)*

protected void onCreate(Bundle savedInstanceState)





*android.support.v7.app.MediaRouteControllerDialog.onCreateMediaControlView(Bundle)*

public View onCreateMediaControlView(Bundle savedInstanceState)

Provides the subclass an opportunity to create a view that will be included 
within the body of the dialog to offer additional media controls for the 
currently playing content. 


    savedInstanceState - The dialog's saved instance state. 

    Returns: The media control view, or null if none. 

*android.support.v7.app.MediaRouteControllerDialog.onDetachedFromWindow()*

public void onDetachedFromWindow()





*android.support.v7.app.MediaRouteControllerDialog.onKeyDown(int,KeyEvent)*

public boolean onKeyDown(
  int keyCode,
  KeyEvent event)





*android.support.v7.app.MediaRouteControllerDialog.onKeyUp(int,KeyEvent)*

public boolean onKeyUp(
  int keyCode,
  KeyEvent event)





*android.support.v7.app.MediaRouteControllerDialog.setVolumeControlEnabled(boolean)*

public void setVolumeControlEnabled(boolean enable)

Sets whether to enable the volume slider and volume control using the volume 
keys when the route supports it. 

The default value is true. 




