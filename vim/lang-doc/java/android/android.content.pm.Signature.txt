*android.content.pm.Signature* *Signature* Opaque, immutable representation of a

public class Signature
  extends    |java.lang.Object|
  implements |android.os.Parcelable|

|android.content.pm.Signature_Description|
|android.content.pm.Signature_Fields|
|android.content.pm.Signature_Constructors|
|android.content.pm.Signature_Methods|

================================================================================

*android.content.pm.Signature_Fields*
|android.os.Parcelable.Creator<android.content.pm.Signature>_android.content.pm.Signature.CREATOR|

*android.content.pm.Signature_Constructors*
|android.content.pm.Signature(byte[])|Create Signature from an existing raw byt
|android.content.pm.Signature(String)|Create Signature from a text representati

*android.content.pm.Signature_Methods*
|android.content.pm.Signature.areExactMatch(Signature[],Signature[])|Test if gi
|android.content.pm.Signature.describeContents()|
|android.content.pm.Signature.equals(Object)|
|android.content.pm.Signature.getPublicKey()|Returns the public key for this si
|android.content.pm.Signature.hashCode()|
|android.content.pm.Signature.toByteArray()|
|android.content.pm.Signature.toChars()|Encode the Signature as ASCII text.
|android.content.pm.Signature.toChars(char[],int[])|Encode the Signature as ASC
|android.content.pm.Signature.toCharsString()|Return the result of#toChars()as 
|android.content.pm.Signature.writeToParcel(Parcel,int)|

*android.content.pm.Signature_Description*

Opaque, immutable representation of a signature associated with an application 
package. 



*android.os.Parcelable.Creator<android.content.pm.Signature>_android.content.pm.Signature.CREATOR*





*android.content.pm.Signature(byte[])*

public Signature(byte[] signature)

Create Signature from an existing raw byte array. 


*android.content.pm.Signature(String)*

public Signature(java.lang.String text)

Create Signature from a text representation previously returned by 
(|android.content.pm.Signature|) or (|android.content.pm.Signature|) . 
Signatures are expected to be a hex-encoded ASCII string. 

    text - hex-encoded string representing the signature 

*android.content.pm.Signature.areExactMatch(Signature[],Signature[])*

public static boolean areExactMatch(
  android.content.pm.Signature[] a,
  android.content.pm.Signature[] b)

Test if given (|android.content.pm.Signature|) sets are exactly equal. 



*android.content.pm.Signature.describeContents()*

public int describeContents()





*android.content.pm.Signature.equals(Object)*

public boolean equals(java.lang.Object obj)





*android.content.pm.Signature.getPublicKey()*

public |java.security.PublicKey| getPublicKey()
  throws |java.security.cert.CertificateException|
         
Returns the public key for this signature. 



*android.content.pm.Signature.hashCode()*

public int hashCode()





*android.content.pm.Signature.toByteArray()*

public byte[] toByteArray()





    Returns: the contents of this signature as a byte array. 

*android.content.pm.Signature.toChars()*

public char[] toChars()

Encode the Signature as ASCII text. 



*android.content.pm.Signature.toChars(char[],int[])*

public char[] toChars(
  char[] existingArray,
  int[] outLen)

Encode the Signature as ASCII text in to an existing array. 


    existingArray - Existing char array or null. 
    outLen - Output parameter for the number of characters written in to the array. 

    Returns: Returns either existingArray if it was large enough to hold the ASCII 
             representation, or a newly created char[] array if needed. 

*android.content.pm.Signature.toCharsString()*

public |java.lang.String| toCharsString()

Return the result of (|android.content.pm.Signature|) as a String. 



*android.content.pm.Signature.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel dest,
  int parcelableFlags)






