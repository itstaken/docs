*android.text.style.DrawableMarginSpan* *DrawableMarginSpan* 

public class DrawableMarginSpan
  extends    |java.lang.Object|
  implements |android.text.style.LeadingMarginSpan|
             |android.text.style.LineHeightSpan|

|android.text.style.DrawableMarginSpan_Description|
|android.text.style.DrawableMarginSpan_Fields|
|android.text.style.DrawableMarginSpan_Constructors|
|android.text.style.DrawableMarginSpan_Methods|

================================================================================

*android.text.style.DrawableMarginSpan_Constructors*
|android.text.style.DrawableMarginSpan(Drawable)|
|android.text.style.DrawableMarginSpan(Drawable,int)|

*android.text.style.DrawableMarginSpan_Methods*
|android.text.style.DrawableMarginSpan.chooseHeight(CharSequence,int,int,int,int,Paint.FontMetricsInt)|
|android.text.style.DrawableMarginSpan.drawLeadingMargin(Canvas,Paint,int,int,int,int,int,CharSequence,int,int,boolean,Layout)|
|android.text.style.DrawableMarginSpan.getLeadingMargin(boolean)|

*android.text.style.DrawableMarginSpan_Description*





*android.text.style.DrawableMarginSpan(Drawable)*

public DrawableMarginSpan(Drawable b)




*android.text.style.DrawableMarginSpan(Drawable,int)*

public DrawableMarginSpan(
  Drawable b,
  int pad)




*android.text.style.DrawableMarginSpan.chooseHeight(CharSequence,int,int,int,int,Paint.FontMetricsInt)*

public void chooseHeight(
  java.lang.CharSequence text,
  int start,
  int end,
  int istartv,
  int v,
  Paint.FontMetricsInt fm)





*android.text.style.DrawableMarginSpan.drawLeadingMargin(Canvas,Paint,int,int,int,int,int,CharSequence,int,int,boolean,Layout)*

public void drawLeadingMargin(
  Canvas c,
  Paint p,
  int x,
  int dir,
  int top,
  int baseline,
  int bottom,
  java.lang.CharSequence text,
  int start,
  int end,
  boolean first,
  android.text.Layout layout)





*android.text.style.DrawableMarginSpan.getLeadingMargin(boolean)*

public int getLeadingMargin(boolean first)






