*android.text.method.QwertyKeyListener* *QwertyKeyListener* This is the standard

public class QwertyKeyListener
  extends    |android.text.method.BaseKeyListener|

|android.text.method.QwertyKeyListener_Description|
|android.text.method.QwertyKeyListener_Fields|
|android.text.method.QwertyKeyListener_Constructors|
|android.text.method.QwertyKeyListener_Methods|

================================================================================

*android.text.method.QwertyKeyListener_Constructors*
|android.text.method.QwertyKeyListener(TextKeyListener.Capitalize,boolean)|

*android.text.method.QwertyKeyListener_Methods*
|android.text.method.QwertyKeyListener.getInputType()|
|android.text.method.QwertyKeyListener.getInstance(boolean,TextKeyListener.Capitalize)|
|android.text.method.QwertyKeyListener.getInstanceForFullKeyboard()|Gets an ins
|android.text.method.QwertyKeyListener.markAsReplaced(Spannable,int,int,String)|
|android.text.method.QwertyKeyListener.onKeyDown(View,Editable,int,KeyEvent)|

*android.text.method.QwertyKeyListener_Description*

This is the standard key listener for alphabetic input on qwerty keyboards. You 
should generally not need to instantiate this yourself; TextKeyListener will do 
it for you. 

As for all implementations of (|android.text.method.KeyListener|) , this class 
is only concerned with hardware keyboards. Software input methods have no 
obligation to trigger the methods in this class. 



*android.text.method.QwertyKeyListener(TextKeyListener.Capitalize,boolean)*

public QwertyKeyListener(
  android.text.method.TextKeyListener.Capitalize cap,
  boolean autoText)




*android.text.method.QwertyKeyListener.getInputType()*

public int getInputType()





*android.text.method.QwertyKeyListener.getInstance(boolean,TextKeyListener.Capitalize)*

public static |android.text.method.QwertyKeyListener| getInstance(
  boolean autoText,
  android.text.method.TextKeyListener.Capitalize cap)

Returns a new or existing instance with the specified capitalization and 
correction properties. 



*android.text.method.QwertyKeyListener.getInstanceForFullKeyboard()*

public static |android.text.method.QwertyKeyListener| getInstanceForFullKeyboard()

Gets an instance of the listener suitable for use with full keyboards. Disables 
auto-capitalization, auto-text and long-press initiated on-screen character 
pickers. 



*android.text.method.QwertyKeyListener.markAsReplaced(Spannable,int,int,String)*

public static void markAsReplaced(
  android.text.Spannable content,
  int start,
  int end,
  java.lang.String original)

Marks the specified region of content as having contained original prior to 
AutoText replacement. Call this method when you have done or are about to do an 
AutoText-style replacement on a region of text and want to let the same 
mechanism (the user pressing DEL immediately after the change) undo the 
replacement. 


    content - the Editable text where the replacement was made 
    start - the start of the replaced region 
    end - the end of the replaced region; the location of the cursor 
    original - the text to be restored if the user presses DEL 

*android.text.method.QwertyKeyListener.onKeyDown(View,Editable,int,KeyEvent)*

public boolean onKeyDown(
  android.view.View view,
  android.text.Editable content,
  int keyCode,
  android.view.KeyEvent event)






