*android.graphics.BitmapShader_Delegate* *BitmapShader_Delegate* Delegate implem

public class BitmapShader_Delegate
  extends    |android.graphics.Shader_Delegate|

|android.graphics.BitmapShader_Delegate_Description|
|android.graphics.BitmapShader_Delegate_Fields|
|android.graphics.BitmapShader_Delegate_Constructors|
|android.graphics.BitmapShader_Delegate_Methods|

================================================================================

*android.graphics.BitmapShader_Delegate_Methods*
|android.graphics.BitmapShader_Delegate.getJavaPaint()|
|android.graphics.BitmapShader_Delegate.getSupportMessage()|
|android.graphics.BitmapShader_Delegate.isSupported()|

*android.graphics.BitmapShader_Delegate_Description*

Delegate implementing the native methods of android.graphics.BitmapShader 

Through the layoutlib_create tool, the original native methods of BitmapShader 
have been replaced by calls to methods of the same name in this delegate class. 

This class behaves like the original native implementation, but in Java, 
keeping previously native data into its own objects and mapping them to int 
that are sent back and forth between it and the original BitmapShader class. 

Because this extends (|android.graphics.Shader_Delegate|) , there's no need to 
use a (|com.android.layoutlib.bridge.impl.DelegateManager|) , as all the Shader 
classes will be added to the manager owned by 
(|android.graphics.Shader_Delegate|) . 



*android.graphics.BitmapShader_Delegate.getJavaPaint()*

public |java.awt.Paint| getJavaPaint()





*android.graphics.BitmapShader_Delegate.getSupportMessage()*

public |java.lang.String| getSupportMessage()





*android.graphics.BitmapShader_Delegate.isSupported()*

public boolean isSupported()






