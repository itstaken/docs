*android.os.SystemVibrator* *SystemVibrator* Vibrator implementation that contro

public class SystemVibrator
  extends    |android.os.Vibrator|

|android.os.SystemVibrator_Description|
|android.os.SystemVibrator_Fields|
|android.os.SystemVibrator_Constructors|
|android.os.SystemVibrator_Methods|

================================================================================

*android.os.SystemVibrator_Constructors*
|android.os.SystemVibrator()|
|android.os.SystemVibrator(Context)|

*android.os.SystemVibrator_Methods*
|android.os.SystemVibrator.cancel()|
|android.os.SystemVibrator.hasVibrator()|
|android.os.SystemVibrator.vibrate(int,String,long)|
|android.os.SystemVibrator.vibrate(int,String,long[],int)|
|android.os.SystemVibrator.vibrate(long)|
|android.os.SystemVibrator.vibrate(long[],int)|

*android.os.SystemVibrator_Description*

Vibrator implementation that controls the main system vibrator. 



*android.os.SystemVibrator()*

public SystemVibrator()




*android.os.SystemVibrator(Context)*

public SystemVibrator(android.content.Context context)




*android.os.SystemVibrator.cancel()*

public void cancel()





*android.os.SystemVibrator.hasVibrator()*

public boolean hasVibrator()





*android.os.SystemVibrator.vibrate(int,String,long)*

public void vibrate(
  int owningUid,
  java.lang.String owningPackage,
  long milliseconds)





*android.os.SystemVibrator.vibrate(int,String,long[],int)*

public void vibrate(
  int owningUid,
  java.lang.String owningPackage,
  long[] pattern,
  int repeat)





*android.os.SystemVibrator.vibrate(long)*

public void vibrate(long milliseconds)





*android.os.SystemVibrator.vibrate(long[],int)*

public void vibrate(
  long[] pattern,
  int repeat)






