*android.view.WindowManagerImpl* *WindowManagerImpl* Provides low-level communic

public final class WindowManagerImpl
  extends    |java.lang.Object|
  implements |android.view.WindowManager|

|android.view.WindowManagerImpl_Description|
|android.view.WindowManagerImpl_Fields|
|android.view.WindowManagerImpl_Constructors|
|android.view.WindowManagerImpl_Methods|

================================================================================

*android.view.WindowManagerImpl_Constructors*
|android.view.WindowManagerImpl(Display)|

*android.view.WindowManagerImpl_Methods*
|android.view.WindowManagerImpl.addView(View,ViewGroup.LayoutParams)|
|android.view.WindowManagerImpl.createLocalWindowManager(Window)|
|android.view.WindowManagerImpl.createPresentationWindowManager(Display)|
|android.view.WindowManagerImpl.getDefaultDisplay()|
|android.view.WindowManagerImpl.removeView(View)|
|android.view.WindowManagerImpl.removeViewImmediate(View)|
|android.view.WindowManagerImpl.updateViewLayout(View,ViewGroup.LayoutParams)|

*android.view.WindowManagerImpl_Description*

Provides low-level communication with the system window manager for operations 
that are bound to a particular context, display or parent window. Instances of 
this object are sensitive to the compatibility info associated with the running 
application. 

This object implements the (|android.view.ViewManager|) interface, allowing you 
to add any View subclass as a top-level window on the screen. Additional window 
manager specific layout parameters are defined for control over how windows are 
displayed. It also implements the (|android.view.WindowManager|) interface, 
allowing you to control the displays attached to the device. 

Applications will not normally use WindowManager directly, instead relying on 
the higher-level facilities in (|android.app.Activity|) and 
(|android.app.Dialog|) . 

Even for low-level window manager access, it is almost never correct to use 
this class. For example, (|android.app.Activity|) provides a window manager for 
adding windows that are associated with that activity -- the window manager 
will not normally allow you to add arbitrary windows that are not associated 
with an activity. 



*android.view.WindowManagerImpl(Display)*

public WindowManagerImpl(android.view.Display display)




*android.view.WindowManagerImpl.addView(View,ViewGroup.LayoutParams)*

public void addView(
  android.view.View view,
  android.view.ViewGroup.LayoutParams params)





*android.view.WindowManagerImpl.createLocalWindowManager(Window)*

public |android.view.WindowManagerImpl| createLocalWindowManager(android.view.Window parentWindow)





*android.view.WindowManagerImpl.createPresentationWindowManager(Display)*

public |android.view.WindowManagerImpl| createPresentationWindowManager(android.view.Display display)





*android.view.WindowManagerImpl.getDefaultDisplay()*

public |android.view.Display| getDefaultDisplay()





*android.view.WindowManagerImpl.removeView(View)*

public void removeView(android.view.View view)





*android.view.WindowManagerImpl.removeViewImmediate(View)*

public void removeViewImmediate(android.view.View view)





*android.view.WindowManagerImpl.updateViewLayout(View,ViewGroup.LayoutParams)*

public void updateViewLayout(
  android.view.View view,
  android.view.ViewGroup.LayoutParams params)






