*android.os.StrictMode.ViolationInfo* *StrictMode.ViolationInfo* Parcelable that

public static class StrictMode.ViolationInfo
  extends    |java.lang.Object|

|android.os.StrictMode.ViolationInfo_Description|
|android.os.StrictMode.ViolationInfo_Fields|
|android.os.StrictMode.ViolationInfo_Constructors|
|android.os.StrictMode.ViolationInfo_Methods|

================================================================================

*android.os.StrictMode.ViolationInfo_Fields*
|java.lang.String_android.os.StrictMode.ViolationInfo.broadcastIntentAction|
|android.app.ApplicationErrorReport.CrashInfo_android.os.StrictMode.ViolationInfo.crashInfo|
|int_android.os.StrictMode.ViolationInfo.durationMillis|
|int_android.os.StrictMode.ViolationInfo.numAnimationsRunning|
|long_android.os.StrictMode.ViolationInfo.numInstances|
|int_android.os.StrictMode.ViolationInfo.policy|
|java.lang.String[]_android.os.StrictMode.ViolationInfo.tags|
|int_android.os.StrictMode.ViolationInfo.violationNumThisLoop|
|long_android.os.StrictMode.ViolationInfo.violationUptimeMillis|

*android.os.StrictMode.ViolationInfo_Constructors*
|android.os.StrictMode.ViolationInfo()|Create an uninitialized instance of Viol
|android.os.StrictMode.ViolationInfo(Parcel)|Create an instance of ViolationInf
|android.os.StrictMode.ViolationInfo(Parcel,boolean)|Create an instance of Viol
|android.os.StrictMode.ViolationInfo(Throwable,int)|Create an instance of Viola

*android.os.StrictMode.ViolationInfo_Methods*
|android.os.StrictMode.ViolationInfo.dump(Printer,String)|Dump a ViolationInfo 
|android.os.StrictMode.ViolationInfo.hashCode()|
|android.os.StrictMode.ViolationInfo.writeToParcel(Parcel,int)|Save a Violation

*android.os.StrictMode.ViolationInfo_Description*

Parcelable that gets sent in Binder call headers back to callers to report 
violations that happened during a cross-process call. 



*java.lang.String_android.os.StrictMode.ViolationInfo.broadcastIntentAction*

The action of the Intent being broadcast to somebody's onReceive on this thread 
right now, or null. 


*android.app.ApplicationErrorReport.CrashInfo_android.os.StrictMode.ViolationInfo.crashInfo*

Stack and other stuff info. 


*int_android.os.StrictMode.ViolationInfo.durationMillis*

The wall time duration of the violation, when known. -1 when not known. 


*int_android.os.StrictMode.ViolationInfo.numAnimationsRunning*

The number of animations currently running. 


*long_android.os.StrictMode.ViolationInfo.numInstances*

If this is a instance count violation, the number of instances in memory, else 
-1. 


*int_android.os.StrictMode.ViolationInfo.policy*

The strict mode policy mask at the time of violation. 


*java.lang.String[]_android.os.StrictMode.ViolationInfo.tags*

List of tags from active Span instances during this violation, or null for 
none. 


*int_android.os.StrictMode.ViolationInfo.violationNumThisLoop*

Which violation number this was (1-based) since the last Looper loop, from the 
perspective of the root caller (if it crossed any processes via Binder calls). 
The value is 0 if the root caller wasn't on a Looper thread. 


*long_android.os.StrictMode.ViolationInfo.violationUptimeMillis*

The time (in terms of SystemClock.uptimeMillis()) that the violation occurred. 



*android.os.StrictMode.ViolationInfo()*

public StrictMode.ViolationInfo()

Create an uninitialized instance of ViolationInfo 


*android.os.StrictMode.ViolationInfo(Parcel)*

public StrictMode.ViolationInfo(android.os.Parcel in)

Create an instance of ViolationInfo initialized from a Parcel. 


*android.os.StrictMode.ViolationInfo(Parcel,boolean)*

public StrictMode.ViolationInfo(
  android.os.Parcel in,
  boolean unsetGatheringBit)

Create an instance of ViolationInfo initialized from a Parcel. 

    unsetGatheringBit - if true, the caller is the root caller and the gathering penalty should be 
       removed. 

*android.os.StrictMode.ViolationInfo(Throwable,int)*

public StrictMode.ViolationInfo(
  java.lang.Throwable tr,
  int policy)

Create an instance of ViolationInfo initialized from an exception. 


*android.os.StrictMode.ViolationInfo.dump(Printer,String)*

public void dump(
  android.util.Printer pw,
  java.lang.String prefix)

Dump a ViolationInfo instance to a Printer. 



*android.os.StrictMode.ViolationInfo.hashCode()*

public int hashCode()





*android.os.StrictMode.ViolationInfo.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel dest,
  int flags)

Save a ViolationInfo instance to a parcel. 




