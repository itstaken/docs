*android.widget.MultiAutoCompleteTextView.Tokenizer* *MultiAutoCompleteTextView.Tokenizer* 

public static interface interface MultiAutoCompleteTextView.Tokenizer


|android.widget.MultiAutoCompleteTextView.Tokenizer_Description|
|android.widget.MultiAutoCompleteTextView.Tokenizer_Fields|
|android.widget.MultiAutoCompleteTextView.Tokenizer_Constructors|
|android.widget.MultiAutoCompleteTextView.Tokenizer_Methods|

================================================================================

*android.widget.MultiAutoCompleteTextView.Tokenizer_Methods*
|android.widget.MultiAutoCompleteTextView.Tokenizer.findTokenEnd(CharSequence,int)|
|android.widget.MultiAutoCompleteTextView.Tokenizer.findTokenStart(CharSequence,int)|
|android.widget.MultiAutoCompleteTextView.Tokenizer.terminateToken(CharSequence)|

*android.widget.MultiAutoCompleteTextView.Tokenizer_Description*





*android.widget.MultiAutoCompleteTextView.Tokenizer.findTokenEnd(CharSequence,int)*

public int findTokenEnd(
  java.lang.CharSequence text,
  int cursor)

Returns the end of the token (minus trailing punctuation) that begins at offset 
cursor within text. 



*android.widget.MultiAutoCompleteTextView.Tokenizer.findTokenStart(CharSequence,int)*

public int findTokenStart(
  java.lang.CharSequence text,
  int cursor)

Returns the start of the token that ends at offset cursor within text. 



*android.widget.MultiAutoCompleteTextView.Tokenizer.terminateToken(CharSequence)*

public |java.lang.CharSequence| terminateToken(java.lang.CharSequence text)

Returns text, modified, if necessary, to ensure that it ends with a token 
terminator (for example a space or comma). 




