*android.content.pm.ParceledListSlice* *ParceledListSlice* Transfer a large list

public class ParceledListSlice<T extends android.os.Parcelable>
  extends    |java.lang.Object|
  implements |android.os.Parcelable|

|android.content.pm.ParceledListSlice_Description|
|android.content.pm.ParceledListSlice_Fields|
|android.content.pm.ParceledListSlice_Constructors|
|android.content.pm.ParceledListSlice_Methods|

================================================================================

*android.content.pm.ParceledListSlice_Fields*
|android.os.Parcelable.ClassLoaderCreator<android.content.pm.ParceledListSlice>_android.content.pm.ParceledListSlice.CREATOR|

*android.content.pm.ParceledListSlice_Constructors*
|android.content.pm.ParceledListSlice(List<T>)|

*android.content.pm.ParceledListSlice_Methods*
|android.content.pm.ParceledListSlice.describeContents()|
|android.content.pm.ParceledListSlice.getList()|
|android.content.pm.ParceledListSlice.writeToParcel(Parcel,int)|Write this to a

*android.content.pm.ParceledListSlice_Description*

Transfer a large list of Parcelable objects across an IPC. Splits into multiple 
transactions if needed. 



*android.os.Parcelable.ClassLoaderCreator<android.content.pm.ParceledListSlice>_android.content.pm.ParceledListSlice.CREATOR*





*android.content.pm.ParceledListSlice(List<T>)*

public ParceledListSlice(java.util.List<T> list)




*android.content.pm.ParceledListSlice.describeContents()*

public int describeContents()





*android.content.pm.ParceledListSlice.getList()*

public |java.util.List|<T extends android.os.Parcelable> getList()





*android.content.pm.ParceledListSlice.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel dest,
  int flags)

Write this to another Parcel. Note that this discards the internal Parcel and 
should not be used anymore. This is so we can pass this to a Binder where we 
won't have a chance to call recycle on this. 




