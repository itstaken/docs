*android.os.NullVibrator* *NullVibrator* Vibrator implementation that does nothi

public class NullVibrator
  extends    |android.os.Vibrator|

|android.os.NullVibrator_Description|
|android.os.NullVibrator_Fields|
|android.os.NullVibrator_Constructors|
|android.os.NullVibrator_Methods|

================================================================================

*android.os.NullVibrator_Methods*
|android.os.NullVibrator.cancel()|
|android.os.NullVibrator.getInstance()|
|android.os.NullVibrator.hasVibrator()|
|android.os.NullVibrator.vibrate(int,String,long)|
|android.os.NullVibrator.vibrate(int,String,long[],int)|
|android.os.NullVibrator.vibrate(long)|
|android.os.NullVibrator.vibrate(long[],int)|

*android.os.NullVibrator_Description*

Vibrator implementation that does nothing. 



*android.os.NullVibrator.cancel()*

public void cancel()





*android.os.NullVibrator.getInstance()*

public static |android.os.NullVibrator| getInstance()





*android.os.NullVibrator.hasVibrator()*

public boolean hasVibrator()





*android.os.NullVibrator.vibrate(int,String,long)*

public void vibrate(
  int owningUid,
  java.lang.String owningPackage,
  long milliseconds)





*android.os.NullVibrator.vibrate(int,String,long[],int)*

public void vibrate(
  int owningUid,
  java.lang.String owningPackage,
  long[] pattern,
  int repeat)





*android.os.NullVibrator.vibrate(long)*

public void vibrate(long milliseconds)





*android.os.NullVibrator.vibrate(long[],int)*

public void vibrate(
  long[] pattern,
  int repeat)






