*android.graphics.Bitmap_Delegate* *Bitmap_Delegate* Delegate implementing the n

public final class Bitmap_Delegate
  extends    |java.lang.Object|

|android.graphics.Bitmap_Delegate_Description|
|android.graphics.Bitmap_Delegate_Fields|
|android.graphics.Bitmap_Delegate_Constructors|
|android.graphics.Bitmap_Delegate_Methods|

================================================================================

*android.graphics.Bitmap_Delegate_Methods*
|android.graphics.Bitmap_Delegate.change()|Update the generationId.
|android.graphics.Bitmap_Delegate.createBitmap(BufferedImage,boolean,Density)|C
|android.graphics.Bitmap_Delegate.createBitmap(BufferedImage,Set<Bitmap_Delegate.BitmapCreateFlags>,Density)|
|android.graphics.Bitmap_Delegate.createBitmap(File,boolean,Density)|Creates an
|android.graphics.Bitmap_Delegate.createBitmap(File,Set<Bitmap_Delegate.BitmapCreateFlags>,Density)|
|android.graphics.Bitmap_Delegate.createBitmap(InputStream,boolean,Density)|Cre
|android.graphics.Bitmap_Delegate.createBitmap(InputStream,Set<Bitmap_Delegate.BitmapCreateFlags>,Density)|
|android.graphics.Bitmap_Delegate.getBufferedImageType(int)|
|android.graphics.Bitmap_Delegate.getConfig()|Returns the Android bitmap config
|android.graphics.Bitmap_Delegate.getDelegate(Bitmap)|Returns the native delega
|android.graphics.Bitmap_Delegate.getImage()|Returns theBufferedImageused by th
|android.graphics.Bitmap_Delegate.getImage(Bitmap)|Returns theBufferedImageused
|android.graphics.Bitmap_Delegate.hasAlpha()|Returns the hasAlpha rendering hin
|android.graphics.Bitmap_Delegate.hasMipMap()|

*android.graphics.Bitmap_Delegate_Description*

Delegate implementing the native methods of android.graphics.Bitmap 

Through the layoutlib_create tool, the original native methods of Bitmap have 
been replaced by calls to methods of the same name in this delegate class. 

This class behaves like the original native implementation, but in Java, 
keeping previously native data into its own objects and mapping them to int 
that are sent back and forth between it and the original Bitmap class. 



*android.graphics.Bitmap_Delegate.change()*

public void change()

Update the generationId. 



*android.graphics.Bitmap_Delegate.createBitmap(BufferedImage,boolean,Density)*

public static Bitmap createBitmap(
  java.awt.image.BufferedImage image,
  boolean isMutable,
  Density density)
  throws |java.io.IOException|
         
Creates and returns a (|Bitmap|) initialized with the given 
(|java.awt.image.BufferedImage|) 


    image - the bitmap content 
    isMutable - whether the bitmap is mutable 
    density - the density associated with the bitmap 

*android.graphics.Bitmap_Delegate.createBitmap(BufferedImage,Set<Bitmap_Delegate.BitmapCreateFlags>,Density)*

public static Bitmap createBitmap(
  java.awt.image.BufferedImage image,
  java.util.Set<android.graphics.Bitmap_Delegate.BitmapCreateFlags> createFlags,
  Density density)
  throws |java.io.IOException|
         
Creates and returns a (|Bitmap|) initialized with the given 
(|java.awt.image.BufferedImage|) 


    image - the bitmap content 
    createFlags - 
    density - the density associated with the bitmap 

*android.graphics.Bitmap_Delegate.createBitmap(File,boolean,Density)*

public static Bitmap createBitmap(
  java.io.File input,
  boolean isMutable,
  Density density)
  throws |java.io.IOException|
         
Creates and returns a (|Bitmap|) initialized with the given file content. 


    input - the file from which to read the bitmap content 
    isMutable - whether the bitmap is mutable 
    density - the density associated with the bitmap 

*android.graphics.Bitmap_Delegate.createBitmap(File,Set<Bitmap_Delegate.BitmapCreateFlags>,Density)*

public static Bitmap createBitmap(
  java.io.File input,
  java.util.Set<android.graphics.Bitmap_Delegate.BitmapCreateFlags> createFlags,
  Density density)
  throws |java.io.IOException|
         
Creates and returns a (|Bitmap|) initialized with the given file content. 


    input - the file from which to read the bitmap content 
    density - the density associated with the bitmap 

*android.graphics.Bitmap_Delegate.createBitmap(InputStream,boolean,Density)*

public static Bitmap createBitmap(
  java.io.InputStream input,
  boolean isMutable,
  Density density)
  throws |java.io.IOException|
         
Creates and returns a (|Bitmap|) initialized with the given stream content. 


    input - the stream from which to read the bitmap content 
    isMutable - whether the bitmap is mutable 
    density - the density associated with the bitmap 

*android.graphics.Bitmap_Delegate.createBitmap(InputStream,Set<Bitmap_Delegate.BitmapCreateFlags>,Density)*

public static Bitmap createBitmap(
  java.io.InputStream input,
  java.util.Set<android.graphics.Bitmap_Delegate.BitmapCreateFlags> createFlags,
  Density density)
  throws |java.io.IOException|
         
Creates and returns a (|Bitmap|) initialized with the given stream content. 


    input - the stream from which to read the bitmap content 
    createFlags - 
    density - the density associated with the bitmap 

*android.graphics.Bitmap_Delegate.getBufferedImageType(int)*

public static int getBufferedImageType(int nativeBitmapConfig)





*android.graphics.Bitmap_Delegate.getConfig()*

public Config getConfig()

Returns the Android bitmap config. Note that this not the config of the 
underlying Java2D bitmap. 



*android.graphics.Bitmap_Delegate.getDelegate(Bitmap)*

public static |android.graphics.Bitmap_Delegate| getDelegate(Bitmap bitmap)

Returns the native delegate associated to a given 
(|android.graphics.Bitmap_Delegate|) object. 



*android.graphics.Bitmap_Delegate.getImage()*

public |java.awt.image.BufferedImage| getImage()

Returns the (|java.awt.image.BufferedImage|) used by the delegate of the given 
(|Bitmap|) . 



*android.graphics.Bitmap_Delegate.getImage(Bitmap)*

public static |java.awt.image.BufferedImage| getImage(Bitmap bitmap)

Returns the (|java.awt.image.BufferedImage|) used by the delegate of the given 
(|Bitmap|) . 



*android.graphics.Bitmap_Delegate.hasAlpha()*

public boolean hasAlpha()

Returns the hasAlpha rendering hint 



    Returns: true if the bitmap alpha should be used at render time 

*android.graphics.Bitmap_Delegate.hasMipMap()*

public boolean hasMipMap()






