*android.content.pm.VerifierDeviceIdentity* *VerifierDeviceIdentity* An identity

public class VerifierDeviceIdentity
  extends    |java.lang.Object|
  implements |android.os.Parcelable|

|android.content.pm.VerifierDeviceIdentity_Description|
|android.content.pm.VerifierDeviceIdentity_Fields|
|android.content.pm.VerifierDeviceIdentity_Constructors|
|android.content.pm.VerifierDeviceIdentity_Methods|

================================================================================

*android.content.pm.VerifierDeviceIdentity_Fields*
|android.os.Parcelable.Creator<android.content.pm.VerifierDeviceIdentity>_android.content.pm.VerifierDeviceIdentity.CREATOR|

*android.content.pm.VerifierDeviceIdentity_Constructors*
|android.content.pm.VerifierDeviceIdentity(long)|Create a verifier device ident

*android.content.pm.VerifierDeviceIdentity_Methods*
|android.content.pm.VerifierDeviceIdentity.describeContents()|
|android.content.pm.VerifierDeviceIdentity.equals(Object)|
|android.content.pm.VerifierDeviceIdentity.generate()|Generate a new device ide
|android.content.pm.VerifierDeviceIdentity.hashCode()|
|android.content.pm.VerifierDeviceIdentity.parse(String)|
|android.content.pm.VerifierDeviceIdentity.toString()|
|android.content.pm.VerifierDeviceIdentity.writeToParcel(Parcel,int)|

*android.content.pm.VerifierDeviceIdentity_Description*

An identity that uniquely identifies a particular device. In this 
implementation, the identity is represented as a 64-bit integer encoded to a 
13-character string using RFC 4648's Base32 encoding without the trailing 
padding. This makes it easy for users to read and write the code without 
confusing 'I' (letter) with '1' (one) or 'O' (letter) with '0' (zero). 



*android.os.Parcelable.Creator<android.content.pm.VerifierDeviceIdentity>_android.content.pm.VerifierDeviceIdentity.CREATOR*





*android.content.pm.VerifierDeviceIdentity(long)*

public VerifierDeviceIdentity(long identity)

Create a verifier device identity from a long. 

    identity - device identity in a 64-bit integer. 

*android.content.pm.VerifierDeviceIdentity.describeContents()*

public int describeContents()





*android.content.pm.VerifierDeviceIdentity.equals(Object)*

public boolean equals(java.lang.Object other)





*android.content.pm.VerifierDeviceIdentity.generate()*

public static |android.content.pm.VerifierDeviceIdentity| generate()

Generate a new device identity. 



    Returns: random uniformly-distributed device identity 

*android.content.pm.VerifierDeviceIdentity.hashCode()*

public int hashCode()





*android.content.pm.VerifierDeviceIdentity.parse(String)*

public static |android.content.pm.VerifierDeviceIdentity| parse(java.lang.String deviceIdentity)
  throws |java.lang.IllegalArgumentException|
         




*android.content.pm.VerifierDeviceIdentity.toString()*

public |java.lang.String| toString()





*android.content.pm.VerifierDeviceIdentity.writeToParcel(Parcel,int)*

public void writeToParcel(
  android.os.Parcel dest,
  int flags)






