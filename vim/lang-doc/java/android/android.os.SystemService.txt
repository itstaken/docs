*android.os.SystemService* *SystemService* Controls and utilities for low-leveli

public class SystemService
  extends    |java.lang.Object|

|android.os.SystemService_Description|
|android.os.SystemService_Fields|
|android.os.SystemService_Constructors|
|android.os.SystemService_Methods|

================================================================================

*android.os.SystemService_Constructors*
|android.os.SystemService()|

*android.os.SystemService_Methods*
|android.os.SystemService.getState(String)|Return current state of given servic
|android.os.SystemService.isRunning(String)|Check if given service isState#RUNN
|android.os.SystemService.isStopped(String)|Check if given service isState#STOP
|android.os.SystemService.restart(String)|Request that the init daemon restart 
|android.os.SystemService.start(String)|Request that the init daemon start a na
|android.os.SystemService.stop(String)|Request that the init daemon stop a name
|android.os.SystemService.waitForAnyStopped(String...)|Wait until any of given 
|android.os.SystemService.waitForState(String,SystemService.State,long)|Wait un

*android.os.SystemService_Description*

Controls and utilities for low-levelinitservices. 



*android.os.SystemService()*

public SystemService()




*android.os.SystemService.getState(String)*

public static |android.os.SystemService.State| getState(java.lang.String service)

Return current state of given service. 



*android.os.SystemService.isRunning(String)*

public static boolean isRunning(java.lang.String service)

Check if given service is (|android.os.SystemService.State|) . 



*android.os.SystemService.isStopped(String)*

public static boolean isStopped(java.lang.String service)

Check if given service is (|android.os.SystemService.State|) . 



*android.os.SystemService.restart(String)*

public static void restart(java.lang.String name)

Request that the init daemon restart a named service. 



*android.os.SystemService.start(String)*

public static void start(java.lang.String name)

Request that the init daemon start a named service. 



*android.os.SystemService.stop(String)*

public static void stop(java.lang.String name)

Request that the init daemon stop a named service. 



*android.os.SystemService.waitForAnyStopped(String...)*

public static void waitForAnyStopped(java.lang.String[] services)

Wait until any of given services enters (|android.os.SystemService.State|) . 



*android.os.SystemService.waitForState(String,SystemService.State,long)*

public static void waitForState(
  java.lang.String service,
  android.os.SystemService.State state,
  long timeoutMillis)
  throws |java.util.concurrent.TimeoutException|
         
Wait until given service has entered specific state. 




