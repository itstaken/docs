*android.provider.MediaStore.Images.Media* *MediaStore.Images.Media* 

public static final class MediaStore.Images.Media
  extends    |java.lang.Object|
  implements |android.provider.MediaStore.Images.ImageColumns|

|android.provider.MediaStore.Images.Media_Description|
|android.provider.MediaStore.Images.Media_Fields|
|android.provider.MediaStore.Images.Media_Constructors|
|android.provider.MediaStore.Images.Media_Methods|

================================================================================

*android.provider.MediaStore.Images.Media_Fields*
|java.lang.String_android.provider.MediaStore.Images.Media.CONTENT_TYPE|
|java.lang.String_android.provider.MediaStore.Images.Media.DEFAULT_SORT_ORDER|
|android.net.Uri_android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI|
|android.net.Uri_android.provider.MediaStore.Images.Media.INTERNAL_CONTENT_URI|

*android.provider.MediaStore.Images.Media_Constructors*
|android.provider.MediaStore.Images.Media()|

*android.provider.MediaStore.Images.Media_Methods*
|android.provider.MediaStore.Images.Media.getBitmap(ContentResolver,Uri)|Retrie
|android.provider.MediaStore.Images.Media.getContentUri(String)|Get the content
|android.provider.MediaStore.Images.Media.insertImage(ContentResolver,Bitmap,String,String)|
|android.provider.MediaStore.Images.Media.insertImage(ContentResolver,String,String,String)|
|android.provider.MediaStore.Images.Media.query(ContentResolver,Uri,String[])|
|android.provider.MediaStore.Images.Media.query(ContentResolver,Uri,String[],String,String)|
|android.provider.MediaStore.Images.Media.query(ContentResolver,Uri,String[],String,String[],String)|

*android.provider.MediaStore.Images.Media_Description*





*java.lang.String_android.provider.MediaStore.Images.Media.CONTENT_TYPE*

The MIME type of of this directory of images. Note that each entry in this 
directory will have a standard image MIME type as appropriate -- for example, 
image/jpeg. 


*java.lang.String_android.provider.MediaStore.Images.Media.DEFAULT_SORT_ORDER*

The default sort order for this table 


*android.net.Uri_android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI*

The content:// style URI for the "primary" external storage volume. 


*android.net.Uri_android.provider.MediaStore.Images.Media.INTERNAL_CONTENT_URI*

The content:// style URI for the internal storage. 



*android.provider.MediaStore.Images.Media()*

public MediaStore.Images.Media()




*android.provider.MediaStore.Images.Media.getBitmap(ContentResolver,Uri)*

public static final Bitmap getBitmap(
  android.content.ContentResolver cr,
  android.net.Uri url)
  throws |java.io.FileNotFoundException|
         |java.io.IOException|
         
Retrieves an image for the given url as a (|Bitmap|) . 


    cr - The content resolver to use 
    url - The url of the image 

*android.provider.MediaStore.Images.Media.getContentUri(String)*

public static |android.net.Uri| getContentUri(java.lang.String volumeName)

Get the content:// style URI for the image media table on the given volume. 


    volumeName - the name of the volume to get the URI for 

    Returns: the URI to the image media table on the given volume 

*android.provider.MediaStore.Images.Media.insertImage(ContentResolver,Bitmap,String,String)*

public static final |java.lang.String| insertImage(
  android.content.ContentResolver cr,
  Bitmap source,
  java.lang.String title,
  java.lang.String description)

Insert an image and create a thumbnail for it. 


    cr - The content resolver to use 
    source - The stream to use for the image 
    title - The name of the image 
    description - The description of the image 

    Returns: The URL to the newly created image, or null if the image failed to be stored 
             for any reason. 

*android.provider.MediaStore.Images.Media.insertImage(ContentResolver,String,String,String)*

public static final |java.lang.String| insertImage(
  android.content.ContentResolver cr,
  java.lang.String imagePath,
  java.lang.String name,
  java.lang.String description)
  throws |java.io.FileNotFoundException|
         
Insert an image and create a thumbnail for it. 


    cr - The content resolver to use 
    imagePath - The path to the image to insert 
    name - The name of the image 
    description - The description of the image 

    Returns: The URL to the newly created image 

*android.provider.MediaStore.Images.Media.query(ContentResolver,Uri,String[])*

public static final |android.database.Cursor| query(
  android.content.ContentResolver cr,
  android.net.Uri uri,
  java.lang.String[] projection)





*android.provider.MediaStore.Images.Media.query(ContentResolver,Uri,String[],String,String)*

public static final |android.database.Cursor| query(
  android.content.ContentResolver cr,
  android.net.Uri uri,
  java.lang.String[] projection,
  java.lang.String where,
  java.lang.String orderBy)





*android.provider.MediaStore.Images.Media.query(ContentResolver,Uri,String[],String,String[],String)*

public static final |android.database.Cursor| query(
  android.content.ContentResolver cr,
  android.net.Uri uri,
  java.lang.String[] projection,
  java.lang.String selection,
  java.lang.String[] selectionArgs,
  java.lang.String orderBy)






