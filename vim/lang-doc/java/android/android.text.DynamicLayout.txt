*android.text.DynamicLayout* *DynamicLayout* DynamicLayout is a text layout that

public class DynamicLayout
  extends    |android.text.Layout|

|android.text.DynamicLayout_Description|
|android.text.DynamicLayout_Fields|
|android.text.DynamicLayout_Constructors|
|android.text.DynamicLayout_Methods|

================================================================================

*android.text.DynamicLayout_Fields*
|int_android.text.DynamicLayout.INVALID_BLOCK_INDEX|

*android.text.DynamicLayout_Constructors*
|android.text.DynamicLayout(CharSequence,CharSequence,TextPaint,int,Layout.Alignment,float,float,boolean)|
|android.text.DynamicLayout(CharSequence,CharSequence,TextPaint,int,Layout.Alignment,float,float,boolean,TextUtils.TruncateAt,int)|
|android.text.DynamicLayout(CharSequence,CharSequence,TextPaint,int,Layout.Alignment,TextDirectionHeuristic,float,float,boolean,TextUtils.TruncateAt,int)|
|android.text.DynamicLayout(CharSequence,TextPaint,int,Layout.Alignment,float,float,boolean)|

*android.text.DynamicLayout_Methods*
|android.text.DynamicLayout.getBlockEndLines()|
|android.text.DynamicLayout.getBlockIndices()|
|android.text.DynamicLayout.getBottomPadding()|
|android.text.DynamicLayout.getEllipsisCount(int)|
|android.text.DynamicLayout.getEllipsisStart(int)|
|android.text.DynamicLayout.getEllipsizedWidth()|
|android.text.DynamicLayout.getIndexFirstChangedBlock()|
|android.text.DynamicLayout.getLineContainsTab(int)|
|android.text.DynamicLayout.getLineCount()|
|android.text.DynamicLayout.getLineDescent(int)|
|android.text.DynamicLayout.getLineDirections(int)|
|android.text.DynamicLayout.getLineStart(int)|
|android.text.DynamicLayout.getLineTop(int)|
|android.text.DynamicLayout.getNumberOfBlocks()|
|android.text.DynamicLayout.getParagraphDirection(int)|
|android.text.DynamicLayout.getTopPadding()|
|android.text.DynamicLayout.setIndexFirstChangedBlock(int)|

*android.text.DynamicLayout_Description*

DynamicLayout is a text layout that updates itself as the text is edited. This 
is used by widgets to control text layout. You should not need to use this 
class directly unless you are implementing your own widget or custom display 
object, or need to call Canvas.drawText()(|android.graphics.Canvas|) directly. 



*int_android.text.DynamicLayout.INVALID_BLOCK_INDEX*

Value used in mBlockIndices when a block has been created or recycled and 
indicating that its display list needs to be re-created. 



*android.text.DynamicLayout(CharSequence,CharSequence,TextPaint,int,Layout.Alignment,float,float,boolean)*

public DynamicLayout(
  java.lang.CharSequence base,
  java.lang.CharSequence display,
  android.text.TextPaint paint,
  int width,
  android.text.Layout.Alignment align,
  float spacingmult,
  float spacingadd,
  boolean includepad)

Make a layout for the transformed text (password transformation being the 
primary example of a transformation) that will be updated as the base text is 
changed. 


*android.text.DynamicLayout(CharSequence,CharSequence,TextPaint,int,Layout.Alignment,float,float,boolean,TextUtils.TruncateAt,int)*

public DynamicLayout(
  java.lang.CharSequence base,
  java.lang.CharSequence display,
  android.text.TextPaint paint,
  int width,
  android.text.Layout.Alignment align,
  float spacingmult,
  float spacingadd,
  boolean includepad,
  android.text.TextUtils.TruncateAt ellipsize,
  int ellipsizedWidth)

Make a layout for the transformed text (password transformation being the 
primary example of a transformation) that will be updated as the base text is 
changed. If ellipsize is non-null, the Layout will ellipsize the text down to 
ellipsizedWidth. 


*android.text.DynamicLayout(CharSequence,CharSequence,TextPaint,int,Layout.Alignment,TextDirectionHeuristic,float,float,boolean,TextUtils.TruncateAt,int)*

public DynamicLayout(
  java.lang.CharSequence base,
  java.lang.CharSequence display,
  android.text.TextPaint paint,
  int width,
  android.text.Layout.Alignment align,
  android.text.TextDirectionHeuristic textDir,
  float spacingmult,
  float spacingadd,
  boolean includepad,
  android.text.TextUtils.TruncateAt ellipsize,
  int ellipsizedWidth)

Make a layout for the transformed text (password transformation being the 
primary example of a transformation) that will be updated as the base text is 
changed. If ellipsize is non-null, the Layout will ellipsize the text down to 
ellipsizedWidth. * *@hide 


*android.text.DynamicLayout(CharSequence,TextPaint,int,Layout.Alignment,float,float,boolean)*

public DynamicLayout(
  java.lang.CharSequence base,
  android.text.TextPaint paint,
  int width,
  android.text.Layout.Alignment align,
  float spacingmult,
  float spacingadd,
  boolean includepad)

Make a layout for the specified text that will be updated as the text is 
changed. 


*android.text.DynamicLayout.getBlockEndLines()*

public int[] getBlockEndLines()





*android.text.DynamicLayout.getBlockIndices()*

public int[] getBlockIndices()





*android.text.DynamicLayout.getBottomPadding()*

public int getBottomPadding()





*android.text.DynamicLayout.getEllipsisCount(int)*

public int getEllipsisCount(int line)





*android.text.DynamicLayout.getEllipsisStart(int)*

public int getEllipsisStart(int line)





*android.text.DynamicLayout.getEllipsizedWidth()*

public int getEllipsizedWidth()





*android.text.DynamicLayout.getIndexFirstChangedBlock()*

public int getIndexFirstChangedBlock()





*android.text.DynamicLayout.getLineContainsTab(int)*

public boolean getLineContainsTab(int line)





*android.text.DynamicLayout.getLineCount()*

public int getLineCount()





*android.text.DynamicLayout.getLineDescent(int)*

public int getLineDescent(int line)





*android.text.DynamicLayout.getLineDirections(int)*

public final |android.text.Layout.Directions| getLineDirections(int line)





*android.text.DynamicLayout.getLineStart(int)*

public int getLineStart(int line)





*android.text.DynamicLayout.getLineTop(int)*

public int getLineTop(int line)





*android.text.DynamicLayout.getNumberOfBlocks()*

public int getNumberOfBlocks()





*android.text.DynamicLayout.getParagraphDirection(int)*

public int getParagraphDirection(int line)





*android.text.DynamicLayout.getTopPadding()*

public int getTopPadding()





*android.text.DynamicLayout.setIndexFirstChangedBlock(int)*

public void setIndexFirstChangedBlock(int i)






