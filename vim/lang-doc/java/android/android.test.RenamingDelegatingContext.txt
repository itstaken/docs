*android.test.RenamingDelegatingContext* *RenamingDelegatingContext* 

public class RenamingDelegatingContext
  extends    |android.content.ContextWrapper|

|android.test.RenamingDelegatingContext_Description|
|android.test.RenamingDelegatingContext_Fields|
|android.test.RenamingDelegatingContext_Constructors|
|android.test.RenamingDelegatingContext_Methods|

================================================================================

*android.test.RenamingDelegatingContext_Constructors*
|android.test.RenamingDelegatingContext(Context,Context,String)|
|android.test.RenamingDelegatingContext(Context,String)|

*android.test.RenamingDelegatingContext_Methods*
|android.test.RenamingDelegatingContext.databaseList()|
|android.test.RenamingDelegatingContext.deleteDatabase(String)|
|android.test.RenamingDelegatingContext.deleteFile(String)|
|android.test.RenamingDelegatingContext.fileList()|
|android.test.RenamingDelegatingContext.getCacheDir()|
|android.test.RenamingDelegatingContext.getDatabasePath(String)|
|android.test.RenamingDelegatingContext.getDatabasePrefix()|
|android.test.RenamingDelegatingContext.getFileStreamPath(String)|
|android.test.RenamingDelegatingContext.makeExistingFilesAndDbsAccessible()|
|android.test.RenamingDelegatingContext.openFileInput(String)|
|android.test.RenamingDelegatingContext.openFileOutput(String,int)|
|android.test.RenamingDelegatingContext.openOrCreateDatabase(String,int,SQLiteDatabase.CursorFactory)|
|android.test.RenamingDelegatingContext.openOrCreateDatabase(String,int,SQLiteDatabase.CursorFactory,DatabaseErrorHandler)|
|android.test.RenamingDelegatingContext.providerWithRenamedContext(Class<T>,Context,String)|
|android.test.RenamingDelegatingContext.providerWithRenamedContext(Class<T>,Context,String,boolean)|

*android.test.RenamingDelegatingContext_Description*





*android.test.RenamingDelegatingContext(Context,Context,String)*

public RenamingDelegatingContext(
  android.content.Context context,
  android.content.Context fileContext,
  java.lang.String filePrefix)




*android.test.RenamingDelegatingContext(Context,String)*

public RenamingDelegatingContext(
  android.content.Context context,
  java.lang.String filePrefix)




*android.test.RenamingDelegatingContext.databaseList()*

public |java.lang.String|[] databaseList()





*android.test.RenamingDelegatingContext.deleteDatabase(String)*

public boolean deleteDatabase(java.lang.String name)





*android.test.RenamingDelegatingContext.deleteFile(String)*

public boolean deleteFile(java.lang.String name)





*android.test.RenamingDelegatingContext.fileList()*

public |java.lang.String|[] fileList()





*android.test.RenamingDelegatingContext.getCacheDir()*

public |java.io.File| getCacheDir()





*android.test.RenamingDelegatingContext.getDatabasePath(String)*

public |java.io.File| getDatabasePath(java.lang.String name)





*android.test.RenamingDelegatingContext.getDatabasePrefix()*

public |java.lang.String| getDatabasePrefix()





*android.test.RenamingDelegatingContext.getFileStreamPath(String)*

public |java.io.File| getFileStreamPath(java.lang.String name)





*android.test.RenamingDelegatingContext.makeExistingFilesAndDbsAccessible()*

public void makeExistingFilesAndDbsAccessible()





*android.test.RenamingDelegatingContext.openFileInput(String)*

public |java.io.FileInputStream| openFileInput(java.lang.String name)
  throws |java.io.FileNotFoundException|
         




*android.test.RenamingDelegatingContext.openFileOutput(String,int)*

public |java.io.FileOutputStream| openFileOutput(
  java.lang.String name,
  int mode)
  throws |java.io.FileNotFoundException|
         




*android.test.RenamingDelegatingContext.openOrCreateDatabase(String,int,SQLiteDatabase.CursorFactory)*

public |android.database.sqlite.SQLiteDatabase| openOrCreateDatabase(
  java.lang.String name,
  int mode,
  android.database.sqlite.SQLiteDatabase.CursorFactory factory)





*android.test.RenamingDelegatingContext.openOrCreateDatabase(String,int,SQLiteDatabase.CursorFactory,DatabaseErrorHandler)*

public |android.database.sqlite.SQLiteDatabase| openOrCreateDatabase(
  java.lang.String name,
  int mode,
  android.database.sqlite.SQLiteDatabase.CursorFactory factory,
  android.database.DatabaseErrorHandler errorHandler)





*android.test.RenamingDelegatingContext.providerWithRenamedContext(Class<T>,Context,String)*

public static |T| providerWithRenamedContext(
  java.lang.Class<T> contentProvider,
  android.content.Context c,
  java.lang.String filePrefix)
  throws |java.lang.IllegalAccessException|
         |java.lang.InstantiationException|
         




*android.test.RenamingDelegatingContext.providerWithRenamedContext(Class<T>,Context,String,boolean)*

public static |T| providerWithRenamedContext(
  java.lang.Class<T> contentProvider,
  android.content.Context c,
  java.lang.String filePrefix,
  boolean allowAccessToExistingFilesAndDbs)
  throws |java.lang.IllegalAccessException|
         |java.lang.InstantiationException|
         





