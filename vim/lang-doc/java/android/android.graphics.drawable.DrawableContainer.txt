*android.graphics.drawable.DrawableContainer* *DrawableContainer* 

public class DrawableContainer
  extends    |android.graphics.drawable.Drawable|
  implements |android.graphics.drawable.Drawable.Callback|

|android.graphics.drawable.DrawableContainer_Description|
|android.graphics.drawable.DrawableContainer_Fields|
|android.graphics.drawable.DrawableContainer_Constructors|
|android.graphics.drawable.DrawableContainer_Methods|

================================================================================

*android.graphics.drawable.DrawableContainer_Constructors*
|android.graphics.drawable.DrawableContainer()|

*android.graphics.drawable.DrawableContainer_Methods*
|android.graphics.drawable.DrawableContainer.draw(Canvas)|
|android.graphics.drawable.DrawableContainer.getAlpha()|
|android.graphics.drawable.DrawableContainer.getChangingConfigurations()|
|android.graphics.drawable.DrawableContainer.getConstantState()|
|android.graphics.drawable.DrawableContainer.getCurrent()|
|android.graphics.drawable.DrawableContainer.getIntrinsicHeight()|
|android.graphics.drawable.DrawableContainer.getIntrinsicWidth()|
|android.graphics.drawable.DrawableContainer.getMinimumHeight()|
|android.graphics.drawable.DrawableContainer.getMinimumWidth()|
|android.graphics.drawable.DrawableContainer.getOpacity()|
|android.graphics.drawable.DrawableContainer.getPadding(Rect)|
|android.graphics.drawable.DrawableContainer.invalidateDrawable(Drawable)|
|android.graphics.drawable.DrawableContainer.isAutoMirrored()|
|android.graphics.drawable.DrawableContainer.isStateful()|
|android.graphics.drawable.DrawableContainer.jumpToCurrentState()|
|android.graphics.drawable.DrawableContainer.mutate()|
|android.graphics.drawable.DrawableContainer.onBoundsChange(Rect)|
|android.graphics.drawable.DrawableContainer.onLevelChange(int)|
|android.graphics.drawable.DrawableContainer.onStateChange(int[])|
|android.graphics.drawable.DrawableContainer.scheduleDrawable(Drawable,Runnable,long)|
|android.graphics.drawable.DrawableContainer.selectDrawable(int)|
|android.graphics.drawable.DrawableContainer.setAlpha(int)|
|android.graphics.drawable.DrawableContainer.setAutoMirrored(boolean)|
|android.graphics.drawable.DrawableContainer.setColorFilter(ColorFilter)|
|android.graphics.drawable.DrawableContainer.setConstantState(DrawableContainer.DrawableContainerState)|
|android.graphics.drawable.DrawableContainer.setDither(boolean)|
|android.graphics.drawable.DrawableContainer.setEnterFadeDuration(int)|
|android.graphics.drawable.DrawableContainer.setExitFadeDuration(int)|
|android.graphics.drawable.DrawableContainer.setVisible(boolean,boolean)|
|android.graphics.drawable.DrawableContainer.unscheduleDrawable(Drawable,Runnable)|

*android.graphics.drawable.DrawableContainer_Description*





*android.graphics.drawable.DrawableContainer()*

public DrawableContainer()




*android.graphics.drawable.DrawableContainer.draw(Canvas)*

public void draw(android.graphics.Canvas canvas)





*android.graphics.drawable.DrawableContainer.getAlpha()*

public int getAlpha()





*android.graphics.drawable.DrawableContainer.getChangingConfigurations()*

public int getChangingConfigurations()





*android.graphics.drawable.DrawableContainer.getConstantState()*

public |android.graphics.drawable.Drawable.ConstantState| getConstantState()





*android.graphics.drawable.DrawableContainer.getCurrent()*

public |android.graphics.drawable.Drawable| getCurrent()





*android.graphics.drawable.DrawableContainer.getIntrinsicHeight()*

public int getIntrinsicHeight()





*android.graphics.drawable.DrawableContainer.getIntrinsicWidth()*

public int getIntrinsicWidth()





*android.graphics.drawable.DrawableContainer.getMinimumHeight()*

public int getMinimumHeight()





*android.graphics.drawable.DrawableContainer.getMinimumWidth()*

public int getMinimumWidth()





*android.graphics.drawable.DrawableContainer.getOpacity()*

public int getOpacity()





*android.graphics.drawable.DrawableContainer.getPadding(Rect)*

public boolean getPadding(android.graphics.Rect padding)





*android.graphics.drawable.DrawableContainer.invalidateDrawable(Drawable)*

public void invalidateDrawable(android.graphics.drawable.Drawable who)





*android.graphics.drawable.DrawableContainer.isAutoMirrored()*

public boolean isAutoMirrored()





*android.graphics.drawable.DrawableContainer.isStateful()*

public boolean isStateful()





*android.graphics.drawable.DrawableContainer.jumpToCurrentState()*

public void jumpToCurrentState()





*android.graphics.drawable.DrawableContainer.mutate()*

public |android.graphics.drawable.Drawable| mutate()





*android.graphics.drawable.DrawableContainer.onBoundsChange(Rect)*

protected void onBoundsChange(android.graphics.Rect bounds)





*android.graphics.drawable.DrawableContainer.onLevelChange(int)*

protected boolean onLevelChange(int level)





*android.graphics.drawable.DrawableContainer.onStateChange(int[])*

protected boolean onStateChange(int[] state)





*android.graphics.drawable.DrawableContainer.scheduleDrawable(Drawable,Runnable,long)*

public void scheduleDrawable(
  android.graphics.drawable.Drawable who,
  java.lang.Runnable what,
  long when)





*android.graphics.drawable.DrawableContainer.selectDrawable(int)*

public boolean selectDrawable(int idx)





*android.graphics.drawable.DrawableContainer.setAlpha(int)*

public void setAlpha(int alpha)





*android.graphics.drawable.DrawableContainer.setAutoMirrored(boolean)*

public void setAutoMirrored(boolean mirrored)





*android.graphics.drawable.DrawableContainer.setColorFilter(ColorFilter)*

public void setColorFilter(android.graphics.ColorFilter cf)





*android.graphics.drawable.DrawableContainer.setConstantState(DrawableContainer.DrawableContainerState)*

protected void setConstantState(android.graphics.drawable.DrawableContainer.DrawableContainerState state)





*android.graphics.drawable.DrawableContainer.setDither(boolean)*

public void setDither(boolean dither)





*android.graphics.drawable.DrawableContainer.setEnterFadeDuration(int)*

public void setEnterFadeDuration(int ms)





*android.graphics.drawable.DrawableContainer.setExitFadeDuration(int)*

public void setExitFadeDuration(int ms)





*android.graphics.drawable.DrawableContainer.setVisible(boolean,boolean)*

public boolean setVisible(
  boolean visible,
  boolean restart)





*android.graphics.drawable.DrawableContainer.unscheduleDrawable(Drawable,Runnable)*

public void unscheduleDrawable(
  android.graphics.drawable.Drawable who,
  java.lang.Runnable what)






