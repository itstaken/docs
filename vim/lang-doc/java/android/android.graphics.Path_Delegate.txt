*android.graphics.Path_Delegate* *Path_Delegate* Delegate implementing the nativ

public final class Path_Delegate
  extends    |java.lang.Object|

|android.graphics.Path_Delegate_Description|
|android.graphics.Path_Delegate_Fields|
|android.graphics.Path_Delegate_Constructors|
|android.graphics.Path_Delegate_Methods|

================================================================================

*android.graphics.Path_Delegate_Constructors*
|android.graphics.Path_Delegate()|

*android.graphics.Path_Delegate_Methods*
|android.graphics.Path_Delegate.getDelegate(int)|
|android.graphics.Path_Delegate.getJavaShape()|
|android.graphics.Path_Delegate.offset(float,float,Path_Delegate)|Offset the pa
|android.graphics.Path_Delegate.reset()|
|android.graphics.Path_Delegate.setJavaShape(Shape)|
|android.graphics.Path_Delegate.setPathIterator(PathIterator)|
|android.graphics.Path_Delegate.transform(Matrix_Delegate,Path_Delegate)|Transf

*android.graphics.Path_Delegate_Description*

Delegate implementing the native methods of android.graphics.Path 

Through the layoutlib_create tool, the original native methods of Path have 
been replaced by calls to methods of the same name in this delegate class. 

This class behaves like the original native implementation, but in Java, 
keeping previously native data into its own objects and mapping them to int 
that are sent back and forth between it and the original Path class. 



*android.graphics.Path_Delegate()*

public Path_Delegate()




*android.graphics.Path_Delegate.getDelegate(int)*

public static |android.graphics.Path_Delegate| getDelegate(int nPath)





*android.graphics.Path_Delegate.getJavaShape()*

public |java.awt.Shape| getJavaShape()





*android.graphics.Path_Delegate.offset(float,float,Path_Delegate)*

public void offset(
  float dx,
  float dy,
  android.graphics.Path_Delegate dst)

Offset the path by (dx,dy), returning true on success 


    dx - The amount in the X direction to offset the entire path 
    dy - The amount in the Y direction to offset the entire path 
    dst - The translated path is written here. If this is null, then the original path is 
       modified. 

*android.graphics.Path_Delegate.reset()*

public void reset()





*android.graphics.Path_Delegate.setJavaShape(Shape)*

public void setJavaShape(java.awt.Shape shape)





*android.graphics.Path_Delegate.setPathIterator(PathIterator)*

public void setPathIterator(java.awt.geom.PathIterator iterator)





*android.graphics.Path_Delegate.transform(Matrix_Delegate,Path_Delegate)*

public void transform(
  android.graphics.Matrix_Delegate matrix,
  android.graphics.Path_Delegate dst)

Transform the points in this path by matrix, and write the answer into dst. If 
dst is null, then the the original path is modified. 


    matrix - The matrix to apply to the path 
    dst - The transformed path is written here. If dst is null, then the the original 
       path is modified 


