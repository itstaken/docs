*android.util.TrustedTime* *TrustedTime* Interface that provides trusted time in

public interface interface TrustedTime


|android.util.TrustedTime_Description|
|android.util.TrustedTime_Fields|
|android.util.TrustedTime_Constructors|
|android.util.TrustedTime_Methods|

================================================================================

*android.util.TrustedTime_Methods*
|android.util.TrustedTime.currentTimeMillis()|Return current time similar toSys
|android.util.TrustedTime.forceRefresh()|Force update with an external trusted 
|android.util.TrustedTime.getCacheAge()|Return time since last trusted time sou
|android.util.TrustedTime.getCacheCertainty()|Return certainty of cached truste
|android.util.TrustedTime.hasCache()|Check if this instance has cached a respon

*android.util.TrustedTime_Description*

Interface that provides trusted time information, possibly coming from an NTP 
server. Implementations may cache answers until (|android.util.TrustedTime|) . 



*android.util.TrustedTime.currentTimeMillis()*

public long currentTimeMillis()

Return current time similar to (|java.lang.System|) , possibly using a cached 
authoritative time source. 



*android.util.TrustedTime.forceRefresh()*

public boolean forceRefresh()

Force update with an external trusted time source, returningtruewhen 
successful. 



*android.util.TrustedTime.getCacheAge()*

public long getCacheAge()

Return time since last trusted time source contact, or (|java.lang.Long|) if 
never contacted. 



*android.util.TrustedTime.getCacheCertainty()*

public long getCacheCertainty()

Return certainty of cached trusted time in milliseconds, or (|java.lang.Long|) 
if never contacted. Smaller values are more precise. 



*android.util.TrustedTime.hasCache()*

public boolean hasCache()

Check if this instance has cached a response from a trusted time source. 




