*android.database.IBulkCursor* *IBulkCursor* This interface provides a low-level

public interface interface IBulkCursor

  implements |android.os.IInterface|

|android.database.IBulkCursor_Description|
|android.database.IBulkCursor_Fields|
|android.database.IBulkCursor_Constructors|
|android.database.IBulkCursor_Methods|

================================================================================

*android.database.IBulkCursor_Fields*
|int_android.database.IBulkCursor.CLOSE_TRANSACTION|
|int_android.database.IBulkCursor.DEACTIVATE_TRANSACTION|
|java.lang.String_android.database.IBulkCursor.descriptor|
|int_android.database.IBulkCursor.GET_CURSOR_WINDOW_TRANSACTION|
|int_android.database.IBulkCursor.GET_EXTRAS_TRANSACTION|
|int_android.database.IBulkCursor.ON_MOVE_TRANSACTION|
|int_android.database.IBulkCursor.REQUERY_TRANSACTION|
|int_android.database.IBulkCursor.RESPOND_TRANSACTION|

*android.database.IBulkCursor_Methods*
|android.database.IBulkCursor.close()|
|android.database.IBulkCursor.deactivate()|
|android.database.IBulkCursor.getExtras()|
|android.database.IBulkCursor.getWindow(int)|Gets a cursor window that contains
|android.database.IBulkCursor.onMove(int)|Notifies the cursor that the position
|android.database.IBulkCursor.requery(IContentObserver)|
|android.database.IBulkCursor.respond(Bundle)|

*android.database.IBulkCursor_Description*

This interface provides a low-level way to pass bulk cursor data across both 
process and language boundaries. Application code should use the Cursor 
interface directly. 



*int_android.database.IBulkCursor.CLOSE_TRANSACTION*




*int_android.database.IBulkCursor.DEACTIVATE_TRANSACTION*




*java.lang.String_android.database.IBulkCursor.descriptor*




*int_android.database.IBulkCursor.GET_CURSOR_WINDOW_TRANSACTION*




*int_android.database.IBulkCursor.GET_EXTRAS_TRANSACTION*




*int_android.database.IBulkCursor.ON_MOVE_TRANSACTION*




*int_android.database.IBulkCursor.REQUERY_TRANSACTION*




*int_android.database.IBulkCursor.RESPOND_TRANSACTION*





*android.database.IBulkCursor.close()*

public void close()
  throws |android.os.RemoteException|
         




*android.database.IBulkCursor.deactivate()*

public void deactivate()
  throws |android.os.RemoteException|
         




*android.database.IBulkCursor.getExtras()*

public |android.os.Bundle| getExtras()
  throws |android.os.RemoteException|
         




*android.database.IBulkCursor.getWindow(int)*

public |android.database.CursorWindow| getWindow(int position)
  throws |android.os.RemoteException|
         
Gets a cursor window that contains the specified position. The window will 
contain a range of rows around the specified position. 



*android.database.IBulkCursor.onMove(int)*

public void onMove(int position)
  throws |android.os.RemoteException|
         
Notifies the cursor that the position has changed. Only called when 
(|android.database.IBulkCursor|) returns true. 


    position - The new position 

*android.database.IBulkCursor.requery(IContentObserver)*

public int requery(IContentObserver observer)
  throws |android.os.RemoteException|
         




*android.database.IBulkCursor.respond(Bundle)*

public |android.os.Bundle| respond(android.os.Bundle extras)
  throws |android.os.RemoteException|
         





