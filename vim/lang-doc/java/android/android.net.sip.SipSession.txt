*android.net.sip.SipSession* *SipSession* 

public final class SipSession
  extends    |java.lang.Object|

|android.net.sip.SipSession_Description|
|android.net.sip.SipSession_Fields|
|android.net.sip.SipSession_Constructors|
|android.net.sip.SipSession_Methods|

================================================================================

*android.net.sip.SipSession_Methods*
|android.net.sip.SipSession.answerCall(String,int)|
|android.net.sip.SipSession.changeCall(String,int)|
|android.net.sip.SipSession.endCall()|
|android.net.sip.SipSession.getCallId()|
|android.net.sip.SipSession.getLocalIp()|
|android.net.sip.SipSession.getLocalProfile()|
|android.net.sip.SipSession.getPeerProfile()|
|android.net.sip.SipSession.getState()|
|android.net.sip.SipSession.isInCall()|
|android.net.sip.SipSession.makeCall(SipProfile,String,int)|
|android.net.sip.SipSession.register(int)|
|android.net.sip.SipSession.setListener(SipSession.Listener)|
|android.net.sip.SipSession.unregister()|

*android.net.sip.SipSession_Description*





*android.net.sip.SipSession.answerCall(String,int)*

public void answerCall(
  java.lang.String sessionDescription,
  int timeout)





*android.net.sip.SipSession.changeCall(String,int)*

public void changeCall(
  java.lang.String sessionDescription,
  int timeout)





*android.net.sip.SipSession.endCall()*

public void endCall()





*android.net.sip.SipSession.getCallId()*

public |java.lang.String| getCallId()





*android.net.sip.SipSession.getLocalIp()*

public |java.lang.String| getLocalIp()





*android.net.sip.SipSession.getLocalProfile()*

public |android.net.sip.SipProfile| getLocalProfile()





*android.net.sip.SipSession.getPeerProfile()*

public |android.net.sip.SipProfile| getPeerProfile()





*android.net.sip.SipSession.getState()*

public int getState()





*android.net.sip.SipSession.isInCall()*

public boolean isInCall()





*android.net.sip.SipSession.makeCall(SipProfile,String,int)*

public void makeCall(
  android.net.sip.SipProfile callee,
  java.lang.String sessionDescription,
  int timeout)





*android.net.sip.SipSession.register(int)*

public void register(int duration)





*android.net.sip.SipSession.setListener(SipSession.Listener)*

public void setListener(android.net.sip.SipSession.Listener listener)





*android.net.sip.SipSession.unregister()*

public void unregister()






