*android.content.res.BridgeResources.NinePatchInputStream* *BridgeResources.NinePatchInputStream* 

public class BridgeResources.NinePatchInputStream
  extends    |java.io.FileInputStream|

|android.content.res.BridgeResources.NinePatchInputStream_Description|
|android.content.res.BridgeResources.NinePatchInputStream_Fields|
|android.content.res.BridgeResources.NinePatchInputStream_Constructors|
|android.content.res.BridgeResources.NinePatchInputStream_Methods|

================================================================================

*android.content.res.BridgeResources.NinePatchInputStream_Constructors*
|android.content.res.BridgeResources.NinePatchInputStream(File)|

*android.content.res.BridgeResources.NinePatchInputStream_Methods*
|android.content.res.BridgeResources.NinePatchInputStream.disableFakeMarkSupport()|
|android.content.res.BridgeResources.NinePatchInputStream.markSupported()|

*android.content.res.BridgeResources.NinePatchInputStream_Description*

Simpler wrapper around FileInputStream. This is used when the input stream 
represent not a normal bitmap but a nine patch. This is useful when the 
InputStream is created in a method but used in another that needs to know 
whether this is 9-patch or not, such as BitmapFactory. 



*android.content.res.BridgeResources.NinePatchInputStream(File)*

public BridgeResources.NinePatchInputStream(java.io.File file)
  throws |java.io.FileNotFoundException|
         



*android.content.res.BridgeResources.NinePatchInputStream.disableFakeMarkSupport()*

public void disableFakeMarkSupport()





*android.content.res.BridgeResources.NinePatchInputStream.markSupported()*

public boolean markSupported()






