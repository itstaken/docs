*android.view.ScaleGestureDetector* *ScaleGestureDetector* Detects scaling trans

public class ScaleGestureDetector
  extends    |java.lang.Object|

|android.view.ScaleGestureDetector_Description|
|android.view.ScaleGestureDetector_Fields|
|android.view.ScaleGestureDetector_Constructors|
|android.view.ScaleGestureDetector_Methods|

================================================================================

*android.view.ScaleGestureDetector_Constructors*
|android.view.ScaleGestureDetector(Context,ScaleGestureDetector.OnScaleGestureListener)|
|android.view.ScaleGestureDetector(Context,ScaleGestureDetector.OnScaleGestureListener,Handler)|

*android.view.ScaleGestureDetector_Methods*
|android.view.ScaleGestureDetector.getCurrentSpan()|Return the average distance
|android.view.ScaleGestureDetector.getCurrentSpanX()|Return the average X dista
|android.view.ScaleGestureDetector.getCurrentSpanY()|Return the average Y dista
|android.view.ScaleGestureDetector.getEventTime()|Return the event time of the 
|android.view.ScaleGestureDetector.getFocusX()|Get the X coordinate of the curr
|android.view.ScaleGestureDetector.getFocusY()|Get the Y coordinate of the curr
|android.view.ScaleGestureDetector.getPreviousSpan()|Return the previous averag
|android.view.ScaleGestureDetector.getPreviousSpanX()|Return the previous avera
|android.view.ScaleGestureDetector.getPreviousSpanY()|Return the previous avera
|android.view.ScaleGestureDetector.getScaleFactor()|Return the scaling factor f
|android.view.ScaleGestureDetector.getTimeDelta()|Return the time difference in
|android.view.ScaleGestureDetector.isInProgress()|Returnstrueif a scale gesture
|android.view.ScaleGestureDetector.isQuickScaleEnabled()|Return whether the qui
|android.view.ScaleGestureDetector.onTouchEvent(MotionEvent)|Accepts MotionEven
|android.view.ScaleGestureDetector.setQuickScaleEnabled(boolean)|Set whether th

*android.view.ScaleGestureDetector_Description*

Detects scaling transformation gestures using the supplied 
(|android.view.MotionEvent|) s. The 
(|android.view.ScaleGestureDetector.OnScaleGestureListener|) callback will 
notify users when a particular gesture event has occurred. 

This class should only be used with (|android.view.MotionEvent|) s reported via 
touch. 

To use this class: 

Create an instance of theScaleGestureDetectorfor your (|android.view.View|) In 
the (|android.view.View|) method ensure you call 
(|android.view.ScaleGestureDetector|) . The methods defined in your callback 
will be executed when the events occur. 



*android.view.ScaleGestureDetector(Context,ScaleGestureDetector.OnScaleGestureListener)*

public ScaleGestureDetector(
  android.content.Context context,
  android.view.ScaleGestureDetector.OnScaleGestureListener listener)

Creates a ScaleGestureDetector with the supplied listener. You may only use 
this constructor from a Looper(|android.os.Looper|) thread. 

    context - the application's context 
    listener - the listener invoked for all the callbacks, this must not be null. 

*android.view.ScaleGestureDetector(Context,ScaleGestureDetector.OnScaleGestureListener,Handler)*

public ScaleGestureDetector(
  android.content.Context context,
  android.view.ScaleGestureDetector.OnScaleGestureListener listener,
  android.os.Handler handler)

Creates a ScaleGestureDetector with the supplied listener. 

    context - the application's context 
    listener - the listener invoked for all the callbacks, this must not be null. 
    handler - the handler to use for running deferred listener events. 

*android.view.ScaleGestureDetector.getCurrentSpan()*

public float getCurrentSpan()

Return the average distance between each of the pointers forming the gesture in 
progress through the focal point. 



    Returns: Distance between pointers in pixels. 

*android.view.ScaleGestureDetector.getCurrentSpanX()*

public float getCurrentSpanX()

Return the average X distance between each of the pointers forming the gesture 
in progress through the focal point. 



    Returns: Distance between pointers in pixels. 

*android.view.ScaleGestureDetector.getCurrentSpanY()*

public float getCurrentSpanY()

Return the average Y distance between each of the pointers forming the gesture 
in progress through the focal point. 



    Returns: Distance between pointers in pixels. 

*android.view.ScaleGestureDetector.getEventTime()*

public long getEventTime()

Return the event time of the current event being processed. 



    Returns: Current event time in milliseconds. 

*android.view.ScaleGestureDetector.getFocusX()*

public float getFocusX()

Get the X coordinate of the current gesture's focal point. If a gesture is in 
progress, the focal point is between each of the pointers forming the gesture. 

If (|android.view.ScaleGestureDetector|) would return false, the result of this 
function is undefined. 



    Returns: X coordinate of the focal point in pixels. 

*android.view.ScaleGestureDetector.getFocusY()*

public float getFocusY()

Get the Y coordinate of the current gesture's focal point. If a gesture is in 
progress, the focal point is between each of the pointers forming the gesture. 

If (|android.view.ScaleGestureDetector|) would return false, the result of this 
function is undefined. 



    Returns: Y coordinate of the focal point in pixels. 

*android.view.ScaleGestureDetector.getPreviousSpan()*

public float getPreviousSpan()

Return the previous average distance between each of the pointers forming the 
gesture in progress through the focal point. 



    Returns: Previous distance between pointers in pixels. 

*android.view.ScaleGestureDetector.getPreviousSpanX()*

public float getPreviousSpanX()

Return the previous average X distance between each of the pointers forming the 
gesture in progress through the focal point. 



    Returns: Previous distance between pointers in pixels. 

*android.view.ScaleGestureDetector.getPreviousSpanY()*

public float getPreviousSpanY()

Return the previous average Y distance between each of the pointers forming the 
gesture in progress through the focal point. 



    Returns: Previous distance between pointers in pixels. 

*android.view.ScaleGestureDetector.getScaleFactor()*

public float getScaleFactor()

Return the scaling factor from the previous scale event to the current event. 
This value is defined as ( (|android.view.ScaleGestureDetector|) / 
(|android.view.ScaleGestureDetector|) ). 



    Returns: The current scaling factor. 

*android.view.ScaleGestureDetector.getTimeDelta()*

public long getTimeDelta()

Return the time difference in milliseconds between the previous accepted 
scaling event and the current scaling event. 



    Returns: Time difference since the last scaling event in milliseconds. 

*android.view.ScaleGestureDetector.isInProgress()*

public boolean isInProgress()

Returnstrueif a scale gesture is in progress. 



*android.view.ScaleGestureDetector.isQuickScaleEnabled()*

public boolean isQuickScaleEnabled()

Return whether the quick scale gesture, in which the user performs a double tap 
followed by a swipe, should perform scaling. 
(|android.view.ScaleGestureDetector|) . 



*android.view.ScaleGestureDetector.onTouchEvent(MotionEvent)*

public boolean onTouchEvent(android.view.MotionEvent event)

Accepts MotionEvents and dispatches events to a 
(|android.view.ScaleGestureDetector.OnScaleGestureListener|) when appropriate. 

Applications should pass a complete and consistent event stream to this method. 
A complete and consistent event stream involves all MotionEvents from the 
initial ACTION_DOWN to the final ACTION_UP or ACTION_CANCEL. 


    event - The event to process 

    Returns: true if the event was processed and the detector wants to receive the rest of 
             the MotionEvents in this event stream. 

*android.view.ScaleGestureDetector.setQuickScaleEnabled(boolean)*

public void setQuickScaleEnabled(boolean scales)

Set whether the associated 
(|android.view.ScaleGestureDetector.OnScaleGestureListener|) should receive 
onScale callbacks when the user performs a doubleTap followed by a swipe. Note 
that this is enabled by default if the app targets API 19 and newer. 


    scales - true to enable quick scaling, false to disable 


