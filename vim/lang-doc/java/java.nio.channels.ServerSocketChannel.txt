*java.nio.channels.ServerSocketChannel* *ServerSocketChannel* A selectable chann

public abstract class ServerSocketChannel
  extends    |java.nio.channels.spi.AbstractSelectableChannel|
  implements |java.nio.channels.NetworkChannel|

|java.nio.channels.ServerSocketChannel_Description|
|java.nio.channels.ServerSocketChannel_Fields|
|java.nio.channels.ServerSocketChannel_Constructors|
|java.nio.channels.ServerSocketChannel_Methods|

================================================================================

*java.nio.channels.ServerSocketChannel_Constructors*
|java.nio.channels.ServerSocketChannel(SelectorProvider)|Initializes a new inst

*java.nio.channels.ServerSocketChannel_Methods*
|java.nio.channels.ServerSocketChannel.accept()|Accepts a connection made to th
|java.nio.channels.ServerSocketChannel.bind(SocketAddress)|Binds the channel's 
|java.nio.channels.ServerSocketChannel.bind(SocketAddress,int)|Binds the channe
|java.nio.channels.ServerSocketChannel.open()|Opens a server-socket channel.
|java.nio.channels.ServerSocketChannel.setOption(SocketOption<T>,T)|
|java.nio.channels.ServerSocketChannel.socket()|Retrieves a server socket assoc
|java.nio.channels.ServerSocketChannel.validOps()|Returns an operation set iden

*java.nio.channels.ServerSocketChannel_Description*

A selectable channel for stream-oriented listening sockets. 

A server-socket channel is created by invoking the 
open(|java.nio.channels.ServerSocketChannel|) method of this class. It is not 
possible to create a channel for an arbitrary, pre-existing 
(|java.net.ServerSocket|) . A newly-created server-socket channel is open but 
not yet bound. An attempt to invoke the 
accept(|java.nio.channels.ServerSocketChannel|) method of an unbound 
server-socket channel will cause a (|java.nio.channels.NotYetBoundException|) 
to be thrown. A server-socket channel can be bound by invoking one of the 
bind(|java.nio.channels.ServerSocketChannel|) methods defined by this class. 

Socket options are configured using the 
setOption(|java.nio.channels.ServerSocketChannel|) method. Server-socket 
channels support the following options: 



Option Name Description 

SO_RCVBUF(|java.net.StandardSocketOptions|) The size of the socket receive 
buffer 

SO_REUSEADDR(|java.net.StandardSocketOptions|) Re-use address 



Additional (implementation specific) options may also be supported. 

Server-socket channels are safe for use by multiple concurrent threads. 



*java.nio.channels.ServerSocketChannel(SelectorProvider)*

protected ServerSocketChannel(java.nio.channels.spi.SelectorProvider provider)

Initializes a new instance of this class. 


*java.nio.channels.ServerSocketChannel.accept()*

public abstract |java.nio.channels.SocketChannel| accept()
  throws |java.io.IOException|
         
Accepts a connection made to this channel's socket. 

If this channel is in non-blocking mode then this method will immediately 
return null if there are no pending connections. Otherwise it will block 
indefinitely until a new connection is available or an I/O error occurs. 

The socket channel returned by this method, if any, will be in blocking mode 
regardless of the blocking mode of this channel. 

This method performs exactly the same security checks as the 
accept(|java.net.ServerSocket|) method of the (|java.net.ServerSocket|) class. 
That is, if a security manager has been installed then for each new connection 
this method verifies that the address and port number of the connection's 
remote endpoint are permitted by the security manager's 
checkAccept(|java.lang.SecurityManager|) method. 



    Returns: The socket channel for the new connection, or null if this channel is in 
             non-blocking mode and no connection is available to be accepted 

*java.nio.channels.ServerSocketChannel.bind(SocketAddress)*

public final |java.nio.channels.ServerSocketChannel| bind(java.net.SocketAddress local)
  throws |java.io.IOException|
         
Binds the channel's socket to a local address and configures the socket to 
listen for connections. 

An invocation of this method is equivalent to the following: 

bind(local, 0); 


    local - The local address to bind the socket, or {@code null} to bind to an 
       automatically assigned socket address 

    Returns: 

*java.nio.channels.ServerSocketChannel.bind(SocketAddress,int)*

public abstract |java.nio.channels.ServerSocketChannel| bind(
  java.net.SocketAddress local,
  int backlog)
  throws |java.io.IOException|
         
Binds the channel's socket to a local address and configures the socket to 
listen for connections. 

This method is used to establish an association between the socket and a local 
address. Once an association is established then the socket remains bound until 
the channel is closed. 

Thebacklogparameter is the maximum number of pending connections on the socket. 
Its exact semantics are implementation specific. In particular, an 
implementation may impose a maximum length or may choose to ignore the 
parameter altogther. If thebacklogparameter has the value0, or a negative 
value, then an implementation specific default is used. 


    local - The address to bind the socket, or {@code null} to bind to an automatically 
       assigned socket address 
    backlog - The maximum number of pending connections 

    Returns: 

*java.nio.channels.ServerSocketChannel.open()*

public static |java.nio.channels.ServerSocketChannel| open()
  throws |java.io.IOException|
         
Opens a server-socket channel. 

The new channel is created by invoking the 
openServerSocketChannel(|java.nio.channels.spi.SelectorProvider|) method of the 
system-wide default (|java.nio.channels.spi.SelectorProvider|) object. 

The new channel's socket is initially unbound; it must be bound to a specific 
address via one of its socket's bind(|java.net.ServerSocket|) methods before 
connections can be accepted. 



    Returns: A new socket channel 

*java.nio.channels.ServerSocketChannel.setOption(SocketOption<T>,T)*

public abstract |java.nio.channels.ServerSocketChannel| setOption(
  java.net.SocketOption<T> name,
  T value)
  throws |java.io.IOException|
         




*java.nio.channels.ServerSocketChannel.socket()*

public abstract |java.net.ServerSocket| socket()

Retrieves a server socket associated with this channel. 

The returned object will not declare any public methods that are not declared 
in the (|java.net.ServerSocket|) class. 



    Returns: A server socket associated with this channel 

*java.nio.channels.ServerSocketChannel.validOps()*

public final int validOps()

Returns an operation set identifying this channel's supported operations. 

Server-socket channels only support the accepting of new connections, so this 
method returns (|java.nio.channels.SelectionKey|) . 



    Returns: The valid-operation set 


