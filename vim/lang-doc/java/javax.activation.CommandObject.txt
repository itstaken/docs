*javax.activation.CommandObject* *CommandObject* JavaBeans components that are A

public interface interface CommandObject


|javax.activation.CommandObject_Description|
|javax.activation.CommandObject_Fields|
|javax.activation.CommandObject_Constructors|
|javax.activation.CommandObject_Methods|

================================================================================

*javax.activation.CommandObject_Methods*
|javax.activation.CommandObject.setCommandContext(String,DataHandler)|Initializ

*javax.activation.CommandObject_Description*

JavaBeans components that are Activation Framework aware implement this 
interface to find out which command verb they're being asked to perform, and to 
obtain the DataHandler representing the data they should operate on. JavaBeans 
that don't implement this interface may be used as well. Such commands may 
obtain the data using the Externalizable interface, or using an 
application-specific method. 



*javax.activation.CommandObject.setCommandContext(String,DataHandler)*

public void setCommandContext(
  java.lang.String verb,
  javax.activation.DataHandler dh)
  throws |java.io.IOException|
         
Initialize the Command with the verb it is requested to handle and the 
DataHandler that describes the data it will operate on. NOTE: it is acceptable 
for the caller to pass null as the value for DataHandler. 


    verb - The Command Verb this object refers to. 
    dh - The DataHandler. 


