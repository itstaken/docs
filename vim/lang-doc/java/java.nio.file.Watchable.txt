*java.nio.file.Watchable* *Watchable* An object that may be registered with a wa

public interface interface Watchable


|java.nio.file.Watchable_Description|
|java.nio.file.Watchable_Fields|
|java.nio.file.Watchable_Constructors|
|java.nio.file.Watchable_Methods|

================================================================================

*java.nio.file.Watchable_Methods*
|java.nio.file.Watchable.register(WatchService,WatchEvent.Kind<?>...)|Registers
|java.nio.file.Watchable.register(WatchService,WatchEvent.Kind<?>[],WatchEvent.Modifier...)|

*java.nio.file.Watchable_Description*

An object that may be registered with a watch service so that it can be watched 
for changes and events. 

This interface defines the register(|java.nio.file.Watchable|) method to 
register the object with a (|java.nio.file.WatchService|) returning a 
(|java.nio.file.WatchKey|) to represent the registration. An object may be 
registered with more than one watch service. Registration with a watch service 
is cancelled by invoking the key's cancel(|java.nio.file.WatchKey|) method. 



*java.nio.file.Watchable.register(WatchService,WatchEvent.Kind<?>...)*

public |java.nio.file.WatchKey| register(
  java.nio.file.WatchService watcher,
  java.nio.file.WatchEvent.Kind[] events)
  throws |java.io.IOException|
         
Registers an object with a watch service. 

An invocation of this method behaves in exactly the same way as the invocation 

watchable. register(|java.nio.file.Watchable|) (watcher, events, new 
WatchEvent.Modifier[0]); 


    watcher - the watch service to which this object is to be registered 
    events - the events for which this object should be registered 

    Returns: a key representing the registration of this object with the given watch service 

*java.nio.file.Watchable.register(WatchService,WatchEvent.Kind<?>[],WatchEvent.Modifier...)*

public |java.nio.file.WatchKey| register(
  java.nio.file.WatchService watcher,
  java.nio.file.WatchEvent.Kind[] events,
  java.nio.file.WatchEvent.Modifier[] modifiers)
  throws |java.io.IOException|
         
Registers an object with a watch service. 

If the file system object identified by this object is currently registered 
with the watch service then the watch key, representing that registration, is 
returned after changing the event set or modifiers to those specified by 
theeventsandmodifiersparameters. Changing the event set does not cause pending 
events for the object to be discarded. Objects are automatically registered for 
the OVERFLOW(|java.nio.file.StandardWatchEventKinds|) event. This event is not 
required to be present in the array of events. 

Otherwise the file system object has not yet been registered with the given 
watch service, so it is registered and the resulting new key is returned. 

Implementations of this interface should specify the events they support. 


    watcher - the watch service to which this object is to be registered 
    events - the events for which this object should be registered 
    modifiers - the modifiers, if any, that modify how the object is registered 

    Returns: a key representing the registration of this object with the given watch service 


