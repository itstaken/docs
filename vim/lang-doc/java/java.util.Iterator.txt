*java.util.Iterator* *Iterator* An iterator over a collection.

public interface interface Iterator<E>


|java.util.Iterator_Description|
|java.util.Iterator_Fields|
|java.util.Iterator_Constructors|
|java.util.Iterator_Methods|

================================================================================

*java.util.Iterator_Methods*
|java.util.Iterator.hasNext()|Returnstrueif the iteration has more elements.
|java.util.Iterator.next()|Returns the next element in the iteration.
|java.util.Iterator.remove()|Removes from the underlying collection the last el

*java.util.Iterator_Description*

An iterator over a collection.Iteratortakes the place of 
(|java.util.Enumeration|) in the Java Collections Framework. Iterators differ 
from enumerations in two ways: 

Iterators allow the caller to remove elements from the underlying collection 
during the iteration with well-defined semantics. Method names have been 
improved. 

This interface is a member of the <a 
href="/../technotes/guides/collections/index.html"> Java Collections Framework. 



*java.util.Iterator.hasNext()*

public boolean hasNext()

Returnstrueif the iteration has more elements. (In other words, returnstrueif 
(|java.util.Iterator|) would return an element rather than throwing an 
exception.) 



    Returns: {@code true} if the iteration has more elements 

*java.util.Iterator.next()*

public |E| next()

Returns the next element in the iteration. 



    Returns: the next element in the iteration 

*java.util.Iterator.remove()*

public void remove()

Removes from the underlying collection the last element returned by this 
iterator (optional operation). This method can be called only once per call to 
(|java.util.Iterator|) . The behavior of an iterator is unspecified if the 
underlying collection is modified while the iteration is in progress in any way 
other than by calling this method. 




