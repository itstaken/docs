*java.lang.Error* *Error* AnErroris a subclass ofThrowablethat indicates serious

public class Error
  extends    |java.lang.Throwable|

|java.lang.Error_Description|
|java.lang.Error_Fields|
|java.lang.Error_Constructors|
|java.lang.Error_Methods|

================================================================================

*java.lang.Error_Constructors*
|java.lang.Error()|Constructs a new error withnullas its detail message.
|java.lang.Error(String)|Constructs a new error with the specified detail messa
|java.lang.Error(String,Throwable)|Constructs a new error with the specified de
|java.lang.Error(String,Throwable,boolean,boolean)|Constructs a new error with 
|java.lang.Error(Throwable)|Constructs a new error with the specified cause and

*java.lang.Error_Description*

AnErroris a subclass ofThrowablethat indicates serious problems that a 
reasonable application should not try to catch. Most such errors are abnormal 
conditions. TheThreadDeatherror, though a "normal" condition, is also a 
subclass ofErrorbecause most applications should not try to catch it. 

A method is not required to declare in itsthrowsclause any subclasses 
ofErrorthat might be thrown during the execution of the method but not caught, 
since these errors are abnormal conditions that should never occur. 

That is,Errorand its subclasses are regarded as unchecked exceptions for the 
purposes of compile-time checking of exceptions. 



*java.lang.Error()*

public Error()

Constructs a new error withnullas its detail message. The cause is not 
initialized, and may subsequently be initialized by a call to 
(|java.lang.Error|) . 


*java.lang.Error(String)*

public Error(java.lang.String message)

Constructs a new error with the specified detail message. The cause is not 
initialized, and may subsequently be initialized by a call to 
(|java.lang.Error|) . 

    message - the detail message. The detail message is saved for later retrieval by the 
       {@link #getMessage()} method. 

*java.lang.Error(String,Throwable)*

public Error(
  java.lang.String message,
  java.lang.Throwable cause)

Constructs a new error with the specified detail message and cause. Note that 
the detail message associated withcauseis not automatically incorporated in 
this error's detail message. 

    message - the detail message (which is saved for later retrieval by the {@link 
       #getMessage()} method). 
    cause - the cause (which is saved for later retrieval by the {@link #getCause()} 
       method). (A {@code null} value is permitted, and indicates that the 
       cause is nonexistent or unknown.) 

*java.lang.Error(String,Throwable,boolean,boolean)*

protected Error(
  java.lang.String message,
  java.lang.Throwable cause,
  boolean enableSuppression,
  boolean writableStackTrace)

Constructs a new error with the specified detail message, cause, suppression 
enabled or disabled, and writable stack trace enabled or disabled. 

    message - the detail message. 
    cause - the cause. (A {@code null} value is permitted, and indicates that the cause is 
       nonexistent or unknown.) 
    enableSuppression - whether or not suppression is enabled or disabled 
    writableStackTrace - whether or not the stack trace should be writable 

*java.lang.Error(Throwable)*

public Error(java.lang.Throwable cause)

Constructs a new error with the specified cause and a detail message 
of(cause==null ? null : cause.toString())(which typically contains the class 
and detail message ofcause). This constructor is useful for errors that are 
little more than wrappers for other throwables. 

    cause - the cause (which is saved for later retrieval by the {@link #getCause()} 
       method). (A {@code null} value is permitted, and indicates that the 
       cause is nonexistent or unknown.) 

