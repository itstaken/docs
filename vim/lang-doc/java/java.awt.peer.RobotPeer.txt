*java.awt.peer.RobotPeer* *RobotPeer* RobotPeer defines an interface whereby too

public interface interface RobotPeer


|java.awt.peer.RobotPeer_Description|
|java.awt.peer.RobotPeer_Fields|
|java.awt.peer.RobotPeer_Constructors|
|java.awt.peer.RobotPeer_Methods|

================================================================================

*java.awt.peer.RobotPeer_Methods*
|java.awt.peer.RobotPeer.dispose()|Disposes the robot peer when it is not neede
|java.awt.peer.RobotPeer.getRGBPixel(int,int)|Gets the RGB value of the specifi
|java.awt.peer.RobotPeer.getRGBPixels(Rectangle)|Gets the RGB values of the spe
|java.awt.peer.RobotPeer.keyPress(int)|Simulates a key press of the specified k
|java.awt.peer.RobotPeer.keyRelease(int)|Simulates a key release of the specifi
|java.awt.peer.RobotPeer.mouseMove(int,int)|Moves the mouse pointer to the spec
|java.awt.peer.RobotPeer.mousePress(int)|Simulates a mouse press with the speci
|java.awt.peer.RobotPeer.mouseRelease(int)|Simulates a mouse release with the s
|java.awt.peer.RobotPeer.mouseWheel(int)|Simulates mouse wheel action.

*java.awt.peer.RobotPeer_Description*

RobotPeer defines an interface whereby toolkits support automated testing by 
allowing native input events to be generated from Java code. 

This interface should not be directly imported by code outside the java.awt.* 
hierarchy; it is not to be considered public and is subject to change. 



*java.awt.peer.RobotPeer.dispose()*

public void dispose()

Disposes the robot peer when it is not needed anymore. 



*java.awt.peer.RobotPeer.getRGBPixel(int,int)*

public int getRGBPixel(
  int x,
  int y)

Gets the RGB value of the specified pixel on screen. 


    x - the X screen coordinate 
    y - the Y screen coordinate 

    Returns: the RGB value of the specified pixel on screen 

*java.awt.peer.RobotPeer.getRGBPixels(Rectangle)*

public int[] getRGBPixels(java.awt.Rectangle bounds)

Gets the RGB values of the specified screen area as an array. 


    bounds - the screen area to capture the RGB values from 

    Returns: the RGB values of the specified screen area 

*java.awt.peer.RobotPeer.keyPress(int)*

public void keyPress(int keycode)

Simulates a key press of the specified key. 


    keycode - the key code to press 

*java.awt.peer.RobotPeer.keyRelease(int)*

public void keyRelease(int keycode)

Simulates a key release of the specified key. 


    keycode - the key code to release 

*java.awt.peer.RobotPeer.mouseMove(int,int)*

public void mouseMove(
  int x,
  int y)

Moves the mouse pointer to the specified screen location. 


    x - the X location on screen 
    y - the Y location on screen 

*java.awt.peer.RobotPeer.mousePress(int)*

public void mousePress(int buttons)

Simulates a mouse press with the specified button(s). 


    buttons - the button mask 

*java.awt.peer.RobotPeer.mouseRelease(int)*

public void mouseRelease(int buttons)

Simulates a mouse release with the specified button(s). 


    buttons - the button mask 

*java.awt.peer.RobotPeer.mouseWheel(int)*

public void mouseWheel(int wheelAmt)

Simulates mouse wheel action. 


    wheelAmt - number of notches to move the mouse wheel 


