*javax.lang.model.util.SimpleElementVisitor7* *SimpleElementVisitor7* A simple v

public class SimpleElementVisitor7<R,P>
  extends    |javax.lang.model.util.SimpleElementVisitor6|

|javax.lang.model.util.SimpleElementVisitor7_Description|
|javax.lang.model.util.SimpleElementVisitor7_Fields|
|javax.lang.model.util.SimpleElementVisitor7_Constructors|
|javax.lang.model.util.SimpleElementVisitor7_Methods|

================================================================================

*javax.lang.model.util.SimpleElementVisitor7_Constructors*
|javax.lang.model.util.SimpleElementVisitor7()|Constructor for concrete subclas
|javax.lang.model.util.SimpleElementVisitor7(R)|Constructor for concrete subcla

*javax.lang.model.util.SimpleElementVisitor7_Methods*
|javax.lang.model.util.SimpleElementVisitor7.visitVariable(VariableElement,P)|T

*javax.lang.model.util.SimpleElementVisitor7_Description*

A simple visitor of program elements with default behavior appropriate for the 
RELEASE_7(|javax.lang.model.SourceVersion|) source version. 

Visit methods corresponding toRELEASE_7and earlier language constructs call 
defaultAction(|javax.lang.model.util.SimpleElementVisitor7|) , passing their 
arguments todefaultAction's corresponding parameters. 

Methods in this class may be overridden subject to their general contract. Note 
that annotating methods in concrete subclasses with 
@Override(|java.lang.Override|) will help ensure that methods are overridden as 
intended. 

WARNING: TheElementVisitorinterface implemented by this class may have methods 
added to it in the future to accommodate new, currently unknown, language 
structures added to future versions of the Java programming language. 
Therefore, methods whose names begin with"visit"may be added to this class in 
the future; to avoid incompatibilities, classes which extend this class should 
not declare any instance methods with names beginning with"visit". 

When such a new visit method is added, the default implementation in this class 
will be to call the visitUnknown(|javax.lang.model.util.SimpleElementVisitor7|) 
method. A new simple element visitor class will also be introduced to 
correspond to the new language level; this visitor will have different default 
behavior for the visit method in question. When the new visitor is introduced, 
all or portions of this visitor may be deprecated. 



*javax.lang.model.util.SimpleElementVisitor7()*

protected SimpleElementVisitor7()

Constructor for concrete subclasses; usesnullfor the default value. 


*javax.lang.model.util.SimpleElementVisitor7(R)*

protected SimpleElementVisitor7(R defaultValue)

Constructor for concrete subclasses; uses the argument for the default value. 

    defaultValue - the value to assign to {@link #DEFAULT_VALUE} 

*javax.lang.model.util.SimpleElementVisitor7.visitVariable(VariableElement,P)*

public |R| visitVariable(
  javax.lang.model.element.VariableElement e,
  P p)

This implementation callsdefaultAction. 


    e - {@inheritDoc} 
    p - {@inheritDoc} 

    Returns: the result of {@code defaultAction} 


