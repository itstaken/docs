*java.awt.peer.ListPeer* *ListPeer* The peer interface forList.

public interface interface ListPeer

  implements |java.awt.peer.ComponentPeer|

|java.awt.peer.ListPeer_Description|
|java.awt.peer.ListPeer_Fields|
|java.awt.peer.ListPeer_Constructors|
|java.awt.peer.ListPeer_Methods|

================================================================================

*java.awt.peer.ListPeer_Methods*
|java.awt.peer.ListPeer.add(String,int)|Adds an item to the list at the specifi
|java.awt.peer.ListPeer.delItems(int,int)|Deletes items from the list.
|java.awt.peer.ListPeer.deselect(int)|De-selects the item at the specifiedindex
|java.awt.peer.ListPeer.getMinimumSize(int)|Returns the minimum size for a list
|java.awt.peer.ListPeer.getPreferredSize(int)|Returns the preferred size for a 
|java.awt.peer.ListPeer.getSelectedIndexes()|Returns the indices of the list it
|java.awt.peer.ListPeer.makeVisible(int)|Makes sure that the item at the specif
|java.awt.peer.ListPeer.removeAll()|Removes all items from the list.
|java.awt.peer.ListPeer.select(int)|Selects the item at the specifiedindex.
|java.awt.peer.ListPeer.setMultipleMode(boolean)|Toggles multiple selection mod

*java.awt.peer.ListPeer_Description*

The peer interface for (|java.awt.List|) . 

The peer interfaces are intended only for use in porting the AWT. They are not 
intended for use by application developers, and developers should not implement 
peers nor invoke any of the peer methods directly on the peer instances. 



*java.awt.peer.ListPeer.add(String,int)*

public void add(
  java.lang.String item,
  int index)

Adds an item to the list at the specified index. 


    item - the item to add to the list 
    index - the index where to add the item into the list 

*java.awt.peer.ListPeer.delItems(int,int)*

public void delItems(
  int start,
  int end)

Deletes items from the list. All items from start to end should are deleted, 
including the item at the start and end indices. 


    start - the first item to be deleted 
    end - the last item to be deleted 

*java.awt.peer.ListPeer.deselect(int)*

public void deselect(int index)

De-selects the item at the specifiedindex. 


    index - the index of the item to de-select 

*java.awt.peer.ListPeer.getMinimumSize(int)*

public |java.awt.Dimension| getMinimumSize(int rows)

Returns the minimum size for a list with the specified number of rows. 


    rows - the number of rows 

    Returns: the minimum size of the list 

*java.awt.peer.ListPeer.getPreferredSize(int)*

public |java.awt.Dimension| getPreferredSize(int rows)

Returns the preferred size for a list with the specified number of rows. 


    rows - the number of rows 

    Returns: the preferred size of the list 

*java.awt.peer.ListPeer.getSelectedIndexes()*

public int[] getSelectedIndexes()

Returns the indices of the list items that are currently selected. The returned 
array is not required to be a copy, the callers of this method already make 
sure it is not modified. 



    Returns: the indices of the list items that are currently selected 

*java.awt.peer.ListPeer.makeVisible(int)*

public void makeVisible(int index)

Makes sure that the item at the specifiedindexis visible, by scrolling the list 
or similar. 


    index - the index of the item to make visible 

*java.awt.peer.ListPeer.removeAll()*

public void removeAll()

Removes all items from the list. 



*java.awt.peer.ListPeer.select(int)*

public void select(int index)

Selects the item at the specifiedindex. 


    index - the index of the item to select 

*java.awt.peer.ListPeer.setMultipleMode(boolean)*

public void setMultipleMode(boolean m)

Toggles multiple selection mode on or off. 


    m - {@code true} for multiple selection mode, {@code false} for single selection 
       mode 


