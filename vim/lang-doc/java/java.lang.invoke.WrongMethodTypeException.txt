*java.lang.invoke.WrongMethodTypeException* *WrongMethodTypeException* Thrown to

public class WrongMethodTypeException
  extends    |java.lang.RuntimeException|

|java.lang.invoke.WrongMethodTypeException_Description|
|java.lang.invoke.WrongMethodTypeException_Fields|
|java.lang.invoke.WrongMethodTypeException_Constructors|
|java.lang.invoke.WrongMethodTypeException_Methods|

================================================================================

*java.lang.invoke.WrongMethodTypeException_Constructors*
|java.lang.invoke.WrongMethodTypeException()|Constructs aWrongMethodTypeExcepti
|java.lang.invoke.WrongMethodTypeException(String)|Constructs aWrongMethodTypeE

*java.lang.invoke.WrongMethodTypeException_Description*

Thrown to indicate that code has attempted to call a method handle via the 
wrong method type. As with the bytecode representation of normal Java method 
calls, method handle calls are strongly typed to a specific type descriptor 
associated with a call site. 

This exception may also be thrown when two method handles are composed, and the 
system detects that their types cannot be matched up correctly. This amounts to 
an early evaluation of the type mismatch, at method handle construction time, 
instead of when the mismatched method handle is called. 



*java.lang.invoke.WrongMethodTypeException()*

public WrongMethodTypeException()

Constructs aWrongMethodTypeExceptionwith no detail message. 


*java.lang.invoke.WrongMethodTypeException(String)*

public WrongMethodTypeException(java.lang.String s)

Constructs aWrongMethodTypeExceptionwith the specified detail message. 

    s - the detail message. 

